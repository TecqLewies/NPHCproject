<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.1 on win32)" generated="20230223 13:47:36.264" rpa="false" schemaversion="3">
<suite id="s1" name="TestCases" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases">
<suite id="s1-s1" name="UserStory1" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory1.robot">
<test id="s1-s1-t1" name="Valid data" line="16">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.542" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.541" endtime="20230223 13:47:36.542"/>
</kw>
<msg timestamp="20230223 13:47:36.543" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.541" endtime="20230223 13:47:36.543"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.544" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.544" endtime="20230223 13:47:36.544"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.545" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.545" endtime="20230223 13:47:36.545"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.554" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.554" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.554" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.546" endtime="20230223 13:47:36.554"/>
</kw>
<msg timestamp="20230223 13:47:36.555" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.543" endtime="20230223 13:47:36.555"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.557" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:47:36.556" endtime="20230223 13:47:36.557"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.558" endtime="20230223 13:47:36.558"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.556" endtime="20230223 13:47:36.558"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.561" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.561" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:47:36.561" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.559" endtime="20230223 13:47:36.561"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.565" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:47:36.562" endtime="20230223 13:47:36.565"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.566" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:47:36.565" endtime="20230223 13:47:36.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.566" endtime="20230223 13:47:36.566"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.558" endtime="20230223 13:47:36.566"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.541" endtime="20230223 13:47:36.567"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.570" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.570" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.567" endtime="20230223 13:47:36.570"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.539" endtime="20230223 13:47:36.571"/>
</test>
<test id="s1-s1-t2" name="Invalid headerType" line="18">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_xml}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_unsupportedMediaType}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.578" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.578" endtime="20230223 13:47:36.578"/>
</kw>
<msg timestamp="20230223 13:47:36.579" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.577" endtime="20230223 13:47:36.579"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.580" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.580" endtime="20230223 13:47:36.580"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.581" level="INFO">${header} = {'Content-Type': 'application/xml'}</msg>
<status status="PASS" starttime="20230223 13:47:36.581" endtime="20230223 13:47:36.581"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.586" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/xml', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.586" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=415, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body={"timestamp":"2023-02-23T05:47:36.584+0000","status":415,"error":"Unsupported Media Type","message":"Content type 'application/xml;charset=UTF-8' not supported","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.586" level="INFO">${response} = &lt;Response [415]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.582" endtime="20230223 13:47:36.586"/>
</kw>
<msg timestamp="20230223 13:47:36.587" level="INFO">${response} = &lt;Response [415]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.580" endtime="20230223 13:47:36.587"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.589" level="INFO">${actual_status_code} = 415</msg>
<status status="PASS" starttime="20230223 13:47:36.588" endtime="20230223 13:47:36.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.589" endtime="20230223 13:47:36.589"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.587" endtime="20230223 13:47:36.589"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.592" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.592" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.590" endtime="20230223 13:47:36.592"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.594" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.593" endtime="20230223 13:47:36.594"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.595" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.594" endtime="20230223 13:47:36.595"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.595" endtime="20230223 13:47:36.596"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.590" endtime="20230223 13:47:36.596"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.577" endtime="20230223 13:47:36.596"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.598" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.598" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.596" endtime="20230223 13:47:36.598"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.576" endtime="20230223 13:47:36.599"/>
</test>
<test id="s1-s1-t3" name="Invalid data: empty request body" line="20">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${genderEmpty}</arg>
<arg>${nameEmpty}</arg>
<arg>${natidEmpty}</arg>
<arg>${salaryEmpty}</arg>
<arg>${taxEmpty}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.606" level="INFO">${request_body} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:36.605" endtime="20230223 13:47:36.606"/>
</kw>
<msg timestamp="20230223 13:47:36.606" level="INFO">${request_body} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:36.605" endtime="20230223 13:47:36.606"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.607" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.607" endtime="20230223 13:47:36.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.608" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.608" endtime="20230223 13:47:36.608"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.613" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '80'} 
 body=b'{"birthday": "", "gender": "", "name": "", "natid": "", "salary": "", "tax": ""}' 
 </msg>
<msg timestamp="20230223 13:47:36.614" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.612+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.614" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.609" endtime="20230223 13:47:36.614"/>
</kw>
<msg timestamp="20230223 13:47:36.615" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.607" endtime="20230223 13:47:36.615"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.616" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.615" endtime="20230223 13:47:36.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.617" endtime="20230223 13:47:36.617"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.615" endtime="20230223 13:47:36.617"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.621" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.621" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.621" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.618" endtime="20230223 13:47:36.621"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.622" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.622" endtime="20230223 13:47:36.622"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.623" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.623" endtime="20230223 13:47:36.623"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.624" endtime="20230223 13:47:36.624"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.617" endtime="20230223 13:47:36.624"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.604" endtime="20230223 13:47:36.624"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.627" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.627" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.625" endtime="20230223 13:47:36.627"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.604" endtime="20230223 13:47:36.628"/>
</test>
<test id="s1-s1-t4" name="Invalid data: empty field birthday" line="22">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.634" level="INFO">${request_body} = {'birthday': '', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.634" endtime="20230223 13:47:36.635"/>
</kw>
<msg timestamp="20230223 13:47:36.635" level="INFO">${request_body} = {'birthday': '', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.634" endtime="20230223 13:47:36.635"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.636" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.636" endtime="20230223 13:47:36.637"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.637" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.637" endtime="20230223 13:47:36.637"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.642" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body=b'{"birthday": "", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.642" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.641+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.643" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.638" endtime="20230223 13:47:36.643"/>
</kw>
<msg timestamp="20230223 13:47:36.643" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.636" endtime="20230223 13:47:36.643"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.645" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.644" endtime="20230223 13:47:36.645"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.646" endtime="20230223 13:47:36.646"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.644" endtime="20230223 13:47:36.646"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.649" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.649" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.649" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.646" endtime="20230223 13:47:36.650"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.651" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.650" endtime="20230223 13:47:36.651"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.652" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.652" endtime="20230223 13:47:36.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.653" endtime="20230223 13:47:36.653"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.646" endtime="20230223 13:47:36.653"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.633" endtime="20230223 13:47:36.654"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.656" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.656" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.654" endtime="20230223 13:47:36.656"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.633" endtime="20230223 13:47:36.657"/>
</test>
<test id="s1-s1-t5" name="Invalid data: empty field gender" line="24">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderEmpty}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.664" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.664" endtime="20230223 13:47:36.664"/>
</kw>
<msg timestamp="20230223 13:47:36.665" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.663" endtime="20230223 13:47:36.665"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.666" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.666" endtime="20230223 13:47:36.666"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.667" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.666" endtime="20230223 13:47:36.667"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.670" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"birthday": "01012007", "gender": "", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.671" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.671" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:36.667" endtime="20230223 13:47:36.672"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.665" endtime="20230223 13:47:36.673"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.673" endtime="20230223 13:47:36.673"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.673" endtime="20230223 13:47:36.673"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.662" endtime="20230223 13:47:36.673"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.676" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.676" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.674" endtime="20230223 13:47:36.676"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:36.662" endtime="20230223 13:47:36.677">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t6" name="Invalid data: empty field name" line="26">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameEmpty}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.684" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.684" endtime="20230223 13:47:36.684"/>
</kw>
<msg timestamp="20230223 13:47:36.685" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.683" endtime="20230223 13:47:36.685"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.686" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.686" endtime="20230223 13:47:36.697"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.698" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.698" endtime="20230223 13:47:36.698"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.702" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '108'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.702" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.702" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:36.699" endtime="20230223 13:47:36.703"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.685" endtime="20230223 13:47:36.704"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.704" endtime="20230223 13:47:36.704"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.704" endtime="20230223 13:47:36.704"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.683" endtime="20230223 13:47:36.704"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.707" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.707" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.705" endtime="20230223 13:47:36.707"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:36.683" endtime="20230223 13:47:36.709">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t7" name="Invalid data: empty field natid" line="28">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natidEmpty}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.716" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.716" endtime="20230223 13:47:36.716"/>
</kw>
<msg timestamp="20230223 13:47:36.717" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.715" endtime="20230223 13:47:36.717"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.718" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.718" endtime="20230223 13:47:36.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.719" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.718" endtime="20230223 13:47:36.719"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.723" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.723" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.723" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:36.720" endtime="20230223 13:47:36.724"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.717" endtime="20230223 13:47:36.725"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.726" endtime="20230223 13:47:36.726"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.726" endtime="20230223 13:47:36.726"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.715" endtime="20230223 13:47:36.726"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.729" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.729" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.727" endtime="20230223 13:47:36.729"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:36.714" endtime="20230223 13:47:36.730">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t8" name="Invalid data: empty field salary" line="30">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salaryEmpty}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.737" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.737" endtime="20230223 13:47:36.737"/>
</kw>
<msg timestamp="20230223 13:47:36.738" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.736" endtime="20230223 13:47:36.738"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.739" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.739" endtime="20230223 13:47:36.739"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.740" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.740" endtime="20230223 13:47:36.740"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.745" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.745" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.744+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.746" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.741" endtime="20230223 13:47:36.746"/>
</kw>
<msg timestamp="20230223 13:47:36.747" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.738" endtime="20230223 13:47:36.747"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.749" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.748" endtime="20230223 13:47:36.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.749" endtime="20230223 13:47:36.749"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.747" endtime="20230223 13:47:36.750"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.753" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.753" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.753" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.750" endtime="20230223 13:47:36.753"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.755" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.754" endtime="20230223 13:47:36.755"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.756" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.755" endtime="20230223 13:47:36.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.756" endtime="20230223 13:47:36.756"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.750" endtime="20230223 13:47:36.757"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.736" endtime="20230223 13:47:36.757"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.759" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.759" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.757" endtime="20230223 13:47:36.759"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.735" endtime="20230223 13:47:36.760"/>
</test>
<test id="s1-s1-t9" name="Invalid data: empty field tax" line="32">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxEmpty}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.767" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:36.767" endtime="20230223 13:47:36.767"/>
</kw>
<msg timestamp="20230223 13:47:36.768" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:36.766" endtime="20230223 13:47:36.768"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.769" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.769" endtime="20230223 13:47:36.769"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.770" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.769" endtime="20230223 13:47:36.770"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.775" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": ""}' 
 </msg>
<msg timestamp="20230223 13:47:36.775" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.773+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.775" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.770" endtime="20230223 13:47:36.775"/>
</kw>
<msg timestamp="20230223 13:47:36.776" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.768" endtime="20230223 13:47:36.776"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.778" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.777" endtime="20230223 13:47:36.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.779" endtime="20230223 13:47:36.779"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.777" endtime="20230223 13:47:36.779"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.782" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.782" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.782" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.779" endtime="20230223 13:47:36.782"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.784" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.783" endtime="20230223 13:47:36.784"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.785" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.785" endtime="20230223 13:47:36.785"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.785" endtime="20230223 13:47:36.786"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.779" endtime="20230223 13:47:36.786"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.766" endtime="20230223 13:47:36.786"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.788" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.788" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.786" endtime="20230223 13:47:36.788"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.765" endtime="20230223 13:47:36.789"/>
</test>
<test id="s1-s1-t10" name="Invalid data: invalid date format" line="34">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdayInvalidFormat}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.795" level="INFO">${request_body} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.795" endtime="20230223 13:47:36.795"/>
</kw>
<msg timestamp="20230223 13:47:36.796" level="INFO">${request_body} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.795" endtime="20230223 13:47:36.796"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.797" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.797" endtime="20230223 13:47:36.797"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.798" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.798" endtime="20230223 13:47:36.798"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.803" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "20200101", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.803" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.801+0000","status":500,"error":"Internal Server Error","message":"Text '20200101' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 20","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.803" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.798" endtime="20230223 13:47:36.803"/>
</kw>
<msg timestamp="20230223 13:47:36.804" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.797" endtime="20230223 13:47:36.804"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.806" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.805" endtime="20230223 13:47:36.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.806" endtime="20230223 13:47:36.807"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.805" endtime="20230223 13:47:36.807"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.810" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.810" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.810" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.807" endtime="20230223 13:47:36.810"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.812" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.811" endtime="20230223 13:47:36.812"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.812" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.812" endtime="20230223 13:47:36.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.813" endtime="20230223 13:47:36.813"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.807" endtime="20230223 13:47:36.813"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.794" endtime="20230223 13:47:36.814"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.816" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.816" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.814" endtime="20230223 13:47:36.816"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.794" endtime="20230223 13:47:36.817"/>
</test>
<test id="s1-s1-t11" name="Invalid data: invalid date char" line="36">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdayChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.823" level="INFO">${request_body} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.823" endtime="20230223 13:47:36.823"/>
</kw>
<msg timestamp="20230223 13:47:36.824" level="INFO">${request_body} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.822" endtime="20230223 13:47:36.824"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.825" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.825" endtime="20230223 13:47:36.825"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.826" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.826" endtime="20230223 13:47:36.826"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.831" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "abcdabab", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.831" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.829+0000","status":500,"error":"Internal Server Error","message":"Text 'abcdabab' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.831" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.827" endtime="20230223 13:47:36.831"/>
</kw>
<msg timestamp="20230223 13:47:36.832" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.825" endtime="20230223 13:47:36.832"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.833" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.832" endtime="20230223 13:47:36.833"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.834" endtime="20230223 13:47:36.834"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.832" endtime="20230223 13:47:36.834"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.837" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.837" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.837" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.835" endtime="20230223 13:47:36.837"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.839" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.838" endtime="20230223 13:47:36.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.840" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.840" endtime="20230223 13:47:36.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.840" endtime="20230223 13:47:36.841"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.834" endtime="20230223 13:47:36.841"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.822" endtime="20230223 13:47:36.841"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.843" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.843" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.841" endtime="20230223 13:47:36.843"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.822" endtime="20230223 13:47:36.844"/>
</test>
<test id="s1-s1-t12" name="Invalid data: invalid date !@#" line="38">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdaySpecialChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.852" level="INFO">${request_body} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.851" endtime="20230223 13:47:36.852"/>
</kw>
<msg timestamp="20230223 13:47:36.853" level="INFO">${request_body} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.851" endtime="20230223 13:47:36.853"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.854" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.854" endtime="20230223 13:47:36.854"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.855" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.855" endtime="20230223 13:47:36.855"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.860" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "!@#$!@!@", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.860" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.859+0000","status":500,"error":"Internal Server Error","message":"Text '!@#$!@!@' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.860" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.855" endtime="20230223 13:47:36.860"/>
</kw>
<msg timestamp="20230223 13:47:36.861" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.853" endtime="20230223 13:47:36.861"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.863" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.863" endtime="20230223 13:47:36.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.864" endtime="20230223 13:47:36.864"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.862" endtime="20230223 13:47:36.865"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.868" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.868" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.865" endtime="20230223 13:47:36.868"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.870" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.869" endtime="20230223 13:47:36.870"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.871" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.870" endtime="20230223 13:47:36.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.871" endtime="20230223 13:47:36.871"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.865" endtime="20230223 13:47:36.871"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.850" endtime="20230223 13:47:36.872"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.874" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.874" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.872" endtime="20230223 13:47:36.874"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.850" endtime="20230223 13:47:36.875"/>
</test>
<test id="s1-s1-t13" name="Invalid data: invalid gender Male" line="40">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderMale}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.881" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.881" endtime="20230223 13:47:36.882"/>
</kw>
<msg timestamp="20230223 13:47:36.882" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.881" endtime="20230223 13:47:36.882"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.883" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.883" endtime="20230223 13:47:36.883"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.884" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.884" endtime="20230223 13:47:36.884"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.890" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "Male", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.890" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.889+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.891" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.885" endtime="20230223 13:47:36.891"/>
</kw>
<msg timestamp="20230223 13:47:36.892" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.883" endtime="20230223 13:47:36.892"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.893" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.892" endtime="20230223 13:47:36.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.894" endtime="20230223 13:47:36.894"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.892" endtime="20230223 13:47:36.894"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.897" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.897" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.897" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.894" endtime="20230223 13:47:36.897"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.899" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.898" endtime="20230223 13:47:36.899"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.900" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.900" endtime="20230223 13:47:36.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.901" endtime="20230223 13:47:36.901"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.894" endtime="20230223 13:47:36.901"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.880" endtime="20230223 13:47:36.901"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.903" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.903" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.901" endtime="20230223 13:47:36.903"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.880" endtime="20230223 13:47:36.904"/>
</test>
<test id="s1-s1-t14" name="Invalid data: invalid gender W" line="42">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderW}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.911" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.910" endtime="20230223 13:47:36.911"/>
</kw>
<msg timestamp="20230223 13:47:36.911" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.910" endtime="20230223 13:47:36.911"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.912" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.912" endtime="20230223 13:47:36.913"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.913" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.913" endtime="20230223 13:47:36.913"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.917" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "W", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.917" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.917" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:36.914" endtime="20230223 13:47:36.918"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.912" endtime="20230223 13:47:36.918"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.919" endtime="20230223 13:47:36.919"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.919" endtime="20230223 13:47:36.919"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.909" endtime="20230223 13:47:36.919"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.922" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.922" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.919" endtime="20230223 13:47:36.922"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:36.909" endtime="20230223 13:47:36.922">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t15" name="Invalid data: invalid gender 123" line="44">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderNum}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.929" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.929" endtime="20230223 13:47:36.929"/>
</kw>
<msg timestamp="20230223 13:47:36.930" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.929" endtime="20230223 13:47:36.930"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.931" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.931" endtime="20230223 13:47:36.931"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.932" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.932" endtime="20230223 13:47:36.932"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.938" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"birthday": "01012007", "gender": "123", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.938" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.937+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.938" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.933" endtime="20230223 13:47:36.939"/>
</kw>
<msg timestamp="20230223 13:47:36.939" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.931" endtime="20230223 13:47:36.939"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.941" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.940" endtime="20230223 13:47:36.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.942" endtime="20230223 13:47:36.942"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.940" endtime="20230223 13:47:36.942"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.945" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.945" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.945" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.942" endtime="20230223 13:47:36.945"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.947" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.946" endtime="20230223 13:47:36.947"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.948" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.947" endtime="20230223 13:47:36.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.948" endtime="20230223 13:47:36.948"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.942" endtime="20230223 13:47:36.949"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.928" endtime="20230223 13:47:36.949"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.951" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.951" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.949" endtime="20230223 13:47:36.951"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.928" endtime="20230223 13:47:36.952"/>
</test>
<test id="s1-s1-t16" name="Invalid data: invalid gender !@#" line="46">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderSpecialChar}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.959" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.958" endtime="20230223 13:47:36.959"/>
</kw>
<msg timestamp="20230223 13:47:36.959" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.958" endtime="20230223 13:47:36.960"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.961" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.960" endtime="20230223 13:47:36.961"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.961" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.961" endtime="20230223 13:47:36.961"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.968" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"birthday": "01012007", "gender": "!@#", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.968" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:36.966+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:36.968" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.962" endtime="20230223 13:47:36.968"/>
</kw>
<msg timestamp="20230223 13:47:36.969" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.960" endtime="20230223 13:47:36.969"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.970" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:36.969" endtime="20230223 13:47:36.970"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.971" endtime="20230223 13:47:36.971"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.969" endtime="20230223 13:47:36.971"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.974" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.974" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:36.974" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:36.972" endtime="20230223 13:47:36.974"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:36.976" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.975" endtime="20230223 13:47:36.976"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:36.977" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:36.977" endtime="20230223 13:47:36.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:36.978" endtime="20230223 13:47:36.979"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.971" endtime="20230223 13:47:36.979"/>
</kw>
<status status="PASS" starttime="20230223 13:47:36.957" endtime="20230223 13:47:36.979"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.981" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:36.981" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.979" endtime="20230223 13:47:36.981"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:36.957" endtime="20230223 13:47:36.982"/>
</test>
<test id="s1-s1-t17" name="Invalid data: invalid name 123" line="48">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameNum}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.988" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '123', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.988" endtime="20230223 13:47:36.988"/>
</kw>
<msg timestamp="20230223 13:47:36.989" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '123', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:36.987" endtime="20230223 13:47:36.989"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:36.990" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:36.990" endtime="20230223 13:47:36.990"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:36.991" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:36.991" endtime="20230223 13:47:36.991"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:36.995" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "123", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:36.995" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:36.995" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:36.992" endtime="20230223 13:47:36.995"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.990" endtime="20230223 13:47:36.996"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.996" endtime="20230223 13:47:36.997"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:36.997" endtime="20230223 13:47:36.997"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:36.987" endtime="20230223 13:47:36.997"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.000" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.000" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:36.997" endtime="20230223 13:47:37.000"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:36.987" endtime="20230223 13:47:37.001">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t18" name="Invalid data: invalid name !@#" line="50">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameSpecialChar}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.007" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '!@#', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.007" endtime="20230223 13:47:37.007"/>
</kw>
<msg timestamp="20230223 13:47:37.008" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '!@#', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.007" endtime="20230223 13:47:37.008"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.009" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.009" endtime="20230223 13:47:37.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.010" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.010" endtime="20230223 13:47:37.010"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.014" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "!@#", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.014" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.014" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.010" endtime="20230223 13:47:37.014"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.009" endtime="20230223 13:47:37.015"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.015" endtime="20230223 13:47:37.015"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.015" endtime="20230223 13:47:37.015"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.006" endtime="20230223 13:47:37.016"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.018" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.018" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.016" endtime="20230223 13:47:37.018"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:37.006" endtime="20230223 13:47:37.019">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t19" name="Invalid data: invalid natid !@#" line="52">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natidSpecialChar}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.026" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '!@#', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.025" endtime="20230223 13:47:37.026"/>
</kw>
<msg timestamp="20230223 13:47:37.027" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '!@#', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.025" endtime="20230223 13:47:37.027"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.028" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.027" endtime="20230223 13:47:37.028"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.029" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.028" endtime="20230223 13:47:37.029"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.032" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "!@#", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.032" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.032" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.029" endtime="20230223 13:47:37.033"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.027" endtime="20230223 13:47:37.034"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.034" endtime="20230223 13:47:37.034"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.034" endtime="20230223 13:47:37.035"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.025" endtime="20230223 13:47:37.035"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.037" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.037" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.035" endtime="20230223 13:47:37.037"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:37.024" endtime="20230223 13:47:37.038">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t20" name="Invalid data: invalid salary abcd" line="54">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salaryChar}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.045" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': 'abcd', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.044" endtime="20230223 13:47:37.045"/>
</kw>
<msg timestamp="20230223 13:47:37.045" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': 'abcd', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.044" endtime="20230223 13:47:37.045"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.046" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.046" endtime="20230223 13:47:37.046"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.047" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.047" endtime="20230223 13:47:37.047"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.053" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "abcd", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.053" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.052+0000","status":500,"error":"Internal Server Error","message":"Character a is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:37.053" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.048" endtime="20230223 13:47:37.053"/>
</kw>
<msg timestamp="20230223 13:47:37.054" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.046" endtime="20230223 13:47:37.054"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.056" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.055" endtime="20230223 13:47:37.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.057" endtime="20230223 13:47:37.057"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.055" endtime="20230223 13:47:37.057"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.060" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.060" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.058" endtime="20230223 13:47:37.060"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.062" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.061" endtime="20230223 13:47:37.062"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.063" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.063" endtime="20230223 13:47:37.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.063" endtime="20230223 13:47:37.063"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.057" endtime="20230223 13:47:37.064"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.044" endtime="20230223 13:47:37.064"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.066" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.066" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.064" endtime="20230223 13:47:37.066"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:37.043" endtime="20230223 13:47:37.067"/>
</test>
<test id="s1-s1-t21" name="Invalid data: invalid salary !@#" line="56">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salarySpecialChar}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.073" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '!@#', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.073" endtime="20230223 13:47:37.073"/>
</kw>
<msg timestamp="20230223 13:47:37.075" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '!@#', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.073" endtime="20230223 13:47:37.075"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.076" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.076" endtime="20230223 13:47:37.076"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.077" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.077" endtime="20230223 13:47:37.077"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.082" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "!@#", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.082" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.080+0000","status":500,"error":"Internal Server Error","message":"Character ! is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:37.082" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.077" endtime="20230223 13:47:37.082"/>
</kw>
<msg timestamp="20230223 13:47:37.083" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.075" endtime="20230223 13:47:37.083"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.085" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.084" endtime="20230223 13:47:37.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.086" endtime="20230223 13:47:37.086"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.084" endtime="20230223 13:47:37.086"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.089" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.089" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.089" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.086" endtime="20230223 13:47:37.089"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.091" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.090" endtime="20230223 13:47:37.091"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.092" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.091" endtime="20230223 13:47:37.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.092" endtime="20230223 13:47:37.092"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.086" endtime="20230223 13:47:37.092"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.072" endtime="20230223 13:47:37.093"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.095" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.095" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.093" endtime="20230223 13:47:37.095"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:37.072" endtime="20230223 13:47:37.095"/>
</test>
<test id="s1-s1-t22" name="Invalid data: invalid tax abcd" line="58">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxChar}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.102" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': 'abcd'}</msg>
<status status="PASS" starttime="20230223 13:47:37.102" endtime="20230223 13:47:37.102"/>
</kw>
<msg timestamp="20230223 13:47:37.103" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': 'abcd'}</msg>
<status status="PASS" starttime="20230223 13:47:37.101" endtime="20230223 13:47:37.103"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.104" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.103" endtime="20230223 13:47:37.104"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.104" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.104" endtime="20230223 13:47:37.104"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.109" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "abcd"}' 
 </msg>
<msg timestamp="20230223 13:47:37.109" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.108+0000","status":500,"error":"Internal Server Error","message":"Character a is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:37.109" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.105" endtime="20230223 13:47:37.109"/>
</kw>
<msg timestamp="20230223 13:47:37.110" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.103" endtime="20230223 13:47:37.110"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.112" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.111" endtime="20230223 13:47:37.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.113" endtime="20230223 13:47:37.113"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.111" endtime="20230223 13:47:37.113"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.117" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.117" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.114" endtime="20230223 13:47:37.117"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.118" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.118" endtime="20230223 13:47:37.119"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.119" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.119" endtime="20230223 13:47:37.119"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.120" endtime="20230223 13:47:37.120"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.113" endtime="20230223 13:47:37.120"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.101" endtime="20230223 13:47:37.120"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.123" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.123" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.121" endtime="20230223 13:47:37.123"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:37.100" endtime="20230223 13:47:37.124"/>
</test>
<test id="s1-s1-t23" name="Invalid data: invalid tax !@#" line="60">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxSpecialChar}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.130" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '!@#'}</msg>
<status status="PASS" starttime="20230223 13:47:37.130" endtime="20230223 13:47:37.130"/>
</kw>
<msg timestamp="20230223 13:47:37.131" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '!@#'}</msg>
<status status="PASS" starttime="20230223 13:47:37.130" endtime="20230223 13:47:37.131"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.132" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.132" endtime="20230223 13:47:37.132"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.133" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.132" endtime="20230223 13:47:37.133"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.138" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "!@#"}' 
 </msg>
<msg timestamp="20230223 13:47:37.138" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.136+0000","status":500,"error":"Internal Server Error","message":"Character ! is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:47:37.138" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.133" endtime="20230223 13:47:37.138"/>
</kw>
<msg timestamp="20230223 13:47:37.139" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.131" endtime="20230223 13:47:37.139"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.140" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.139" endtime="20230223 13:47:37.140"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.141" endtime="20230223 13:47:37.141"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.139" endtime="20230223 13:47:37.141"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.144" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.144" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.145" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.141" endtime="20230223 13:47:37.145"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.146" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.145" endtime="20230223 13:47:37.146"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.147" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.147" endtime="20230223 13:47:37.147"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.148" endtime="20230223 13:47:37.148"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.141" endtime="20230223 13:47:37.148"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.129" endtime="20230223 13:47:37.148"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.151" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.151" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.149" endtime="20230223 13:47:37.151"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="PASS" starttime="20230223 13:47:37.129" endtime="20230223 13:47:37.152"/>
</test>
<test id="s1-s1-t24" name="Logical error: Birthdate too far in past" line="62">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdateTooFarInPast}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.158" level="INFO">${request_body} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.158" endtime="20230223 13:47:37.158"/>
</kw>
<msg timestamp="20230223 13:47:37.159" level="INFO">${request_body} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.158" endtime="20230223 13:47:37.159"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.160" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.160" endtime="20230223 13:47:37.160"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.161" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.161" endtime="20230223 13:47:37.161"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.165" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011873", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.165" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.165" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.161" endtime="20230223 13:47:37.165"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.160" endtime="20230223 13:47:37.166"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.166" endtime="20230223 13:47:37.166"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.167" endtime="20230223 13:47:37.167"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.157" endtime="20230223 13:47:37.167"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.169" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.169" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.167" endtime="20230223 13:47:37.170"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:37.157" endtime="20230223 13:47:37.170">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t25" name="Logical error: Birthdate in the future" line="64">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdateInFuture}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.178" level="INFO">${request_body} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.177" endtime="20230223 13:47:37.178"/>
</kw>
<msg timestamp="20230223 13:47:37.178" level="INFO">${request_body} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.177" endtime="20230223 13:47:37.178"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.179" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.179" endtime="20230223 13:47:37.180"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.180" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.180" endtime="20230223 13:47:37.180"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.184" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012030", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.184" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.184" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.181" endtime="20230223 13:47:37.185"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.179" endtime="20230223 13:47:37.185"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.186" endtime="20230223 13:47:37.186"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.186" endtime="20230223 13:47:37.186"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.176" endtime="20230223 13:47:37.186"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.189" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.189" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.186" endtime="20230223 13:47:37.189"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:37.176" endtime="20230223 13:47:37.190">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s1-t26" name="Logical error: Age too young" line="66">
<kw name="Insert single record">
<arg>${base_url}</arg>
<arg>${birthdateAgeTooYoung}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US1.robot file seeks to test the endpoint /calculator/insert
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.196" level="INFO">${request_body} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.196" endtime="20230223 13:47:37.196"/>
</kw>
<msg timestamp="20230223 13:47:37.197" level="INFO">${request_body} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.196" endtime="20230223 13:47:37.197"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.198" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.198" endtime="20230223 13:47:37.198"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.199" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.199" endtime="20230223 13:47:37.199"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.203" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012018", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:47:37.203" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.203" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.199" endtime="20230223 13:47:37.203"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.198" endtime="20230223 13:47:37.204"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.205" endtime="20230223 13:47:37.205"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.205" endtime="20230223 13:47:37.205"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.195" endtime="20230223 13:47:37.205"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.208" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.208" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.205" endtime="20230223 13:47:37.208"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US1</tag>
<status status="FAIL" starttime="20230223 13:47:37.195" endtime="20230223 13:47:37.209">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<status status="FAIL" starttime="20230223 13:47:36.346" endtime="20230223 13:47:37.214"/>
</suite>
<suite id="s1-s2" name="UserStory2" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory2.robot">
<test id="s1-s2-t1" name="Valid data" line="17">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_valid}</arg>
<arg>${multiple}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.257" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.257" endtime="20230223 13:47:37.257"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.258" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.258" endtime="20230223 13:47:37.258"/>
</kw>
<msg timestamp="20230223 13:47:37.259" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.257" endtime="20230223 13:47:37.259"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.260" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.260" endtime="20230223 13:47:37.260"/>
</kw>
<msg timestamp="20230223 13:47:37.261" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.259" endtime="20230223 13:47:37.261"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.261" endtime="20230223 13:47:37.261"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.261" endtime="20230223 13:47:37.262"/>
</kw>
<msg timestamp="20230223 13:47:37.262" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.256" endtime="20230223 13:47:37.262"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.263" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.263" endtime="20230223 13:47:37.263"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.264" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.263" endtime="20230223 13:47:37.264"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.268" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.268" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.268" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.264" endtime="20230223 13:47:37.268"/>
</kw>
<msg timestamp="20230223 13:47:37.269" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.262" endtime="20230223 13:47:37.269"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.271" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:47:37.270" endtime="20230223 13:47:37.271"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.272" endtime="20230223 13:47:37.272"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.270" endtime="20230223 13:47:37.272"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.276" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.276" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"},{"natid":"s876$$$$$$","name":"TesterA","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:47:37.276" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.273" endtime="20230223 13:47:37.276"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.278" level="INFO">${number_of_rows_from_db} = 2</msg>
<status status="PASS" starttime="20230223 13:47:37.277" endtime="20230223 13:47:37.278"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.279" level="INFO">${number_of_rows_from_db} = 2</msg>
<status status="PASS" starttime="20230223 13:47:37.279" endtime="20230223 13:47:37.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.280" endtime="20230223 13:47:37.280"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.272" endtime="20230223 13:47:37.281"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.256" endtime="20230223 13:47:37.281"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.284" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.284" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.281" endtime="20230223 13:47:37.284"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.255" endtime="20230223 13:47:37.285"/>
</test>
<test id="s1-s2-t2" name="Invalid data: Invalid headerType" line="19">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_xml}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_unsupportedMediaType}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.293" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.293" endtime="20230223 13:47:37.293"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.295" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.294" endtime="20230223 13:47:37.295"/>
</kw>
<msg timestamp="20230223 13:47:37.295" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.294" endtime="20230223 13:47:37.295"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.297" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.296" endtime="20230223 13:47:37.297"/>
</kw>
<msg timestamp="20230223 13:47:37.298" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.296" endtime="20230223 13:47:37.298"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.299" endtime="20230223 13:47:37.299"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.299" endtime="20230223 13:47:37.299"/>
</kw>
<msg timestamp="20230223 13:47:37.300" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.292" endtime="20230223 13:47:37.300"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.301" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.301" endtime="20230223 13:47:37.302"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.302" level="INFO">${header} = {'Content-Type': 'application/xml'}</msg>
<status status="PASS" starttime="20230223 13:47:37.302" endtime="20230223 13:47:37.302"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.307" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/xml', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.307" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=415, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body={"timestamp":"2023-02-23T05:47:37.305+0000","status":415,"error":"Unsupported Media Type","message":"Content type 'application/xml;charset=UTF-8' not supported","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.307" level="INFO">${response} = &lt;Response [415]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.303" endtime="20230223 13:47:37.307"/>
</kw>
<msg timestamp="20230223 13:47:37.308" level="INFO">${response} = &lt;Response [415]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.301" endtime="20230223 13:47:37.308"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.310" level="INFO">${actual_status_code} = 415</msg>
<status status="PASS" starttime="20230223 13:47:37.309" endtime="20230223 13:47:37.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.311" endtime="20230223 13:47:37.312"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.308" endtime="20230223 13:47:37.312"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.315" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.315" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.315" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.312" endtime="20230223 13:47:37.315"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.317" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.316" endtime="20230223 13:47:37.318"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.318" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.318" endtime="20230223 13:47:37.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.319" endtime="20230223 13:47:37.320"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.312" endtime="20230223 13:47:37.320"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.292" endtime="20230223 13:47:37.320"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.322" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.322" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.320" endtime="20230223 13:47:37.322"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.291" endtime="20230223 13:47:37.323"/>
</test>
<test id="s1-s2-t3" name="Invalid data: Empty multiple persons data" line="21">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${genderEmpty}</arg>
<arg>${nameEmpty}</arg>
<arg>${natidEmpty}</arg>
<arg>${salaryEmpty}</arg>
<arg>${taxEmpty}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${genderEmpty}</arg>
<arg>${nameEmpty}</arg>
<arg>${natidEmpty}</arg>
<arg>${salaryEmpty}</arg>
<arg>${taxEmpty}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.331" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.331" endtime="20230223 13:47:37.331"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.333" level="INFO">${request_body} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.333" endtime="20230223 13:47:37.333"/>
</kw>
<msg timestamp="20230223 13:47:37.334" level="INFO">${dict1} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.332" endtime="20230223 13:47:37.334"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.335" level="INFO">${request_body} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.335" endtime="20230223 13:47:37.335"/>
</kw>
<msg timestamp="20230223 13:47:37.336" level="INFO">${dict2} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.334" endtime="20230223 13:47:37.336"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.336" endtime="20230223 13:47:37.337"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.337" endtime="20230223 13:47:37.337"/>
</kw>
<msg timestamp="20230223 13:47:37.337" level="INFO">${request_body} = [{'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}, {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}]</msg>
<status status="PASS" starttime="20230223 13:47:37.330" endtime="20230223 13:47:37.337"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.338" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.338" endtime="20230223 13:47:37.339"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.340" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.339" endtime="20230223 13:47:37.340"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.345" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '164'} 
 body=b'[{"birthday": "", "gender": "", "name": "", "natid": "", "salary": "", "tax": ""}, {"birthday": "", "gender": "", "name": "", "natid": "", "salary": "", "tax": ""}]' 
 </msg>
<msg timestamp="20230223 13:47:37.345" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.344+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.346" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.341" endtime="20230223 13:47:37.346"/>
</kw>
<msg timestamp="20230223 13:47:37.346" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.338" endtime="20230223 13:47:37.346"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.348" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.347" endtime="20230223 13:47:37.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.349" endtime="20230223 13:47:37.349"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.347" endtime="20230223 13:47:37.349"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.353" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.353" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.350" endtime="20230223 13:47:37.353"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.355" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.354" endtime="20230223 13:47:37.355"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.356" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.355" endtime="20230223 13:47:37.356"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.356" endtime="20230223 13:47:37.356"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.349" endtime="20230223 13:47:37.357"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.329" endtime="20230223 13:47:37.357"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.359" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.359" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.357" endtime="20230223 13:47:37.359"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.329" endtime="20230223 13:47:37.360"/>
</test>
<test id="s1-s2-t4" name="Invalid data: Empty single person data" line="23">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${genderEmpty}</arg>
<arg>${nameEmpty}</arg>
<arg>${natidEmpty}</arg>
<arg>${salaryEmpty}</arg>
<arg>${taxEmpty}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.367" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.367" endtime="20230223 13:47:37.367"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.369" level="INFO">${request_body} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.368" endtime="20230223 13:47:37.369"/>
</kw>
<msg timestamp="20230223 13:47:37.369" level="INFO">${dict1} = {'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.368" endtime="20230223 13:47:37.369"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.371" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.370" endtime="20230223 13:47:37.371"/>
</kw>
<msg timestamp="20230223 13:47:37.371" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.370" endtime="20230223 13:47:37.371"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.372" endtime="20230223 13:47:37.372"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.372" endtime="20230223 13:47:37.373"/>
</kw>
<msg timestamp="20230223 13:47:37.373" level="INFO">${request_body} = [{'birthday': '', 'gender': '', 'name': '', 'natid': '', 'salary': '', 'tax': ''}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}]</msg>
<status status="PASS" starttime="20230223 13:47:37.367" endtime="20230223 13:47:37.373"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.374" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.374" endtime="20230223 13:47:37.374"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.375" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.375" endtime="20230223 13:47:37.375"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.381" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '198'} 
 body=b'[{"birthday": "", "gender": "", "name": "", "natid": "", "salary": "", "tax": ""}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.381" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.379+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.381" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.376" endtime="20230223 13:47:37.381"/>
</kw>
<msg timestamp="20230223 13:47:37.382" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.374" endtime="20230223 13:47:37.382"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.385" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.383" endtime="20230223 13:47:37.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.385" endtime="20230223 13:47:37.386"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.383" endtime="20230223 13:47:37.386"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.389" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.389" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.389" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.386" endtime="20230223 13:47:37.389"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.391" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.390" endtime="20230223 13:47:37.392"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.393" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.392" endtime="20230223 13:47:37.393"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.393" endtime="20230223 13:47:37.394"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.386" endtime="20230223 13:47:37.394"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.366" endtime="20230223 13:47:37.394"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.397" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.397" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.395" endtime="20230223 13:47:37.397"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.366" endtime="20230223 13:47:37.398"/>
</test>
<test id="s1-s2-t5" name="Invalid data: Missing field birthday" line="25">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdayEmpty}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.405" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.405" endtime="20230223 13:47:37.405"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.406" level="INFO">${request_body} = {'birthday': '', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.406" endtime="20230223 13:47:37.406"/>
</kw>
<msg timestamp="20230223 13:47:37.407" level="INFO">${dict1} = {'birthday': '', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.405" endtime="20230223 13:47:37.407"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.408" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.408" endtime="20230223 13:47:37.408"/>
</kw>
<msg timestamp="20230223 13:47:37.409" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.408" endtime="20230223 13:47:37.409"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.410" endtime="20230223 13:47:37.410"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.410" endtime="20230223 13:47:37.410"/>
</kw>
<msg timestamp="20230223 13:47:37.410" level="INFO">${request_body} = [{'birthday': '', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary':...</msg>
<status status="PASS" starttime="20230223 13:47:37.404" endtime="20230223 13:47:37.411"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.412" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.412" endtime="20230223 13:47:37.412"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.413" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.413" endtime="20230223 13:47:37.413"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.420" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '224'} 
 body=b'[{"birthday": "", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.420" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.418+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.420" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.414" endtime="20230223 13:47:37.420"/>
</kw>
<msg timestamp="20230223 13:47:37.421" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.411" endtime="20230223 13:47:37.421"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.423" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.422" endtime="20230223 13:47:37.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.424" endtime="20230223 13:47:37.424"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.422" endtime="20230223 13:47:37.424"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.428" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.428" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.428" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.425" endtime="20230223 13:47:37.428"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.430" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.429" endtime="20230223 13:47:37.430"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.431" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.431" endtime="20230223 13:47:37.431"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.432" endtime="20230223 13:47:37.432"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.425" endtime="20230223 13:47:37.432"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.403" endtime="20230223 13:47:37.432"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.435" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.435" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.433" endtime="20230223 13:47:37.435"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.403" endtime="20230223 13:47:37.436"/>
</test>
<test id="s1-s2-t6" name="Invalid data: Missing field gender" line="27">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderEmpty}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.443" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.443" endtime="20230223 13:47:37.443"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.445" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.444" endtime="20230223 13:47:37.445"/>
</kw>
<msg timestamp="20230223 13:47:37.445" level="INFO">${dict1} = {'birthday': '01012007', 'gender': '', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.444" endtime="20230223 13:47:37.445"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.447" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.447" endtime="20230223 13:47:37.447"/>
</kw>
<msg timestamp="20230223 13:47:37.448" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.446" endtime="20230223 13:47:37.448"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.448" endtime="20230223 13:47:37.449"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.449" endtime="20230223 13:47:37.449"/>
</kw>
<msg timestamp="20230223 13:47:37.449" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': '', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 's...</msg>
<status status="PASS" starttime="20230223 13:47:37.443" endtime="20230223 13:47:37.449"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.450" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.450" endtime="20230223 13:47:37.451"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.452" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.451" endtime="20230223 13:47:37.452"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.457" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'[{"birthday": "01012007", "gender": "", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.457" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.458" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.452" endtime="20230223 13:47:37.458"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.450" endtime="20230223 13:47:37.459"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.459" endtime="20230223 13:47:37.460"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.460" endtime="20230223 13:47:37.460"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.442" endtime="20230223 13:47:37.460"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.464" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.464" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.461" endtime="20230223 13:47:37.464"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.441" endtime="20230223 13:47:37.465">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t7" name="Invalid data: Missing field name" line="29">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameEmpty}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.473" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.473" endtime="20230223 13:47:37.473"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.475" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.474" endtime="20230223 13:47:37.475"/>
</kw>
<msg timestamp="20230223 13:47:37.476" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': '', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.474" endtime="20230223 13:47:37.476"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.477" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.477" endtime="20230223 13:47:37.477"/>
</kw>
<msg timestamp="20230223 13:47:37.478" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.476" endtime="20230223 13:47:37.478"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.479" endtime="20230223 13:47:37.479"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.479" endtime="20230223 13:47:37.479"/>
</kw>
<msg timestamp="20230223 13:47:37.480" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': '', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary...</msg>
<status status="PASS" starttime="20230223 13:47:37.472" endtime="20230223 13:47:37.480"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.481" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.481" endtime="20230223 13:47:37.481"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.483" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.482" endtime="20230223 13:47:37.483"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.488" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '226'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.488" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.488" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.483" endtime="20230223 13:47:37.489"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.480" endtime="20230223 13:47:37.490"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.491" endtime="20230223 13:47:37.491"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.491" endtime="20230223 13:47:37.491"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.472" endtime="20230223 13:47:37.491"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.495" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.495" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.492" endtime="20230223 13:47:37.495"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.471" endtime="20230223 13:47:37.496">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t8" name="Invalid data: Missing field natid" line="31">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natidEmpty}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.504" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.504" endtime="20230223 13:47:37.504"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.506" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.505" endtime="20230223 13:47:37.506"/>
</kw>
<msg timestamp="20230223 13:47:37.506" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.505" endtime="20230223 13:47:37.506"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.508" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.508" endtime="20230223 13:47:37.508"/>
</kw>
<msg timestamp="20230223 13:47:37.509" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.507" endtime="20230223 13:47:37.509"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.510" endtime="20230223 13:47:37.510"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.510" endtime="20230223 13:47:37.510"/>
</kw>
<msg timestamp="20230223 13:47:37.511" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': '', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '...</msg>
<status status="PASS" starttime="20230223 13:47:37.503" endtime="20230223 13:47:37.511"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.512" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.512" endtime="20230223 13:47:37.512"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.513" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.513" endtime="20230223 13:47:37.513"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.518" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '222'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.518" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.518" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.514" endtime="20230223 13:47:37.519"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.511" endtime="20230223 13:47:37.520"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.520" endtime="20230223 13:47:37.520"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.521" endtime="20230223 13:47:37.521"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.502" endtime="20230223 13:47:37.521"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.524" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.525" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.521" endtime="20230223 13:47:37.525"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.502" endtime="20230223 13:47:37.526">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t9" name="Invalid data: Missing field salary" line="33">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salaryEmpty}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.534" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.534" endtime="20230223 13:47:37.534"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.536" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.535" endtime="20230223 13:47:37.536"/>
</kw>
<msg timestamp="20230223 13:47:37.536" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.535" endtime="20230223 13:47:37.536"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.538" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.537" endtime="20230223 13:47:37.538"/>
</kw>
<msg timestamp="20230223 13:47:37.538" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.537" endtime="20230223 13:47:37.538"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.539" endtime="20230223 13:47:37.540"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.540" endtime="20230223 13:47:37.540"/>
</kw>
<msg timestamp="20230223 13:47:37.540" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salar...</msg>
<status status="PASS" starttime="20230223 13:47:37.533" endtime="20230223 13:47:37.540"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.541" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.541" endtime="20230223 13:47:37.542"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.543" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.542" endtime="20230223 13:47:37.543"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.548" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '227'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.548" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:36 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.546+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.549" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.543" endtime="20230223 13:47:37.549"/>
</kw>
<msg timestamp="20230223 13:47:37.550" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.541" endtime="20230223 13:47:37.550"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.553" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.551" endtime="20230223 13:47:37.553"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.553" endtime="20230223 13:47:37.554"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.551" endtime="20230223 13:47:37.554"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.557" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.557" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.558" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.554" endtime="20230223 13:47:37.558"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.559" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.558" endtime="20230223 13:47:37.559"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.560" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.560" endtime="20230223 13:47:37.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.561" endtime="20230223 13:47:37.561"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.554" endtime="20230223 13:47:37.561"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.532" endtime="20230223 13:47:37.562"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.564" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.564" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.562" endtime="20230223 13:47:37.564"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.532" endtime="20230223 13:47:37.565"/>
</test>
<test id="s1-s2-t10" name="Invalid data: Missing field tax" line="35">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxEmpty}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.574" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.574" endtime="20230223 13:47:37.574"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.576" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.576" endtime="20230223 13:47:37.576"/>
</kw>
<msg timestamp="20230223 13:47:37.577" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': ''}</msg>
<status status="PASS" starttime="20230223 13:47:37.575" endtime="20230223 13:47:37.577"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.579" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.578" endtime="20230223 13:47:37.579"/>
</kw>
<msg timestamp="20230223 13:47:37.580" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.578" endtime="20230223 13:47:37.580"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.581" endtime="20230223 13:47:37.581"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.581" endtime="20230223 13:47:37.582"/>
</kw>
<msg timestamp="20230223 13:47:37.582" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': ''}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'sala...</msg>
<status status="PASS" starttime="20230223 13:47:37.573" endtime="20230223 13:47:37.582"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.583" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.583" endtime="20230223 13:47:37.583"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.584" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.584" endtime="20230223 13:47:37.584"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.592" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '228'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": ""}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.592" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.590+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.592" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.585" endtime="20230223 13:47:37.592"/>
</kw>
<msg timestamp="20230223 13:47:37.593" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.583" endtime="20230223 13:47:37.593"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.596" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.594" endtime="20230223 13:47:37.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.597" endtime="20230223 13:47:37.597"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.594" endtime="20230223 13:47:37.597"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.601" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.601" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.601" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.598" endtime="20230223 13:47:37.601"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.604" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.603" endtime="20230223 13:47:37.604"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.605" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.604" endtime="20230223 13:47:37.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.605" endtime="20230223 13:47:37.606"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.597" endtime="20230223 13:47:37.606"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.572" endtime="20230223 13:47:37.606"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.609" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.609" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.607" endtime="20230223 13:47:37.609"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.572" endtime="20230223 13:47:37.611"/>
</test>
<test id="s1-s2-t11" name="Invalid data: Invalid date format" line="37">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdayInvalidFormat}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.618" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.618" endtime="20230223 13:47:37.618"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.619" level="INFO">${request_body} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.619" endtime="20230223 13:47:37.620"/>
</kw>
<msg timestamp="20230223 13:47:37.620" level="INFO">${dict1} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.618" endtime="20230223 13:47:37.620"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.622" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.621" endtime="20230223 13:47:37.622"/>
</kw>
<msg timestamp="20230223 13:47:37.622" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.621" endtime="20230223 13:47:37.622"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.623" endtime="20230223 13:47:37.623"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.624" endtime="20230223 13:47:37.624"/>
</kw>
<msg timestamp="20230223 13:47:37.624" level="INFO">${request_body} = [{'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.617" endtime="20230223 13:47:37.624"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.625" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.625" endtime="20230223 13:47:37.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.627" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.626" endtime="20230223 13:47:37.627"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.632" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "20200101", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.632" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.631+0000","status":500,"error":"Internal Server Error","message":"Text '20200101' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 20","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.632" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.627" endtime="20230223 13:47:37.632"/>
</kw>
<msg timestamp="20230223 13:47:37.633" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.625" endtime="20230223 13:47:37.634"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.635" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.635" endtime="20230223 13:47:37.636"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.636" endtime="20230223 13:47:37.636"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.634" endtime="20230223 13:47:37.637"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.640" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.640" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.640" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.637" endtime="20230223 13:47:37.640"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.642" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.641" endtime="20230223 13:47:37.642"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.643" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.643" endtime="20230223 13:47:37.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.644" endtime="20230223 13:47:37.644"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.637" endtime="20230223 13:47:37.644"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.617" endtime="20230223 13:47:37.645"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.647" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.647" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.645" endtime="20230223 13:47:37.647"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.616" endtime="20230223 13:47:37.648"/>
</test>
<test id="s1-s2-t12" name="Invalid data: Invalid date char" line="39">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdayChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.655" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.655" endtime="20230223 13:47:37.655"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.657" level="INFO">${request_body} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.656" endtime="20230223 13:47:37.657"/>
</kw>
<msg timestamp="20230223 13:47:37.658" level="INFO">${dict1} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.656" endtime="20230223 13:47:37.658"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.659" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.659" endtime="20230223 13:47:37.659"/>
</kw>
<msg timestamp="20230223 13:47:37.660" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.658" endtime="20230223 13:47:37.660"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.661" endtime="20230223 13:47:37.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.661" endtime="20230223 13:47:37.661"/>
</kw>
<msg timestamp="20230223 13:47:37.662" level="INFO">${request_body} = [{'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.655" endtime="20230223 13:47:37.662"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.663" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.663" endtime="20230223 13:47:37.663"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.664" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.664" endtime="20230223 13:47:37.664"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.670" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "abcdabab", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.670" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.668+0000","status":500,"error":"Internal Server Error","message":"Text 'abcdabab' could not be parsed at index 0","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.670" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.665" endtime="20230223 13:47:37.670"/>
</kw>
<msg timestamp="20230223 13:47:37.671" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.662" endtime="20230223 13:47:37.671"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.673" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.672" endtime="20230223 13:47:37.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.674" endtime="20230223 13:47:37.674"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.672" endtime="20230223 13:47:37.674"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.678" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.678" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.678" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.675" endtime="20230223 13:47:37.678"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.681" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.679" endtime="20230223 13:47:37.681"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.682" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.681" endtime="20230223 13:47:37.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.682" endtime="20230223 13:47:37.683"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.675" endtime="20230223 13:47:37.683"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.654" endtime="20230223 13:47:37.683"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.686" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.686" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.683" endtime="20230223 13:47:37.686"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.654" endtime="20230223 13:47:37.687"/>
</test>
<test id="s1-s2-t13" name="Invalid data: Invalid date !@#" line="41">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdaySpecialChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.694" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.694" endtime="20230223 13:47:37.694"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.696" level="INFO">${request_body} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.695" endtime="20230223 13:47:37.696"/>
</kw>
<msg timestamp="20230223 13:47:37.696" level="INFO">${dict1} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.695" endtime="20230223 13:47:37.696"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.698" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.698" endtime="20230223 13:47:37.698"/>
</kw>
<msg timestamp="20230223 13:47:37.699" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.697" endtime="20230223 13:47:37.699"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.700" endtime="20230223 13:47:37.700"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.701" endtime="20230223 13:47:37.701"/>
</kw>
<msg timestamp="20230223 13:47:37.701" level="INFO">${request_body} = [{'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.693" endtime="20230223 13:47:37.701"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.703" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.703" endtime="20230223 13:47:37.703"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.704" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.704" endtime="20230223 13:47:37.704"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.711" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "!@#$!@!@", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.711" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.709+0000","status":500,"error":"Internal Server Error","message":"Text '!@#$!@!@' could not be parsed at index 0","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.711" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.705" endtime="20230223 13:47:37.711"/>
</kw>
<msg timestamp="20230223 13:47:37.712" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.702" endtime="20230223 13:47:37.712"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.715" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.714" endtime="20230223 13:47:37.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.716" endtime="20230223 13:47:37.716"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.713" endtime="20230223 13:47:37.716"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.719" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.720" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.720" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.717" endtime="20230223 13:47:37.720"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.722" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.721" endtime="20230223 13:47:37.722"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.723" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.722" endtime="20230223 13:47:37.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.723" endtime="20230223 13:47:37.724"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.716" endtime="20230223 13:47:37.724"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.692" endtime="20230223 13:47:37.724"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.727" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.727" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.725" endtime="20230223 13:47:37.727"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.692" endtime="20230223 13:47:37.728"/>
</test>
<test id="s1-s2-t14" name="Invalid data: Invalid gender Male" line="43">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderMale}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.736" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.736" endtime="20230223 13:47:37.736"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.738" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.738" endtime="20230223 13:47:37.738"/>
</kw>
<msg timestamp="20230223 13:47:37.739" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.736" endtime="20230223 13:47:37.739"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.740" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.740" endtime="20230223 13:47:37.740"/>
</kw>
<msg timestamp="20230223 13:47:37.741" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.739" endtime="20230223 13:47:37.741"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.742" endtime="20230223 13:47:37.742"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.743" endtime="20230223 13:47:37.743"/>
</kw>
<msg timestamp="20230223 13:47:37.743" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b'...</msg>
<status status="PASS" starttime="20230223 13:47:37.735" endtime="20230223 13:47:37.743"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.745" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.745" endtime="20230223 13:47:37.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.746" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.746" endtime="20230223 13:47:37.746"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.752" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '235'} 
 body=b'[{"birthday": "01012007", "gender": "Male", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.752" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.751+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.753" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.746" endtime="20230223 13:47:37.753"/>
</kw>
<msg timestamp="20230223 13:47:37.754" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.744" endtime="20230223 13:47:37.754"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.756" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.755" endtime="20230223 13:47:37.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.756" endtime="20230223 13:47:37.757"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.754" endtime="20230223 13:47:37.757"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.760" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.760" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.760" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.757" endtime="20230223 13:47:37.760"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.762" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.761" endtime="20230223 13:47:37.762"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.763" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.763" endtime="20230223 13:47:37.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.764" endtime="20230223 13:47:37.764"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.757" endtime="20230223 13:47:37.764"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.734" endtime="20230223 13:47:37.764"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.767" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.767" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.765" endtime="20230223 13:47:37.767"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.734" endtime="20230223 13:47:37.768"/>
</test>
<test id="s1-s2-t15" name="Invalid data: Invalid gender W" line="45">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderW}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.775" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.775" endtime="20230223 13:47:37.775"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.777" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.776" endtime="20230223 13:47:37.777"/>
</kw>
<msg timestamp="20230223 13:47:37.777" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.776" endtime="20230223 13:47:37.777"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.779" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.778" endtime="20230223 13:47:37.779"/>
</kw>
<msg timestamp="20230223 13:47:37.779" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.778" endtime="20230223 13:47:37.779"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.780" endtime="20230223 13:47:37.780"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.780" endtime="20230223 13:47:37.781"/>
</kw>
<msg timestamp="20230223 13:47:37.781" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:37.775" endtime="20230223 13:47:37.781"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.782" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.782" endtime="20230223 13:47:37.782"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.783" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.783" endtime="20230223 13:47:37.783"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.788" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012007", "gender": "W", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.788" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.788" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.784" endtime="20230223 13:47:37.788"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.782" endtime="20230223 13:47:37.789"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.790" endtime="20230223 13:47:37.790"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.790" endtime="20230223 13:47:37.790"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.774" endtime="20230223 13:47:37.790"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.793" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.793" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.790" endtime="20230223 13:47:37.793"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.774" endtime="20230223 13:47:37.794">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t16" name="Invalid data: Invalid gender 123" line="47">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderNum}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.801" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.801" endtime="20230223 13:47:37.802"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.803" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.803" endtime="20230223 13:47:37.803"/>
</kw>
<msg timestamp="20230223 13:47:37.804" level="INFO">${dict1} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.802" endtime="20230223 13:47:37.804"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.806" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.805" endtime="20230223 13:47:37.806"/>
</kw>
<msg timestamp="20230223 13:47:37.806" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.805" endtime="20230223 13:47:37.806"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.807" endtime="20230223 13:47:37.808"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.808" endtime="20230223 13:47:37.808"/>
</kw>
<msg timestamp="20230223 13:47:37.808" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b',...</msg>
<status status="PASS" starttime="20230223 13:47:37.801" endtime="20230223 13:47:37.808"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.809" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.809" endtime="20230223 13:47:37.809"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.811" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.810" endtime="20230223 13:47:37.811"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.817" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '234'} 
 body=b'[{"birthday": "01012007", "gender": "123", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.818" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.816+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.818" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.811" endtime="20230223 13:47:37.818"/>
</kw>
<msg timestamp="20230223 13:47:37.819" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.809" endtime="20230223 13:47:37.819"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.821" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.820" endtime="20230223 13:47:37.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.821" endtime="20230223 13:47:37.822"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.819" endtime="20230223 13:47:37.822"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.825" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.825" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.825" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.822" endtime="20230223 13:47:37.825"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.827" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.826" endtime="20230223 13:47:37.827"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.828" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.828" endtime="20230223 13:47:37.828"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.829" endtime="20230223 13:47:37.829"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.822" endtime="20230223 13:47:37.830"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.800" endtime="20230223 13:47:37.830"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.833" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.833" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.830" endtime="20230223 13:47:37.833"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.800" endtime="20230223 13:47:37.835"/>
</test>
<test id="s1-s2-t17" name="Invalid data: Invalid gender !@#" line="49">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderSpecialChar}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.844" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.843" endtime="20230223 13:47:37.844"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.845" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.845" endtime="20230223 13:47:37.845"/>
</kw>
<msg timestamp="20230223 13:47:37.846" level="INFO">${dict1} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.844" endtime="20230223 13:47:37.846"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.847" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.847" endtime="20230223 13:47:37.847"/>
</kw>
<msg timestamp="20230223 13:47:37.848" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.846" endtime="20230223 13:47:37.848"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.848" endtime="20230223 13:47:37.849"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.849" endtime="20230223 13:47:37.849"/>
</kw>
<msg timestamp="20230223 13:47:37.849" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b',...</msg>
<status status="PASS" starttime="20230223 13:47:37.843" endtime="20230223 13:47:37.849"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.850" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.850" endtime="20230223 13:47:37.851"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.851" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.851" endtime="20230223 13:47:37.851"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.859" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '234'} 
 body=b'[{"birthday": "01012007", "gender": "!@#", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.859" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.857+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.859" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.852" endtime="20230223 13:47:37.859"/>
</kw>
<msg timestamp="20230223 13:47:37.860" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.850" endtime="20230223 13:47:37.860"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.862" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.861" endtime="20230223 13:47:37.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.863" endtime="20230223 13:47:37.863"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.861" endtime="20230223 13:47:37.863"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.867" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.867" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.864" endtime="20230223 13:47:37.867"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.869" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.868" endtime="20230223 13:47:37.869"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.870" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.870" endtime="20230223 13:47:37.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.870" endtime="20230223 13:47:37.871"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.864" endtime="20230223 13:47:37.871"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.841" endtime="20230223 13:47:37.871"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.874" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.874" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.871" endtime="20230223 13:47:37.874"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.840" endtime="20230223 13:47:37.875"/>
</test>
<test id="s1-s2-t18" name="Invalid data: Invalid name 123" line="51">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameNum}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.886" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.886" endtime="20230223 13:47:37.886"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.889" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '123', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.888" endtime="20230223 13:47:37.889"/>
</kw>
<msg timestamp="20230223 13:47:37.890" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': '123', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.887" endtime="20230223 13:47:37.890"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.891" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.891" endtime="20230223 13:47:37.891"/>
</kw>
<msg timestamp="20230223 13:47:37.892" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.890" endtime="20230223 13:47:37.892"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.893" endtime="20230223 13:47:37.893"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.893" endtime="20230223 13:47:37.894"/>
</kw>
<msg timestamp="20230223 13:47:37.894" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': '123', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'sal...</msg>
<status status="PASS" starttime="20230223 13:47:37.885" endtime="20230223 13:47:37.894"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.896" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.895" endtime="20230223 13:47:37.896"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.897" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.897" endtime="20230223 13:47:37.897"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.901" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '229'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "123", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.902" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.902" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.898" endtime="20230223 13:47:37.902"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.895" endtime="20230223 13:47:37.903"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.903" endtime="20230223 13:47:37.904"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.904" endtime="20230223 13:47:37.904"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.884" endtime="20230223 13:47:37.904"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.907" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.907" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.904" endtime="20230223 13:47:37.907"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.883" endtime="20230223 13:47:37.908">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t19" name="Invalid data: Invalid name !@#" line="53">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${nameSpecialChar}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.918" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.917" endtime="20230223 13:47:37.918"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.919" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': '!@#', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.919" endtime="20230223 13:47:37.919"/>
</kw>
<msg timestamp="20230223 13:47:37.920" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': '!@#', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.918" endtime="20230223 13:47:37.920"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.922" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.921" endtime="20230223 13:47:37.922"/>
</kw>
<msg timestamp="20230223 13:47:37.922" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.921" endtime="20230223 13:47:37.922"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.923" endtime="20230223 13:47:37.923"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.924" endtime="20230223 13:47:37.924"/>
</kw>
<msg timestamp="20230223 13:47:37.924" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': '!@#', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'sal...</msg>
<status status="PASS" starttime="20230223 13:47:37.917" endtime="20230223 13:47:37.924"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.926" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.926" endtime="20230223 13:47:37.926"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.927" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.927" endtime="20230223 13:47:37.927"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.932" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '229'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "!@#", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.932" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:37.932" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:37.928" endtime="20230223 13:47:37.932"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.925" endtime="20230223 13:47:37.933"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.934" endtime="20230223 13:47:37.934"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:37.934" endtime="20230223 13:47:37.934"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:37.916" endtime="20230223 13:47:37.934"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.937" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.937" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.934" endtime="20230223 13:47:37.937"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.916" endtime="20230223 13:47:37.938">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t20" name="Invalid data: Invalid natid !@# http://localhost:8080" line="55">
<kw name="Insert multiple persons">
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natidSpecialChar}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<msg timestamp="20230223 13:47:37.945" level="FAIL">Keyword 'Insert multiple persons' expected 17 arguments, got 16.</msg>
<status status="FAIL" starttime="20230223 13:47:37.944" endtime="20230223 13:47:37.945"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.948" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.948" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.946" endtime="20230223 13:47:37.948"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:37.944" endtime="20230223 13:47:37.949">Keyword 'Insert multiple persons' expected 17 arguments, got 16.</status>
</test>
<test id="s1-s2-t21" name="Invalid data: Invalid salary abcd" line="57">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salaryChar}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.959" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.958" endtime="20230223 13:47:37.959"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.960" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': 'abcd', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.960" endtime="20230223 13:47:37.960"/>
</kw>
<msg timestamp="20230223 13:47:37.961" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': 'abcd', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.959" endtime="20230223 13:47:37.961"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.963" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.962" endtime="20230223 13:47:37.963"/>
</kw>
<msg timestamp="20230223 13:47:37.963" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.962" endtime="20230223 13:47:37.963"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.964" endtime="20230223 13:47:37.964"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:37.965" endtime="20230223 13:47:37.965"/>
</kw>
<msg timestamp="20230223 13:47:37.965" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': 'abcd', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 's...</msg>
<status status="PASS" starttime="20230223 13:47:37.958" endtime="20230223 13:47:37.965"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:37.966" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:37.966" endtime="20230223 13:47:37.966"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.967" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:37.967" endtime="20230223 13:47:37.967"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.974" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "abcd", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:37.974" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:37.972+0000","status":500,"error":"Internal Server Error","message":"Character a is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:37.974" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.968" endtime="20230223 13:47:37.974"/>
</kw>
<msg timestamp="20230223 13:47:37.975" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.966" endtime="20230223 13:47:37.975"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.977" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:37.976" endtime="20230223 13:47:37.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.978" endtime="20230223 13:47:37.978"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.976" endtime="20230223 13:47:37.978"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.981" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.982" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:37.982" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:37.978" endtime="20230223 13:47:37.982"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:37.983" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.982" endtime="20230223 13:47:37.983"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:37.984" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:37.984" endtime="20230223 13:47:37.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:37.985" endtime="20230223 13:47:37.985"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.978" endtime="20230223 13:47:37.985"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.957" endtime="20230223 13:47:37.986"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:37.989" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:37.989" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:37.986" endtime="20230223 13:47:37.989"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.956" endtime="20230223 13:47:37.990"/>
</test>
<test id="s1-s2-t22" name="Invalid data: Invalid salary !@#" line="59">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salarySpecialChar}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:37.997" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:37.997" endtime="20230223 13:47:37.997"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:37.999" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '!@#', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.998" endtime="20230223 13:47:37.999"/>
</kw>
<msg timestamp="20230223 13:47:37.999" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '!@#', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:37.998" endtime="20230223 13:47:38.000"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.001" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.001" endtime="20230223 13:47:38.001"/>
</kw>
<msg timestamp="20230223 13:47:38.002" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.000" endtime="20230223 13:47:38.002"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.002" endtime="20230223 13:47:38.003"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.003" endtime="20230223 13:47:38.003"/>
</kw>
<msg timestamp="20230223 13:47:38.003" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '!@#', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'sa...</msg>
<status status="PASS" starttime="20230223 13:47:37.997" endtime="20230223 13:47:38.003"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.005" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.004" endtime="20230223 13:47:38.005"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.006" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.006" endtime="20230223 13:47:38.006"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.012" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '230'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "!@#", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.012" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:38.010+0000","status":500,"error":"Internal Server Error","message":"Character ! is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:38.012" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.007" endtime="20230223 13:47:38.012"/>
</kw>
<msg timestamp="20230223 13:47:38.013" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.004" endtime="20230223 13:47:38.013"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.015" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:38.014" endtime="20230223 13:47:38.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.016" endtime="20230223 13:47:38.016"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.014" endtime="20230223 13:47:38.016"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.020" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.020" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:38.020" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.017" endtime="20230223 13:47:38.020"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:38.023" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.021" endtime="20230223 13:47:38.023"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.024" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.024" endtime="20230223 13:47:38.024"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.025" endtime="20230223 13:47:38.025"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.016" endtime="20230223 13:47:38.025"/>
</kw>
<status status="PASS" starttime="20230223 13:47:37.996" endtime="20230223 13:47:38.025"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.028" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.028" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.026" endtime="20230223 13:47:38.028"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:37.995" endtime="20230223 13:47:38.029"/>
</test>
<test id="s1-s2-t23" name="Invalid data: Invalid tax abcd" line="61">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxChar}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.036" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.036" endtime="20230223 13:47:38.036"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.038" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': 'abcd'}</msg>
<status status="PASS" starttime="20230223 13:47:38.037" endtime="20230223 13:47:38.038"/>
</kw>
<msg timestamp="20230223 13:47:38.038" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': 'abcd'}</msg>
<status status="PASS" starttime="20230223 13:47:38.037" endtime="20230223 13:47:38.038"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.040" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.040" endtime="20230223 13:47:38.040"/>
</kw>
<msg timestamp="20230223 13:47:38.041" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.039" endtime="20230223 13:47:38.041"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.042" endtime="20230223 13:47:38.042"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.042" endtime="20230223 13:47:38.042"/>
</kw>
<msg timestamp="20230223 13:47:38.042" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': 'abcd'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:38.036" endtime="20230223 13:47:38.042"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.044" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.044" endtime="20230223 13:47:38.044"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.045" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.045" endtime="20230223 13:47:38.045"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.051" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "abcd"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.051" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:38.049+0000","status":500,"error":"Internal Server Error","message":"Character a is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:38.051" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.046" endtime="20230223 13:47:38.051"/>
</kw>
<msg timestamp="20230223 13:47:38.052" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.043" endtime="20230223 13:47:38.052"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.054" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:38.053" endtime="20230223 13:47:38.054"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.055" endtime="20230223 13:47:38.055"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.053" endtime="20230223 13:47:38.055"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.059" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.059" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:38.059" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.056" endtime="20230223 13:47:38.059"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:38.061" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.060" endtime="20230223 13:47:38.061"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.062" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.061" endtime="20230223 13:47:38.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.062" endtime="20230223 13:47:38.063"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.055" endtime="20230223 13:47:38.063"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.035" endtime="20230223 13:47:38.063"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.066" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.066" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.063" endtime="20230223 13:47:38.066"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:38.034" endtime="20230223 13:47:38.067"/>
</test>
<test id="s1-s2-t24" name="Invalid data: Invalid tax !@#" line="63">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${taxSpecialChar}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.074" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.074" endtime="20230223 13:47:38.074"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.076" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '!@#'}</msg>
<status status="PASS" starttime="20230223 13:47:38.075" endtime="20230223 13:47:38.076"/>
</kw>
<msg timestamp="20230223 13:47:38.077" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '!@#'}</msg>
<status status="PASS" starttime="20230223 13:47:38.075" endtime="20230223 13:47:38.077"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.078" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.078" endtime="20230223 13:47:38.078"/>
</kw>
<msg timestamp="20230223 13:47:38.079" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.077" endtime="20230223 13:47:38.079"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.080" endtime="20230223 13:47:38.080"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.080" endtime="20230223 13:47:38.081"/>
</kw>
<msg timestamp="20230223 13:47:38.081" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '!@#'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 's...</msg>
<status status="PASS" starttime="20230223 13:47:38.074" endtime="20230223 13:47:38.081"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.082" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.082" endtime="20230223 13:47:38.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.083" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.083" endtime="20230223 13:47:38.083"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.089" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "!@#"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.089" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:47:38.087+0000","status":500,"error":"Internal Server Error","message":"Character ! is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20230223 13:47:38.089" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.084" endtime="20230223 13:47:38.089"/>
</kw>
<msg timestamp="20230223 13:47:38.090" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.082" endtime="20230223 13:47:38.090"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.092" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:47:38.091" endtime="20230223 13:47:38.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.092" endtime="20230223 13:47:38.093"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.091" endtime="20230223 13:47:38.093"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.096" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.096" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:47:38.096" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:38.093" endtime="20230223 13:47:38.096"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:38.098" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.097" endtime="20230223 13:47:38.098"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:38.099" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:47:38.098" endtime="20230223 13:47:38.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:38.099" endtime="20230223 13:47:38.100"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.093" endtime="20230223 13:47:38.100"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.073" endtime="20230223 13:47:38.100"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.102" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.102" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.100" endtime="20230223 13:47:38.102"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="PASS" starttime="20230223 13:47:38.073" endtime="20230223 13:47:38.103"/>
</test>
<test id="s1-s2-t25" name="Logical error: Birthdate too far in past" line="65">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdateTooFarInPast}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.110" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.110" endtime="20230223 13:47:38.110"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.112" level="INFO">${request_body} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.112" endtime="20230223 13:47:38.112"/>
</kw>
<msg timestamp="20230223 13:47:38.113" level="INFO">${dict1} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.111" endtime="20230223 13:47:38.113"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.114" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.114" endtime="20230223 13:47:38.114"/>
</kw>
<msg timestamp="20230223 13:47:38.115" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.113" endtime="20230223 13:47:38.115"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.115" endtime="20230223 13:47:38.116"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.116" endtime="20230223 13:47:38.116"/>
</kw>
<msg timestamp="20230223 13:47:38.116" level="INFO">${request_body} = [{'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:38.110" endtime="20230223 13:47:38.116"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.117" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.117" endtime="20230223 13:47:38.117"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.118" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.118" endtime="20230223 13:47:38.118"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.123" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01011873", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.123" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:38.123" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:38.119" endtime="20230223 13:47:38.124"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.117" endtime="20230223 13:47:38.125"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.125" endtime="20230223 13:47:38.125"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.125" endtime="20230223 13:47:38.125"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.109" endtime="20230223 13:47:38.126"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.129" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.129" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.126" endtime="20230223 13:47:38.129"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:38.109" endtime="20230223 13:47:38.130">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t26" name="Logical error: Birthdate in the future" line="67">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdateInFuture}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.137" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.137" endtime="20230223 13:47:38.137"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.138" level="INFO">${request_body} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.138" endtime="20230223 13:47:38.138"/>
</kw>
<msg timestamp="20230223 13:47:38.139" level="INFO">${dict1} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.137" endtime="20230223 13:47:38.139"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.141" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.140" endtime="20230223 13:47:38.141"/>
</kw>
<msg timestamp="20230223 13:47:38.141" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.140" endtime="20230223 13:47:38.141"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.142" endtime="20230223 13:47:38.142"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.142" endtime="20230223 13:47:38.143"/>
</kw>
<msg timestamp="20230223 13:47:38.143" level="INFO">${request_body} = [{'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:38.136" endtime="20230223 13:47:38.143"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.144" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.144" endtime="20230223 13:47:38.144"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.145" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.145" endtime="20230223 13:47:38.145"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.150" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012030", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.150" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:38.150" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:38.146" endtime="20230223 13:47:38.150"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.144" endtime="20230223 13:47:38.151"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.151" endtime="20230223 13:47:38.151"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.152" endtime="20230223 13:47:38.152"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.136" endtime="20230223 13:47:38.152"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.155" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.155" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.152" endtime="20230223 13:47:38.155"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:38.135" endtime="20230223 13:47:38.156">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t27" name="Logical error: Age too young" line="69">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthdateAgeTooYoung}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.163" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.163" endtime="20230223 13:47:38.163"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.164" level="INFO">${request_body} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.164" endtime="20230223 13:47:38.164"/>
</kw>
<msg timestamp="20230223 13:47:38.165" level="INFO">${dict1} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.164" endtime="20230223 13:47:38.165"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.167" level="INFO">${request_body} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.166" endtime="20230223 13:47:38.167"/>
</kw>
<msg timestamp="20230223 13:47:38.167" level="INFO">${dict2} = {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', 'salary': '5000', 'tax': '6000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.166" endtime="20230223 13:47:38.167"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.168" endtime="20230223 13:47:38.168"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.168" endtime="20230223 13:47:38.169"/>
</kw>
<msg timestamp="20230223 13:47:38.169" level="INFO">${request_body} = [{'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012001', 'gender': 'F', 'name': 'TesterA', 'natid': 's87654321b', '...</msg>
<status status="PASS" starttime="20230223 13:47:38.162" endtime="20230223 13:47:38.169"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.170" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.170" endtime="20230223 13:47:38.170"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.171" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.171" endtime="20230223 13:47:38.171"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.176" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012018", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012001", "gender": "F", "name": "TesterA", "natid": "s87654321b", "salary": "5000", "tax": "6000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.176" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:38.176" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:38.171" endtime="20230223 13:47:38.177"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.170" endtime="20230223 13:47:38.178"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.178" endtime="20230223 13:47:38.178"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.179" endtime="20230223 13:47:38.179"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.162" endtime="20230223 13:47:38.179"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.182" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.182" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.180" endtime="20230223 13:47:38.182"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:38.161" endtime="20230223 13:47:38.183">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<test id="s1-s2-t28" name="Logical error: Record already exists" line="71">
<kw name="Insert multiple persons">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insertMultiple}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US2.robot file seeks to test the endpoint /calculator/insertMultiple
A request body is generated according to testcase, and is sent to the endpoint. The response will then be validated</doc>
<kw name="Create list from provided data" library="UserStory2Utility">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230223 13:47:38.190" level="INFO">${list} = []</msg>
<status status="PASS" starttime="20230223 13:47:38.190" endtime="20230223 13:47:38.190"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict1}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.192" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.191" endtime="20230223 13:47:38.192"/>
</kw>
<msg timestamp="20230223 13:47:38.192" level="INFO">${dict1} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.191" endtime="20230223 13:47:38.192"/>
</kw>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${dict2}</var>
<arg>${birthday2}</arg>
<arg>${gender2}</arg>
<arg>${name2}</arg>
<arg>${natid2}</arg>
<arg>${salary2}</arg>
<arg>${tax2}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.194" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.193" endtime="20230223 13:47:38.194"/>
</kw>
<msg timestamp="20230223 13:47:38.194" level="INFO">${dict2} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:47:38.193" endtime="20230223 13:47:38.195"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict1}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.195" endtime="20230223 13:47:38.195"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${list}</arg>
<arg>${dict2}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230223 13:47:38.195" endtime="20230223 13:47:38.196"/>
</kw>
<msg timestamp="20230223 13:47:38.196" level="INFO">${request_body} = [{'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}, {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 's...</msg>
<status status="PASS" starttime="20230223 13:47:38.190" endtime="20230223 13:47:38.196"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.197" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.197" endtime="20230223 13:47:38.197"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:47:38.198" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:47:38.198" endtime="20230223 13:47:38.198"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.203" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '232'} 
 body=b'[{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}, {"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}]' 
 </msg>
<msg timestamp="20230223 13:47:38.203" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:47:38.203" level="FAIL">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:47:38.199" endtime="20230223 13:47:38.203"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.197" endtime="20230223 13:47:38.204"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.205" endtime="20230223 13:47:38.205"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:47:38.205" endtime="20230223 13:47:38.205"/>
</kw>
<status status="FAIL" starttime="20230223 13:47:38.189" endtime="20230223 13:47:38.205"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:38.208" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:38.208" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:38.205" endtime="20230223 13:47:38.208"/>
</kw>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US2</tag>
<status status="FAIL" starttime="20230223 13:47:38.188" endtime="20230223 13:47:38.209">Url: http://localhost:8080/calculator/insertMultiple Expected status: 202 != 500</status>
</test>
<status status="FAIL" starttime="20230223 13:47:37.244" endtime="20230223 13:47:38.215"/>
</suite>
<suite id="s1-s3" name="UserStory3" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory3.robot">
<test id="s1-s3-t1" name="Testing for files upload edge" line="18">
<kw name="Working case">
<arg>${file}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:38.268" endtime="20230223 13:47:38.268"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:38.268" endtime="20230223 13:47:38.269"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:38.269" endtime="20230223 13:47:38.269"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:38.269" endtime="20230223 13:47:38.269"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:47:38.269" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:47:38.269" endtime="20230223 13:47:38.269"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.269" endtime="20230223 13:47:38.270"/>
</branch>
<status status="PASS" starttime="20230223 13:47:38.268" endtime="20230223 13:47:38.270"/>
</if>
<status status="PASS" starttime="20230223 13:47:38.268" endtime="20230223 13:47:38.270"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:38.271" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:38.271" endtime="20230223 13:47:38.271"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:47:38.272" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:47:38.271" endtime="20230223 13:47:40.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:40.261" endtime="20230223 13:47:40.296"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.270" endtime="20230223 13:47:40.296"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:47:40.298" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:47:40.297" endtime="20230223 13:47:40.347"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:47:40.349" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:47:40.348" endtime="20230223 13:47:40.420"/>
</kw>
<status status="PASS" starttime="20230223 13:47:40.296" endtime="20230223 13:47:40.421"/>
</kw>
<kw name="Validate row numbers" library="UserStory3Utility">
<arg>${expected_row_number}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${taxReliefTableXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:40.422" endtime="20230223 13:47:40.475"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${rows_count}</var>
<arg>${taxReliefTableRowsXPath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20230223 13:47:40.491" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:40.476" endtime="20230223 13:47:40.491"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${rows_count}</var>
<arg>${rows_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:40.494" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:40.493" endtime="20230223 13:47:40.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${rows_count}</arg>
<arg>${expected_row_number}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:40.495" endtime="20230223 13:47:40.496"/>
</kw>
<status status="PASS" starttime="20230223 13:47:40.421" endtime="20230223 13:47:40.496"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${expected_row_number}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:40.503" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:40.503" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:40 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"lewies","relief":"2880.00"},{"natid":"s876$$$$$$","name":"tester","relief":"2300.00"},{"natid":"s252$$$$$$","name":"testerb","relief":"2040.00"},{"natid":"s143$$$$$","name":"testerc","relief":"2500.00"},{"natid":"s191$$$$$$","name":"testerd","relief":"2820.00"},{"natid":"s242$$$$$$","name":"testere","relief":"3560.00"},{"natid":"s112$$$$$$","name":"testerf","relief":"3362.60"},{"natid":"s098$$$$$$","name":"testerg","relief":"4800.00"},{"natid":"s991$$$$$$","name":"testerh","relief":"1120.00"},{"natid":"s148$$$$$$","name":"testeri","relief":"3380.00"}] 
 </msg>
<msg timestamp="20230223 13:47:40.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:40.497" endtime="20230223 13:47:40.504"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:40.510" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:40.505" endtime="20230223 13:47:40.510"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:40.512" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:40.511" endtime="20230223 13:47:40.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:40.514" endtime="20230223 13:47:40.515"/>
</kw>
<status status="PASS" starttime="20230223 13:47:40.496" endtime="20230223 13:47:40.515"/>
</kw>
<status status="PASS" starttime="20230223 13:47:38.268" endtime="20230223 13:47:40.516"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:40.524" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:40.524" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:40 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:40.518" endtime="20230223 13:47:40.524"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:47:40.526" endtime="20230223 13:47:42.822"/>
</kw>
<status status="PASS" starttime="20230223 13:47:40.517" endtime="20230223 13:47:42.823"/>
</kw>
<status status="PASS" starttime="20230223 13:47:40.517" endtime="20230223 13:47:42.823"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:47:38.267" endtime="20230223 13:47:42.824"/>
</test>
<test id="s1-s3-t2" name="Testing for files upload firefox" line="20">
<kw name="Working case">
<arg>${file}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:42.832" endtime="20230223 13:47:42.832"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:42.832" endtime="20230223 13:47:42.832"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:47:42.833" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:47:42.832" endtime="20230223 13:47:42.833"/>
</kw>
<status status="PASS" starttime="20230223 13:47:42.832" endtime="20230223 13:47:42.833"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:42.834" endtime="20230223 13:47:42.834"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:42.834" endtime="20230223 13:47:42.834"/>
</branch>
<status status="PASS" starttime="20230223 13:47:42.831" endtime="20230223 13:47:42.834"/>
</if>
<status status="PASS" starttime="20230223 13:47:42.831" endtime="20230223 13:47:42.834"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:42.835" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:42.835" endtime="20230223 13:47:42.835"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:47:42.836" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:47:42.836" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-1.log</msg>
<status status="PASS" starttime="20230223 13:47:42.835" endtime="20230223 13:47:48.693"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:48.695" endtime="20230223 13:47:48.712"/>
</kw>
<status status="PASS" starttime="20230223 13:47:42.834" endtime="20230223 13:47:48.712"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:47:48.713" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:47:48.712" endtime="20230223 13:47:48.719"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:47:48.721" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:47:48.720" endtime="20230223 13:47:48.954"/>
</kw>
<status status="PASS" starttime="20230223 13:47:48.712" endtime="20230223 13:47:48.955"/>
</kw>
<kw name="Validate row numbers" library="UserStory3Utility">
<arg>${expected_row_number}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${taxReliefTableXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:48.956" endtime="20230223 13:47:48.965"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${rows_count}</var>
<arg>${taxReliefTableRowsXPath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20230223 13:47:48.967" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:48.965" endtime="20230223 13:47:48.967"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${rows_count}</var>
<arg>${rows_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:48.968" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:48.968" endtime="20230223 13:47:48.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${rows_count}</arg>
<arg>${expected_row_number}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:48.969" endtime="20230223 13:47:48.970"/>
</kw>
<status status="PASS" starttime="20230223 13:47:48.955" endtime="20230223 13:47:48.970"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${expected_row_number}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:48.973" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:48.973" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:48 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"lewies","relief":"2880.00"},{"natid":"s876$$$$$$","name":"tester","relief":"2300.00"},{"natid":"s252$$$$$$","name":"testerb","relief":"2040.00"},{"natid":"s143$$$$$","name":"testerc","relief":"2500.00"},{"natid":"s191$$$$$$","name":"testerd","relief":"2820.00"},{"natid":"s242$$$$$$","name":"testere","relief":"3560.00"},{"natid":"s112$$$$$$","name":"testerf","relief":"3362.60"},{"natid":"s098$$$$$$","name":"testerg","relief":"4800.00"},{"natid":"s991$$$$$$","name":"testerh","relief":"1120.00"},{"natid":"s148$$$$$$","name":"testeri","relief":"3380.00"}] 
 </msg>
<msg timestamp="20230223 13:47:48.973" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:48.970" endtime="20230223 13:47:48.973"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:48.976" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:48.974" endtime="20230223 13:47:48.976"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:48.977" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:48.977" endtime="20230223 13:47:48.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:48.977" endtime="20230223 13:47:48.978"/>
</kw>
<status status="PASS" starttime="20230223 13:47:48.970" endtime="20230223 13:47:48.978"/>
</kw>
<status status="PASS" starttime="20230223 13:47:42.831" endtime="20230223 13:47:48.978"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:48.981" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:48.981" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:48 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:48.979" endtime="20230223 13:47:48.982"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:47:48.982" endtime="20230223 13:47:51.924"/>
</kw>
<status status="PASS" starttime="20230223 13:47:48.979" endtime="20230223 13:47:51.924"/>
</kw>
<status status="PASS" starttime="20230223 13:47:48.978" endtime="20230223 13:47:51.924"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:47:42.830" endtime="20230223 13:47:51.925"/>
</test>
<test id="s1-s3-t3" name="Testing for files upload chrome" line="22">
<kw name="Working case">
<arg>${file}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:47:51.933" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:47:51.933" endtime="20230223 13:47:51.933"/>
</kw>
<status status="PASS" starttime="20230223 13:47:51.932" endtime="20230223 13:47:51.934"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:51.934" endtime="20230223 13:47:51.934"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:51.934" endtime="20230223 13:47:51.934"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:51.935" endtime="20230223 13:47:51.935"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:51.934" endtime="20230223 13:47:51.935"/>
</branch>
<status status="PASS" starttime="20230223 13:47:51.932" endtime="20230223 13:47:51.935"/>
</if>
<status status="PASS" starttime="20230223 13:47:51.932" endtime="20230223 13:47:51.935"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:51.936" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:51.935" endtime="20230223 13:47:51.936"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:47:51.937" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:47:51.937" endtime="20230223 13:47:53.420"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:53.421" endtime="20230223 13:47:53.438"/>
</kw>
<status status="PASS" starttime="20230223 13:47:51.935" endtime="20230223 13:47:53.438"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:47:53.439" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:47:53.438" endtime="20230223 13:47:53.462"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:47:53.464" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:47:53.463" endtime="20230223 13:47:53.497"/>
</kw>
<status status="PASS" starttime="20230223 13:47:53.438" endtime="20230223 13:47:53.498"/>
</kw>
<kw name="Validate row numbers" library="UserStory3Utility">
<arg>${expected_row_number}</arg>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${taxReliefTableXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:53.499" endtime="20230223 13:47:53.521"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${rows_count}</var>
<arg>${taxReliefTableRowsXPath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20230223 13:47:53.531" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:53.522" endtime="20230223 13:47:53.531"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${rows_count}</var>
<arg>${rows_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:53.532" level="INFO">${rows_count} = 10</msg>
<status status="PASS" starttime="20230223 13:47:53.532" endtime="20230223 13:47:53.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${rows_count}</arg>
<arg>${expected_row_number}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:53.533" endtime="20230223 13:47:53.533"/>
</kw>
<status status="PASS" starttime="20230223 13:47:53.499" endtime="20230223 13:47:53.534"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${expected_row_number}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:53.538" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:53.538" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:47:52 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"lewies","relief":"2880.00"},{"natid":"s876$$$$$$","name":"tester","relief":"2300.00"},{"natid":"s252$$$$$$","name":"testerb","relief":"2040.00"},{"natid":"s143$$$$$","name":"testerc","relief":"2500.00"},{"natid":"s191$$$$$$","name":"testerd","relief":"2820.00"},{"natid":"s242$$$$$$","name":"testere","relief":"3560.00"},{"natid":"s112$$$$$$","name":"testerf","relief":"3362.60"},{"natid":"s098$$$$$$","name":"testerg","relief":"4800.00"},{"natid":"s991$$$$$$","name":"testerh","relief":"1120.00"},{"natid":"s148$$$$$$","name":"testeri","relief":"3380.00"}] 
 </msg>
<msg timestamp="20230223 13:47:53.538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:47:53.534" endtime="20230223 13:47:53.538"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:47:53.542" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:53.540" endtime="20230223 13:47:53.542"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:47:53.543" level="INFO">${number_of_rows_from_db} = 10</msg>
<status status="PASS" starttime="20230223 13:47:53.543" endtime="20230223 13:47:53.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:47:53.544" endtime="20230223 13:47:53.544"/>
</kw>
<status status="PASS" starttime="20230223 13:47:53.534" endtime="20230223 13:47:53.544"/>
</kw>
<status status="PASS" starttime="20230223 13:47:51.932" endtime="20230223 13:47:53.544"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:53.548" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:53.548" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:53.545" endtime="20230223 13:47:53.548"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:47:53.549" endtime="20230223 13:47:55.687"/>
</kw>
<status status="PASS" starttime="20230223 13:47:53.545" endtime="20230223 13:47:55.688"/>
</kw>
<status status="PASS" starttime="20230223 13:47:53.545" endtime="20230223 13:47:55.688"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:47:51.931" endtime="20230223 13:47:55.688"/>
</test>
<status status="PASS" starttime="20230223 13:47:38.259" endtime="20230223 13:47:55.695"/>
</suite>
<suite id="s1-s4" name="UserStory3invalid" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory3invalid.robot">
<test id="s1-s4-t1" name="Upload invalid empty file edge" line="17">
<kw name="Invalid case">
<arg>${invalidFileEmptyFile}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:55.709" endtime="20230223 13:47:55.709"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:55.708" endtime="20230223 13:47:55.709"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:55.709" endtime="20230223 13:47:55.709"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:55.709" endtime="20230223 13:47:55.709"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:47:55.710" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:47:55.709" endtime="20230223 13:47:55.710"/>
</kw>
<status status="PASS" starttime="20230223 13:47:55.709" endtime="20230223 13:47:55.710"/>
</branch>
<status status="PASS" starttime="20230223 13:47:55.708" endtime="20230223 13:47:55.710"/>
</if>
<status status="PASS" starttime="20230223 13:47:55.708" endtime="20230223 13:47:55.710"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:55.711" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:55.711" endtime="20230223 13:47:55.711"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:47:55.712" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:47:55.712" endtime="20230223 13:47:57.469"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:57.471" endtime="20230223 13:47:57.487"/>
</kw>
<status status="PASS" starttime="20230223 13:47:55.711" endtime="20230223 13:47:57.487"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:47:57.488" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyFile.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:47:57.488" endtime="20230223 13:47:57.509"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:47:57.511" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:47:57.510" endtime="20230223 13:47:57.543"/>
</kw>
<status status="PASS" starttime="20230223 13:47:57.488" endtime="20230223 13:47:57.544"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:47:57.545" endtime="20230223 13:47:57.563"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:47:57.575" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:47:57.563" endtime="20230223 13:47:57.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:47:57.576" endtime="20230223 13:47:57.576"/>
</kw>
<status status="PASS" starttime="20230223 13:47:57.544" endtime="20230223 13:47:57.576"/>
</kw>
<status status="PASS" starttime="20230223 13:47:55.708" endtime="20230223 13:47:57.576"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:47:57.580" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:47:57.580" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:47:56 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:47:57.577" endtime="20230223 13:47:57.580"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:47:57.581" endtime="20230223 13:47:59.729"/>
</kw>
<status status="PASS" starttime="20230223 13:47:57.577" endtime="20230223 13:47:59.730"/>
</kw>
<status status="PASS" starttime="20230223 13:47:57.577" endtime="20230223 13:47:59.730"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:47:55.708" endtime="20230223 13:47:59.730"/>
</test>
<test id="s1-s4-t2" name="Upload invalid empty file firefox" line="19">
<kw name="Invalid case">
<arg>${invalidFileEmptyFile}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:59.739" endtime="20230223 13:47:59.739"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:59.739" endtime="20230223 13:47:59.739"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:47:59.740" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:47:59.739" endtime="20230223 13:47:59.740"/>
</kw>
<status status="PASS" starttime="20230223 13:47:59.739" endtime="20230223 13:47:59.740"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:47:59.741" endtime="20230223 13:47:59.741"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:47:59.741" endtime="20230223 13:47:59.741"/>
</branch>
<status status="PASS" starttime="20230223 13:47:59.739" endtime="20230223 13:47:59.741"/>
</if>
<status status="PASS" starttime="20230223 13:47:59.738" endtime="20230223 13:47:59.741"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:47:59.742" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:47:59.742" endtime="20230223 13:47:59.742"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:47:59.743" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:47:59.744" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-2.log</msg>
<status status="PASS" starttime="20230223 13:47:59.743" endtime="20230223 13:48:05.104"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:05.105" endtime="20230223 13:48:05.124"/>
</kw>
<status status="PASS" starttime="20230223 13:47:59.741" endtime="20230223 13:48:05.124"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:05.125" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyFile.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:48:05.124" endtime="20230223 13:48:05.131"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:05.133" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:05.132" endtime="20230223 13:48:05.351"/>
</kw>
<status status="PASS" starttime="20230223 13:48:05.124" endtime="20230223 13:48:05.352"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:05.353" endtime="20230223 13:48:05.366"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:05.378" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:48:05.366" endtime="20230223 13:48:05.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:48:05.379" endtime="20230223 13:48:05.380"/>
</kw>
<status status="PASS" starttime="20230223 13:48:05.353" endtime="20230223 13:48:05.380"/>
</kw>
<status status="PASS" starttime="20230223 13:47:59.738" endtime="20230223 13:48:05.380"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:05.383" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:05.384" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:04 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:05.381" endtime="20230223 13:48:05.384"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:05.385" endtime="20230223 13:48:08.439"/>
</kw>
<status status="PASS" starttime="20230223 13:48:05.381" endtime="20230223 13:48:08.439"/>
</kw>
<status status="PASS" starttime="20230223 13:48:05.380" endtime="20230223 13:48:08.439"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:47:59.737" endtime="20230223 13:48:08.439"/>
</test>
<test id="s1-s4-t3" name="Upload invalid empty file chrome" line="21">
<kw name="Invalid case">
<arg>${invalidFileEmptyFile}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:08.448" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:08.447" endtime="20230223 13:48:08.448"/>
</kw>
<status status="PASS" starttime="20230223 13:48:08.447" endtime="20230223 13:48:08.449"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:08.449" endtime="20230223 13:48:08.449"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:08.449" endtime="20230223 13:48:08.449"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:08.449" endtime="20230223 13:48:08.450"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:08.449" endtime="20230223 13:48:08.450"/>
</branch>
<status status="PASS" starttime="20230223 13:48:08.447" endtime="20230223 13:48:08.450"/>
</if>
<status status="PASS" starttime="20230223 13:48:08.447" endtime="20230223 13:48:08.450"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:08.451" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:08.451" endtime="20230223 13:48:08.451"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:08.453" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:48:08.452" endtime="20230223 13:48:09.890"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:09.891" endtime="20230223 13:48:09.908"/>
</kw>
<status status="PASS" starttime="20230223 13:48:08.450" endtime="20230223 13:48:09.908"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:09.909" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyFile.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:48:09.908" endtime="20230223 13:48:09.930"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:09.932" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:09.931" endtime="20230223 13:48:09.963"/>
</kw>
<status status="PASS" starttime="20230223 13:48:09.908" endtime="20230223 13:48:09.965"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:09.965" endtime="20230223 13:48:09.981"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:09.992" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:48:09.982" endtime="20230223 13:48:09.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:48:09.993" endtime="20230223 13:48:09.994"/>
</kw>
<status status="PASS" starttime="20230223 13:48:09.965" endtime="20230223 13:48:09.994"/>
</kw>
<status status="PASS" starttime="20230223 13:48:08.447" endtime="20230223 13:48:09.994"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:09.997" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:09.998" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:09 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:09.995" endtime="20230223 13:48:09.998"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:09.998" endtime="20230223 13:48:12.152"/>
</kw>
<status status="PASS" starttime="20230223 13:48:09.995" endtime="20230223 13:48:12.152"/>
</kw>
<status status="PASS" starttime="20230223 13:48:09.994" endtime="20230223 13:48:12.152"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:48:08.446" endtime="20230223 13:48:12.153"/>
</test>
<test id="s1-s4-t4" name="Upload invalid empty rows edge" line="24">
<kw name="Invalid case">
<arg>${invalidFileEmptyRows}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:12.160" endtime="20230223 13:48:12.160"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:12.160" endtime="20230223 13:48:12.160"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:12.161" endtime="20230223 13:48:12.161"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:12.161" endtime="20230223 13:48:12.161"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:12.162" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:12.161" endtime="20230223 13:48:12.162"/>
</kw>
<status status="PASS" starttime="20230223 13:48:12.161" endtime="20230223 13:48:12.162"/>
</branch>
<status status="PASS" starttime="20230223 13:48:12.160" endtime="20230223 13:48:12.162"/>
</if>
<status status="PASS" starttime="20230223 13:48:12.160" endtime="20230223 13:48:12.163"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:12.163" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:12.163" endtime="20230223 13:48:12.163"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:12.164" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:48:12.164" endtime="20230223 13:48:13.798"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:13.800" endtime="20230223 13:48:13.818"/>
</kw>
<status status="PASS" starttime="20230223 13:48:12.163" endtime="20230223 13:48:13.818"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:13.819" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyRows.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:48:13.819" endtime="20230223 13:48:13.847"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:13.848" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:13.848" endtime="20230223 13:48:13.893"/>
</kw>
<status status="PASS" starttime="20230223 13:48:13.819" endtime="20230223 13:48:13.895"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:13.895" endtime="20230223 13:48:13.918"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:13.933" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:48:13.919" endtime="20230223 13:48:13.933"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:48:13.934" endtime="20230223 13:48:13.934"/>
</kw>
<status status="PASS" starttime="20230223 13:48:13.895" endtime="20230223 13:48:13.935"/>
</kw>
<status status="PASS" starttime="20230223 13:48:12.159" endtime="20230223 13:48:13.935"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:13.939" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:13.939" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:13 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:13.936" endtime="20230223 13:48:13.940"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:13.941" endtime="20230223 13:48:16.065"/>
</kw>
<status status="PASS" starttime="20230223 13:48:13.936" endtime="20230223 13:48:16.066"/>
</kw>
<status status="PASS" starttime="20230223 13:48:13.935" endtime="20230223 13:48:16.066"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:48:12.159" endtime="20230223 13:48:16.067"/>
</test>
<test id="s1-s4-t5" name="Upload invalid empty rows firefox" line="26">
<kw name="Invalid case">
<arg>${invalidFileEmptyRows}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:16.075" endtime="20230223 13:48:16.075"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:16.075" endtime="20230223 13:48:16.075"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:16.076" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:16.075" endtime="20230223 13:48:16.076"/>
</kw>
<status status="PASS" starttime="20230223 13:48:16.075" endtime="20230223 13:48:16.077"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:16.077" endtime="20230223 13:48:16.077"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:16.077" endtime="20230223 13:48:16.077"/>
</branch>
<status status="PASS" starttime="20230223 13:48:16.074" endtime="20230223 13:48:16.077"/>
</if>
<status status="PASS" starttime="20230223 13:48:16.074" endtime="20230223 13:48:16.077"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:16.078" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:16.078" endtime="20230223 13:48:16.078"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:16.079" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:48:16.080" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-3.log</msg>
<status status="PASS" starttime="20230223 13:48:16.079" endtime="20230223 13:48:21.666"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:21.667" endtime="20230223 13:48:21.684"/>
</kw>
<status status="PASS" starttime="20230223 13:48:16.078" endtime="20230223 13:48:21.684"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:21.685" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyRows.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:48:21.685" endtime="20230223 13:48:21.696"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:21.697" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:21.697" endtime="20230223 13:48:21.916"/>
</kw>
<status status="PASS" starttime="20230223 13:48:21.684" endtime="20230223 13:48:21.917"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:21.918" endtime="20230223 13:48:21.928"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:21.942" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:48:21.928" endtime="20230223 13:48:21.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:48:21.944" endtime="20230223 13:48:21.944"/>
</kw>
<status status="PASS" starttime="20230223 13:48:21.918" endtime="20230223 13:48:21.944"/>
</kw>
<status status="PASS" starttime="20230223 13:48:16.074" endtime="20230223 13:48:21.944"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:21.948" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:21.948" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:21 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:21.945" endtime="20230223 13:48:21.948"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:21.949" endtime="20230223 13:48:24.984"/>
</kw>
<status status="PASS" starttime="20230223 13:48:21.945" endtime="20230223 13:48:24.984"/>
</kw>
<status status="PASS" starttime="20230223 13:48:21.945" endtime="20230223 13:48:24.984"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:48:16.073" endtime="20230223 13:48:24.984"/>
</test>
<test id="s1-s4-t6" name="Upload invalid empty rows chrome" line="28">
<kw name="Invalid case">
<arg>${invalidFileEmptyRows}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:24.993" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:24.993" endtime="20230223 13:48:24.993"/>
</kw>
<status status="PASS" starttime="20230223 13:48:24.992" endtime="20230223 13:48:24.994"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:24.994" endtime="20230223 13:48:24.994"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:24.994" endtime="20230223 13:48:24.994"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:24.994" endtime="20230223 13:48:24.994"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:24.994" endtime="20230223 13:48:24.995"/>
</branch>
<status status="PASS" starttime="20230223 13:48:24.992" endtime="20230223 13:48:24.995"/>
</if>
<status status="PASS" starttime="20230223 13:48:24.992" endtime="20230223 13:48:24.995"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:24.995" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:24.995" endtime="20230223 13:48:24.996"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:24.997" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:48:24.996" endtime="20230223 13:48:26.615"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:26.616" endtime="20230223 13:48:26.632"/>
</kw>
<status status="PASS" starttime="20230223 13:48:24.995" endtime="20230223 13:48:26.632"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:26.633" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidEmptyRows.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:48:26.632" endtime="20230223 13:48:26.657"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:26.658" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:26.658" endtime="20230223 13:48:26.690"/>
</kw>
<status status="PASS" starttime="20230223 13:48:26.632" endtime="20230223 13:48:26.692"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:26.692" endtime="20230223 13:48:26.709"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:26.721" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:48:26.710" endtime="20230223 13:48:26.721"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:48:26.722" endtime="20230223 13:48:26.722"/>
</kw>
<status status="PASS" starttime="20230223 13:48:26.692" endtime="20230223 13:48:26.723"/>
</kw>
<status status="PASS" starttime="20230223 13:48:24.992" endtime="20230223 13:48:26.723"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:26.726" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:26.727" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:25 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:26.724" endtime="20230223 13:48:26.727"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:26.728" endtime="20230223 13:48:28.887"/>
</kw>
<status status="PASS" starttime="20230223 13:48:26.723" endtime="20230223 13:48:28.888"/>
</kw>
<status status="PASS" starttime="20230223 13:48:26.723" endtime="20230223 13:48:28.888"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:48:24.991" endtime="20230223 13:48:28.889"/>
</test>
<test id="s1-s4-t7" name="Upload invalid file type pdf edge" line="31">
<kw name="Invalid case">
<arg>${invalidFilePDF}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:28.897" endtime="20230223 13:48:28.897"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:28.896" endtime="20230223 13:48:28.897"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:28.897" endtime="20230223 13:48:28.897"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:28.897" endtime="20230223 13:48:28.897"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:28.898" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:28.898" endtime="20230223 13:48:28.898"/>
</kw>
<status status="PASS" starttime="20230223 13:48:28.898" endtime="20230223 13:48:28.899"/>
</branch>
<status status="PASS" starttime="20230223 13:48:28.896" endtime="20230223 13:48:28.899"/>
</if>
<status status="PASS" starttime="20230223 13:48:28.896" endtime="20230223 13:48:28.899"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:28.900" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:28.899" endtime="20230223 13:48:28.900"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:28.901" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:48:28.901" endtime="20230223 13:48:31.133"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:31.134" endtime="20230223 13:48:31.150"/>
</kw>
<status status="PASS" starttime="20230223 13:48:28.899" endtime="20230223 13:48:31.150"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:31.151" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.pdf to browser.</msg>
<status status="PASS" starttime="20230223 13:48:31.150" endtime="20230223 13:48:31.171"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:31.173" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:31.172" endtime="20230223 13:48:31.203"/>
</kw>
<status status="PASS" starttime="20230223 13:48:31.150" endtime="20230223 13:48:31.204"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:48:36.480" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:48:36.480" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:48:31.205" endtime="20230223 13:48:36.481"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:48:36.482" endtime="20230223 13:48:36.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:48:36.482" endtime="20230223 13:48:36.482"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:31.204" endtime="20230223 13:48:36.482"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:28.896" endtime="20230223 13:48:36.482"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:36.487" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:36.487" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:36.484" endtime="20230223 13:48:36.487"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:36.488" endtime="20230223 13:48:38.602"/>
</kw>
<status status="PASS" starttime="20230223 13:48:36.484" endtime="20230223 13:48:38.603"/>
</kw>
<status status="PASS" starttime="20230223 13:48:36.483" endtime="20230223 13:48:38.603"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:48:28.895" endtime="20230223 13:48:38.603">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t8" name="Upload invalid file type pdf firefox" line="33">
<kw name="Invalid case">
<arg>${invalidFilePDF}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:38.612" endtime="20230223 13:48:38.612"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:38.611" endtime="20230223 13:48:38.612"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:38.612" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:38.612" endtime="20230223 13:48:38.612"/>
</kw>
<status status="PASS" starttime="20230223 13:48:38.612" endtime="20230223 13:48:38.613"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:38.614" endtime="20230223 13:48:38.614"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:38.613" endtime="20230223 13:48:38.614"/>
</branch>
<status status="PASS" starttime="20230223 13:48:38.611" endtime="20230223 13:48:38.614"/>
</if>
<status status="PASS" starttime="20230223 13:48:38.611" endtime="20230223 13:48:38.614"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:38.615" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:38.614" endtime="20230223 13:48:38.615"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:38.616" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:48:38.617" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-4.log</msg>
<status status="PASS" starttime="20230223 13:48:38.616" endtime="20230223 13:48:44.604"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:44.605" endtime="20230223 13:48:44.628"/>
</kw>
<status status="PASS" starttime="20230223 13:48:38.614" endtime="20230223 13:48:44.628"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:44.629" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.pdf to browser.</msg>
<status status="PASS" starttime="20230223 13:48:44.629" endtime="20230223 13:48:44.637"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:44.638" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:44.637" endtime="20230223 13:48:44.860"/>
</kw>
<status status="PASS" starttime="20230223 13:48:44.628" endtime="20230223 13:48:44.861"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:48:49.968" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:48:49.968" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:48:44.862" endtime="20230223 13:48:49.968"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:48:49.969" endtime="20230223 13:48:49.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:48:49.969" endtime="20230223 13:48:49.969"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:44.862" endtime="20230223 13:48:49.970"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:38.611" endtime="20230223 13:48:49.970"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:49.974" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:49.974" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:49 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:49.971" endtime="20230223 13:48:49.975"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:49.975" endtime="20230223 13:48:52.491"/>
</kw>
<status status="PASS" starttime="20230223 13:48:49.971" endtime="20230223 13:48:52.491"/>
</kw>
<status status="PASS" starttime="20230223 13:48:49.970" endtime="20230223 13:48:52.492"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:48:38.610" endtime="20230223 13:48:52.492">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t9" name="Upload invalid file type pdf chrome" line="35">
<kw name="Invalid case">
<arg>${invalidFilePDF}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:48:52.500" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:48:52.500" endtime="20230223 13:48:52.500"/>
</kw>
<status status="PASS" starttime="20230223 13:48:52.500" endtime="20230223 13:48:52.501"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:52.501" endtime="20230223 13:48:52.502"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:52.501" endtime="20230223 13:48:52.502"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:48:52.502" endtime="20230223 13:48:52.502"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:48:52.502" endtime="20230223 13:48:52.502"/>
</branch>
<status status="PASS" starttime="20230223 13:48:52.500" endtime="20230223 13:48:52.502"/>
</if>
<status status="PASS" starttime="20230223 13:48:52.500" endtime="20230223 13:48:52.502"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:48:52.503" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:48:52.503" endtime="20230223 13:48:52.503"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:48:52.504" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:48:52.504" endtime="20230223 13:48:53.933"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:48:53.934" endtime="20230223 13:48:53.953"/>
</kw>
<status status="PASS" starttime="20230223 13:48:52.502" endtime="20230223 13:48:53.953"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:48:53.954" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.pdf to browser.</msg>
<status status="PASS" starttime="20230223 13:48:53.953" endtime="20230223 13:48:53.977"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:48:53.979" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:48:53.978" endtime="20230223 13:48:54.019"/>
</kw>
<status status="PASS" starttime="20230223 13:48:53.953" endtime="20230223 13:48:54.020"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:48:59.249" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:48:59.249" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:48:54.021" endtime="20230223 13:48:59.250"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:48:59.251" endtime="20230223 13:48:59.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:48:59.251" endtime="20230223 13:48:59.251"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:54.020" endtime="20230223 13:48:59.251"/>
</kw>
<status status="FAIL" starttime="20230223 13:48:52.499" endtime="20230223 13:48:59.251"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:48:59.256" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:48:59.256" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:48:59 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:48:59.252" endtime="20230223 13:48:59.256"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:48:59.257" endtime="20230223 13:49:01.370"/>
</kw>
<status status="PASS" starttime="20230223 13:48:59.252" endtime="20230223 13:49:01.370"/>
</kw>
<status status="PASS" starttime="20230223 13:48:59.252" endtime="20230223 13:49:01.371"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:48:52.499" endtime="20230223 13:49:01.371">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t10" name="Upload invalid file type xls edge" line="38">
<kw name="Invalid case">
<arg>${invalidFileXLS}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.378"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.378"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.379"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.379"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:01.379" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:01.379" endtime="20230223 13:49:01.379"/>
</kw>
<status status="PASS" starttime="20230223 13:49:01.379" endtime="20230223 13:49:01.380"/>
</branch>
<status status="PASS" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.380"/>
</if>
<status status="PASS" starttime="20230223 13:49:01.378" endtime="20230223 13:49:01.380"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:01.380" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:01.380" endtime="20230223 13:49:01.381"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:01.382" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:49:01.381" endtime="20230223 13:49:03.027"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:03.028" endtime="20230223 13:49:03.045"/>
</kw>
<status status="PASS" starttime="20230223 13:49:01.380" endtime="20230223 13:49:03.046"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:03.047" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.xls to browser.</msg>
<status status="PASS" starttime="20230223 13:49:03.046" endtime="20230223 13:49:03.068"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:03.069" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:03.069" endtime="20230223 13:49:03.104"/>
</kw>
<status status="PASS" starttime="20230223 13:49:03.046" endtime="20230223 13:49:03.106"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:49:08.347" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:49:08.348" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:49:03.107" endtime="20230223 13:49:08.348"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:49:08.349" endtime="20230223 13:49:08.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:49:08.349" endtime="20230223 13:49:08.349"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:03.106" endtime="20230223 13:49:08.349"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:01.377" endtime="20230223 13:49:08.350"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:08.354" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:08.354" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:08 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:08.350" endtime="20230223 13:49:08.354"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:08.355" endtime="20230223 13:49:10.482"/>
</kw>
<status status="PASS" starttime="20230223 13:49:08.350" endtime="20230223 13:49:10.483"/>
</kw>
<status status="PASS" starttime="20230223 13:49:08.350" endtime="20230223 13:49:10.483"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:49:01.377" endtime="20230223 13:49:10.483">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t11" name="Upload invalid file type xls firefox" line="40">
<kw name="Invalid case">
<arg>${invalidFileXLS}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:10.494" endtime="20230223 13:49:10.494"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:10.493" endtime="20230223 13:49:10.494"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:10.494" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:10.494" endtime="20230223 13:49:10.494"/>
</kw>
<status status="PASS" starttime="20230223 13:49:10.494" endtime="20230223 13:49:10.495"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:10.496" endtime="20230223 13:49:10.496"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:10.495" endtime="20230223 13:49:10.496"/>
</branch>
<status status="PASS" starttime="20230223 13:49:10.493" endtime="20230223 13:49:10.496"/>
</if>
<status status="PASS" starttime="20230223 13:49:10.493" endtime="20230223 13:49:10.496"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:10.497" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:10.496" endtime="20230223 13:49:10.497"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:10.498" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:49:10.498" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-5.log</msg>
<status status="PASS" starttime="20230223 13:49:10.497" endtime="20230223 13:49:16.561"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:16.562" endtime="20230223 13:49:16.583"/>
</kw>
<status status="PASS" starttime="20230223 13:49:10.496" endtime="20230223 13:49:16.584"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:16.585" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.xls to browser.</msg>
<status status="PASS" starttime="20230223 13:49:16.585" endtime="20230223 13:49:16.597"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:16.599" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:16.598" endtime="20230223 13:49:16.822"/>
</kw>
<status status="PASS" starttime="20230223 13:49:16.584" endtime="20230223 13:49:16.823"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:49:21.930" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-5.png"&gt;&lt;img src="selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:49:21.930" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:49:16.823" endtime="20230223 13:49:21.930"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:49:21.931" endtime="20230223 13:49:21.931"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:49:21.931" endtime="20230223 13:49:21.931"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:16.823" endtime="20230223 13:49:21.931"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:10.493" endtime="20230223 13:49:21.932"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:21.936" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:21.936" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:21 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:21.932" endtime="20230223 13:49:21.936"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:21.937" endtime="20230223 13:49:24.480"/>
</kw>
<status status="PASS" starttime="20230223 13:49:21.932" endtime="20230223 13:49:24.480"/>
</kw>
<status status="PASS" starttime="20230223 13:49:21.932" endtime="20230223 13:49:24.480"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:49:10.492" endtime="20230223 13:49:24.481">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t12" name="Upload invalid file type xls chrome" line="42">
<kw name="Invalid case">
<arg>${invalidFileXLS}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:24.489" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:24.489" endtime="20230223 13:49:24.489"/>
</kw>
<status status="PASS" starttime="20230223 13:49:24.489" endtime="20230223 13:49:24.490"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:24.490" endtime="20230223 13:49:24.490"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:24.490" endtime="20230223 13:49:24.490"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:24.491" endtime="20230223 13:49:24.491"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:24.491" endtime="20230223 13:49:24.491"/>
</branch>
<status status="PASS" starttime="20230223 13:49:24.488" endtime="20230223 13:49:24.491"/>
</if>
<status status="PASS" starttime="20230223 13:49:24.488" endtime="20230223 13:49:24.491"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:24.492" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:24.492" endtime="20230223 13:49:24.492"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:24.493" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:49:24.493" endtime="20230223 13:49:25.893"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:25.894" endtime="20230223 13:49:25.910"/>
</kw>
<status status="PASS" starttime="20230223 13:49:24.491" endtime="20230223 13:49:25.910"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:25.911" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataValid.xls to browser.</msg>
<status status="PASS" starttime="20230223 13:49:25.911" endtime="20230223 13:49:25.934"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:25.936" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:25.936" endtime="20230223 13:49:25.970"/>
</kw>
<status status="PASS" starttime="20230223 13:49:25.911" endtime="20230223 13:49:25.971"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:49:31.216" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-6.png"&gt;&lt;img src="selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:49:31.216" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:49:25.972" endtime="20230223 13:49:31.217"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:49:31.217" endtime="20230223 13:49:31.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:49:31.218" endtime="20230223 13:49:31.218"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:25.971" endtime="20230223 13:49:31.218"/>
</kw>
<status status="FAIL" starttime="20230223 13:49:24.488" endtime="20230223 13:49:31.218"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:31.222" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:31.223" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:31 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:31.219" endtime="20230223 13:49:31.223"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:31.224" endtime="20230223 13:49:33.316"/>
</kw>
<status status="PASS" starttime="20230223 13:49:31.219" endtime="20230223 13:49:33.316"/>
</kw>
<status status="PASS" starttime="20230223 13:49:31.218" endtime="20230223 13:49:33.316"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:49:24.487" endtime="20230223 13:49:33.317">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t13" name="Upload invalid missing data edge" line="45">
<kw name="Invalid case">
<arg>${invalidFileMissingData}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:33.324" endtime="20230223 13:49:33.324"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:33.324" endtime="20230223 13:49:33.325"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:33.325" endtime="20230223 13:49:33.325"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:33.325" endtime="20230223 13:49:33.325"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:33.325" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:33.325" endtime="20230223 13:49:33.325"/>
</kw>
<status status="PASS" starttime="20230223 13:49:33.325" endtime="20230223 13:49:33.326"/>
</branch>
<status status="PASS" starttime="20230223 13:49:33.324" endtime="20230223 13:49:33.326"/>
</if>
<status status="PASS" starttime="20230223 13:49:33.324" endtime="20230223 13:49:33.326"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:33.327" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:33.327" endtime="20230223 13:49:33.327"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:33.328" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:49:33.328" endtime="20230223 13:49:34.949"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:34.951" endtime="20230223 13:49:34.973"/>
</kw>
<status status="PASS" starttime="20230223 13:49:33.326" endtime="20230223 13:49:34.973"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:34.974" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingData.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:49:34.974" endtime="20230223 13:49:34.995"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:34.997" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:34.996" endtime="20230223 13:49:35.029"/>
</kw>
<status status="PASS" starttime="20230223 13:49:34.973" endtime="20230223 13:49:35.030"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:35.031" endtime="20230223 13:49:35.049"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:35.059" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:49:35.049" endtime="20230223 13:49:35.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:49:35.060" endtime="20230223 13:49:35.061"/>
</kw>
<status status="PASS" starttime="20230223 13:49:35.030" endtime="20230223 13:49:35.061"/>
</kw>
<status status="PASS" starttime="20230223 13:49:33.323" endtime="20230223 13:49:35.061"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:35.065" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:35.065" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:34 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:35.062" endtime="20230223 13:49:35.065"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:35.066" endtime="20230223 13:49:37.181"/>
</kw>
<status status="PASS" starttime="20230223 13:49:35.062" endtime="20230223 13:49:37.182"/>
</kw>
<status status="PASS" starttime="20230223 13:49:35.061" endtime="20230223 13:49:37.182"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:49:33.323" endtime="20230223 13:49:37.183"/>
</test>
<test id="s1-s4-t14" name="Upload invalid missing data firefox" line="47">
<kw name="Invalid case">
<arg>${invalidFileMissingData}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:37.191" endtime="20230223 13:49:37.191"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:37.191" endtime="20230223 13:49:37.191"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:37.192" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:37.192" endtime="20230223 13:49:37.192"/>
</kw>
<status status="PASS" starttime="20230223 13:49:37.191" endtime="20230223 13:49:37.193"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:37.193" endtime="20230223 13:49:37.193"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:37.193" endtime="20230223 13:49:37.193"/>
</branch>
<status status="PASS" starttime="20230223 13:49:37.191" endtime="20230223 13:49:37.194"/>
</if>
<status status="PASS" starttime="20230223 13:49:37.190" endtime="20230223 13:49:37.194"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:37.194" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:37.194" endtime="20230223 13:49:37.194"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:37.196" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:49:37.196" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-6.log</msg>
<status status="PASS" starttime="20230223 13:49:37.195" endtime="20230223 13:49:43.095"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:43.096" endtime="20230223 13:49:43.115"/>
</kw>
<status status="PASS" starttime="20230223 13:49:37.194" endtime="20230223 13:49:43.115"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:43.116" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingData.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:49:43.116" endtime="20230223 13:49:43.125"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:43.126" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:43.126" endtime="20230223 13:49:43.347"/>
</kw>
<status status="PASS" starttime="20230223 13:49:43.115" endtime="20230223 13:49:43.348"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:43.349" endtime="20230223 13:49:43.358"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:43.372" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:49:43.359" endtime="20230223 13:49:43.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:49:43.373" endtime="20230223 13:49:43.373"/>
</kw>
<status status="PASS" starttime="20230223 13:49:43.349" endtime="20230223 13:49:43.373"/>
</kw>
<status status="PASS" starttime="20230223 13:49:37.190" endtime="20230223 13:49:43.373"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:43.377" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:43.377" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:42 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:43.374" endtime="20230223 13:49:43.377"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:43.378" endtime="20230223 13:49:46.309"/>
</kw>
<status status="PASS" starttime="20230223 13:49:43.374" endtime="20230223 13:49:46.309"/>
</kw>
<status status="PASS" starttime="20230223 13:49:43.374" endtime="20230223 13:49:46.309"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:49:37.190" endtime="20230223 13:49:46.310"/>
</test>
<test id="s1-s4-t15" name="Upload invalid missing data chrome" line="49">
<kw name="Invalid case">
<arg>${invalidFileMissingData}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:46.318" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:46.318" endtime="20230223 13:49:46.318"/>
</kw>
<status status="PASS" starttime="20230223 13:49:46.318" endtime="20230223 13:49:46.319"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:46.319" endtime="20230223 13:49:46.319"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:46.319" endtime="20230223 13:49:46.319"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:46.320" endtime="20230223 13:49:46.320"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:46.319" endtime="20230223 13:49:46.320"/>
</branch>
<status status="PASS" starttime="20230223 13:49:46.318" endtime="20230223 13:49:46.320"/>
</if>
<status status="PASS" starttime="20230223 13:49:46.317" endtime="20230223 13:49:46.320"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:46.321" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:46.320" endtime="20230223 13:49:46.321"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:46.322" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:49:46.322" endtime="20230223 13:49:47.732"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:47.734" endtime="20230223 13:49:47.750"/>
</kw>
<status status="PASS" starttime="20230223 13:49:46.320" endtime="20230223 13:49:47.750"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:47.751" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingData.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:49:47.750" endtime="20230223 13:49:47.773"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:47.775" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:47.775" endtime="20230223 13:49:47.812"/>
</kw>
<status status="PASS" starttime="20230223 13:49:47.750" endtime="20230223 13:49:47.813"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:47.814" endtime="20230223 13:49:47.830"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:47.842" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:49:47.830" endtime="20230223 13:49:47.842"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:49:47.844" endtime="20230223 13:49:47.844"/>
</kw>
<status status="PASS" starttime="20230223 13:49:47.813" endtime="20230223 13:49:47.844"/>
</kw>
<status status="PASS" starttime="20230223 13:49:46.317" endtime="20230223 13:49:47.844"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:47.848" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:47.848" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:47 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:47.845" endtime="20230223 13:49:47.848"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:47.849" endtime="20230223 13:49:49.985"/>
</kw>
<status status="PASS" starttime="20230223 13:49:47.845" endtime="20230223 13:49:49.986"/>
</kw>
<status status="PASS" starttime="20230223 13:49:47.845" endtime="20230223 13:49:49.986"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:49:46.316" endtime="20230223 13:49:49.986"/>
</test>
<test id="s1-s4-t16" name="Upload invalid missing natid edge" line="52">
<kw name="Invalid case">
<arg>${invalidFileMissingNatid}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:49.995" endtime="20230223 13:49:49.995"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:49.995" endtime="20230223 13:49:49.995"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:49.996" endtime="20230223 13:49:49.996"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:49.995" endtime="20230223 13:49:49.996"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:49.996" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:49.996" endtime="20230223 13:49:49.996"/>
</kw>
<status status="PASS" starttime="20230223 13:49:49.996" endtime="20230223 13:49:49.997"/>
</branch>
<status status="PASS" starttime="20230223 13:49:49.995" endtime="20230223 13:49:49.997"/>
</if>
<status status="PASS" starttime="20230223 13:49:49.994" endtime="20230223 13:49:49.997"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:49.998" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:49.998" endtime="20230223 13:49:49.998"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:49.999" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:49:49.999" endtime="20230223 13:49:51.626"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:51.628" endtime="20230223 13:49:51.643"/>
</kw>
<status status="PASS" starttime="20230223 13:49:49.998" endtime="20230223 13:49:51.643"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:51.644" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingNatid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:49:51.644" endtime="20230223 13:49:51.666"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:51.668" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:51.668" endtime="20230223 13:49:51.709"/>
</kw>
<status status="PASS" starttime="20230223 13:49:51.643" endtime="20230223 13:49:51.711"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:51.712" endtime="20230223 13:49:51.729"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:51.741" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:49:51.730" endtime="20230223 13:49:51.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:49:51.743" endtime="20230223 13:49:51.743"/>
</kw>
<status status="PASS" starttime="20230223 13:49:51.711" endtime="20230223 13:49:51.743"/>
</kw>
<status status="PASS" starttime="20230223 13:49:49.994" endtime="20230223 13:49:51.743"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:51.747" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:51.747" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:51 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:51.744" endtime="20230223 13:49:51.747"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:51.748" endtime="20230223 13:49:53.885"/>
</kw>
<status status="PASS" starttime="20230223 13:49:51.744" endtime="20230223 13:49:53.886"/>
</kw>
<status status="PASS" starttime="20230223 13:49:51.744" endtime="20230223 13:49:53.886"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:49:49.993" endtime="20230223 13:49:53.886"/>
</test>
<test id="s1-s4-t17" name="Upload invalid missing natid firefox" line="54">
<kw name="Invalid case">
<arg>${invalidFileMissingNatid}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:53.895" endtime="20230223 13:49:53.895"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:53.895" endtime="20230223 13:49:53.896"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:49:53.896" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:49:53.896" endtime="20230223 13:49:53.896"/>
</kw>
<status status="PASS" starttime="20230223 13:49:53.896" endtime="20230223 13:49:53.897"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:49:53.897" endtime="20230223 13:49:53.897"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:49:53.897" endtime="20230223 13:49:53.898"/>
</branch>
<status status="PASS" starttime="20230223 13:49:53.895" endtime="20230223 13:49:53.898"/>
</if>
<status status="PASS" starttime="20230223 13:49:53.895" endtime="20230223 13:49:53.898"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:49:53.898" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:49:53.898" endtime="20230223 13:49:53.898"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:49:53.900" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:49:53.900" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-7.log</msg>
<status status="PASS" starttime="20230223 13:49:53.899" endtime="20230223 13:49:59.500"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:59.501" endtime="20230223 13:49:59.522"/>
</kw>
<status status="PASS" starttime="20230223 13:49:53.898" endtime="20230223 13:49:59.522"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:49:59.524" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingNatid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:49:59.523" endtime="20230223 13:49:59.532"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:59.534" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:49:59.533" endtime="20230223 13:49:59.761"/>
</kw>
<status status="PASS" starttime="20230223 13:49:59.523" endtime="20230223 13:49:59.762"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:49:59.762" endtime="20230223 13:49:59.772"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:49:59.786" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:49:59.772" endtime="20230223 13:49:59.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:49:59.787" endtime="20230223 13:49:59.787"/>
</kw>
<status status="PASS" starttime="20230223 13:49:59.762" endtime="20230223 13:49:59.787"/>
</kw>
<status status="PASS" starttime="20230223 13:49:53.894" endtime="20230223 13:49:59.787"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:49:59.791" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:49:59.791" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:49:59 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:49:59.788" endtime="20230223 13:49:59.791"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:49:59.792" endtime="20230223 13:50:02.859"/>
</kw>
<status status="PASS" starttime="20230223 13:49:59.788" endtime="20230223 13:50:02.859"/>
</kw>
<status status="PASS" starttime="20230223 13:49:59.788" endtime="20230223 13:50:02.859"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:49:53.894" endtime="20230223 13:50:02.860"/>
</test>
<test id="s1-s4-t18" name="Upload invalid missing natid chrome" line="56">
<kw name="Invalid case">
<arg>${invalidFileMissingNatid}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:02.868" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:02.868" endtime="20230223 13:50:02.868"/>
</kw>
<status status="PASS" starttime="20230223 13:50:02.868" endtime="20230223 13:50:02.869"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:02.869" endtime="20230223 13:50:02.869"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:02.869" endtime="20230223 13:50:02.869"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:02.870" endtime="20230223 13:50:02.870"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:02.869" endtime="20230223 13:50:02.870"/>
</branch>
<status status="PASS" starttime="20230223 13:50:02.868" endtime="20230223 13:50:02.870"/>
</if>
<status status="PASS" starttime="20230223 13:50:02.867" endtime="20230223 13:50:02.870"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:02.871" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:02.870" endtime="20230223 13:50:02.871"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:02.872" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:02.871" endtime="20230223 13:50:04.259"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:04.261" endtime="20230223 13:50:04.276"/>
</kw>
<status status="PASS" starttime="20230223 13:50:02.870" endtime="20230223 13:50:04.276"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:04.277" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingNatid.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:04.277" endtime="20230223 13:50:04.300"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:04.302" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:04.301" endtime="20230223 13:50:04.339"/>
</kw>
<status status="PASS" starttime="20230223 13:50:04.276" endtime="20230223 13:50:04.340"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:04.341" endtime="20230223 13:50:04.355"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:04.367" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:04.355" endtime="20230223 13:50:04.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:04.368" endtime="20230223 13:50:04.368"/>
</kw>
<status status="PASS" starttime="20230223 13:50:04.340" endtime="20230223 13:50:04.369"/>
</kw>
<status status="PASS" starttime="20230223 13:50:02.867" endtime="20230223 13:50:04.369"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:04.374" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:04.374" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:03 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:04.370" endtime="20230223 13:50:04.374"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:04.375" endtime="20230223 13:50:06.524"/>
</kw>
<status status="PASS" starttime="20230223 13:50:04.369" endtime="20230223 13:50:06.524"/>
</kw>
<status status="PASS" starttime="20230223 13:50:04.369" endtime="20230223 13:50:06.525"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:02.867" endtime="20230223 13:50:06.525"/>
</test>
<test id="s1-s4-t19" name="Upload invalid missing name edge" line="59">
<kw name="Invalid case">
<arg>${invalidFileMissingName}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:06.533" endtime="20230223 13:50:06.534"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:06.533" endtime="20230223 13:50:06.534"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:06.534" endtime="20230223 13:50:06.534"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:06.534" endtime="20230223 13:50:06.534"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:06.535" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:06.535" endtime="20230223 13:50:06.535"/>
</kw>
<status status="PASS" starttime="20230223 13:50:06.534" endtime="20230223 13:50:06.536"/>
</branch>
<status status="PASS" starttime="20230223 13:50:06.533" endtime="20230223 13:50:06.536"/>
</if>
<status status="PASS" starttime="20230223 13:50:06.533" endtime="20230223 13:50:06.536"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:06.536" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:06.536" endtime="20230223 13:50:06.537"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:06.538" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:06.537" endtime="20230223 13:50:08.110"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:08.112" endtime="20230223 13:50:08.129"/>
</kw>
<status status="PASS" starttime="20230223 13:50:06.536" endtime="20230223 13:50:08.129"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:08.130" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingName.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:08.130" endtime="20230223 13:50:08.151"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:08.152" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:08.152" endtime="20230223 13:50:08.190"/>
</kw>
<status status="PASS" starttime="20230223 13:50:08.129" endtime="20230223 13:50:08.192"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:08.193" endtime="20230223 13:50:08.210"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:08.222" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:08.211" endtime="20230223 13:50:08.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:08.224" endtime="20230223 13:50:08.224"/>
</kw>
<status status="PASS" starttime="20230223 13:50:08.192" endtime="20230223 13:50:08.224"/>
</kw>
<status status="PASS" starttime="20230223 13:50:06.533" endtime="20230223 13:50:08.224"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:08.228" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:08.228" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:07 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:08.225" endtime="20230223 13:50:08.228"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:08.229" endtime="20230223 13:50:10.366"/>
</kw>
<status status="PASS" starttime="20230223 13:50:08.225" endtime="20230223 13:50:10.367"/>
</kw>
<status status="PASS" starttime="20230223 13:50:08.225" endtime="20230223 13:50:10.367"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:06.532" endtime="20230223 13:50:10.368"/>
</test>
<test id="s1-s4-t20" name="Upload invalid missing name firefox" line="61">
<kw name="Invalid case">
<arg>${invalidFileMissingName}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:10.376" endtime="20230223 13:50:10.376"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:10.376" endtime="20230223 13:50:10.376"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:10.377" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:10.377" endtime="20230223 13:50:10.377"/>
</kw>
<status status="PASS" starttime="20230223 13:50:10.377" endtime="20230223 13:50:10.378"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:10.378" endtime="20230223 13:50:10.378"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:10.378" endtime="20230223 13:50:10.378"/>
</branch>
<status status="PASS" starttime="20230223 13:50:10.376" endtime="20230223 13:50:10.379"/>
</if>
<status status="PASS" starttime="20230223 13:50:10.376" endtime="20230223 13:50:10.379"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:10.379" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:10.379" endtime="20230223 13:50:10.379"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:10.380" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:50:10.381" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-8.log</msg>
<status status="PASS" starttime="20230223 13:50:10.380" endtime="20230223 13:50:16.240"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:16.241" endtime="20230223 13:50:16.259"/>
</kw>
<status status="PASS" starttime="20230223 13:50:10.379" endtime="20230223 13:50:16.259"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:16.260" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingName.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:16.260" endtime="20230223 13:50:16.267"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:16.268" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:16.267" endtime="20230223 13:50:16.489"/>
</kw>
<status status="PASS" starttime="20230223 13:50:16.260" endtime="20230223 13:50:16.490"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:16.490" endtime="20230223 13:50:16.501"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:16.514" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:16.501" endtime="20230223 13:50:16.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:16.515" endtime="20230223 13:50:16.516"/>
</kw>
<status status="PASS" starttime="20230223 13:50:16.490" endtime="20230223 13:50:16.516"/>
</kw>
<status status="PASS" starttime="20230223 13:50:10.375" endtime="20230223 13:50:16.516"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:16.520" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:16.520" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:15 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:16.517" endtime="20230223 13:50:16.520"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:16.521" endtime="20230223 13:50:19.446"/>
</kw>
<status status="PASS" starttime="20230223 13:50:16.517" endtime="20230223 13:50:19.446"/>
</kw>
<status status="PASS" starttime="20230223 13:50:16.517" endtime="20230223 13:50:19.446"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:10.375" endtime="20230223 13:50:19.447"/>
</test>
<test id="s1-s4-t21" name="Upload invalid missing name chrome" line="63">
<kw name="Invalid case">
<arg>${invalidFileMissingName}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:19.455" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:19.455" endtime="20230223 13:50:19.455"/>
</kw>
<status status="PASS" starttime="20230223 13:50:19.455" endtime="20230223 13:50:19.456"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:19.456" endtime="20230223 13:50:19.456"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:19.456" endtime="20230223 13:50:19.456"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:19.457" endtime="20230223 13:50:19.457"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:19.457" endtime="20230223 13:50:19.457"/>
</branch>
<status status="PASS" starttime="20230223 13:50:19.455" endtime="20230223 13:50:19.457"/>
</if>
<status status="PASS" starttime="20230223 13:50:19.454" endtime="20230223 13:50:19.457"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:19.458" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:19.458" endtime="20230223 13:50:19.458"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:19.459" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:19.459" endtime="20230223 13:50:20.840"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:20.841" endtime="20230223 13:50:20.856"/>
</kw>
<status status="PASS" starttime="20230223 13:50:19.458" endtime="20230223 13:50:20.857"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:20.858" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingName.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:20.857" endtime="20230223 13:50:20.879"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:20.880" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:20.880" endtime="20230223 13:50:20.913"/>
</kw>
<status status="PASS" starttime="20230223 13:50:20.857" endtime="20230223 13:50:20.914"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:20.915" endtime="20230223 13:50:20.931"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:20.943" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:20.932" endtime="20230223 13:50:20.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:20.944" endtime="20230223 13:50:20.944"/>
</kw>
<status status="PASS" starttime="20230223 13:50:20.915" endtime="20230223 13:50:20.944"/>
</kw>
<status status="PASS" starttime="20230223 13:50:19.454" endtime="20230223 13:50:20.944"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:20.948" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:20.948" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:20 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:20.945" endtime="20230223 13:50:20.948"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:20.949" endtime="20230223 13:50:23.081"/>
</kw>
<status status="PASS" starttime="20230223 13:50:20.945" endtime="20230223 13:50:23.081"/>
</kw>
<status status="PASS" starttime="20230223 13:50:20.945" endtime="20230223 13:50:23.081"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:19.454" endtime="20230223 13:50:23.082"/>
</test>
<test id="s1-s4-t22" name="Upload invalid missing gender edge" line="66">
<kw name="Invalid case">
<arg>${invalidFileMissingGender}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:23.090" endtime="20230223 13:50:23.090"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:23.090" endtime="20230223 13:50:23.090"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:23.091" endtime="20230223 13:50:23.091"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:23.091" endtime="20230223 13:50:23.091"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:23.092" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:23.091" endtime="20230223 13:50:23.092"/>
</kw>
<status status="PASS" starttime="20230223 13:50:23.091" endtime="20230223 13:50:23.092"/>
</branch>
<status status="PASS" starttime="20230223 13:50:23.090" endtime="20230223 13:50:23.093"/>
</if>
<status status="PASS" starttime="20230223 13:50:23.090" endtime="20230223 13:50:23.093"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:23.094" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:23.093" endtime="20230223 13:50:23.094"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:23.095" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:23.094" endtime="20230223 13:50:24.731"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:24.732" endtime="20230223 13:50:24.748"/>
</kw>
<status status="PASS" starttime="20230223 13:50:23.093" endtime="20230223 13:50:24.748"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:24.749" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingGender.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:24.749" endtime="20230223 13:50:24.772"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:24.775" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:24.774" endtime="20230223 13:50:24.813"/>
</kw>
<status status="PASS" starttime="20230223 13:50:24.748" endtime="20230223 13:50:24.814"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:24.815" endtime="20230223 13:50:24.834"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:24.845" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:24.834" endtime="20230223 13:50:24.845"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:24.846" endtime="20230223 13:50:24.846"/>
</kw>
<status status="PASS" starttime="20230223 13:50:24.814" endtime="20230223 13:50:24.846"/>
</kw>
<status status="PASS" starttime="20230223 13:50:23.089" endtime="20230223 13:50:24.847"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:24.851" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:24.851" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:24 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:24.848" endtime="20230223 13:50:24.851"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:24.852" endtime="20230223 13:50:26.995"/>
</kw>
<status status="PASS" starttime="20230223 13:50:24.847" endtime="20230223 13:50:26.996"/>
</kw>
<status status="PASS" starttime="20230223 13:50:24.847" endtime="20230223 13:50:26.996"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:23.089" endtime="20230223 13:50:26.997"/>
</test>
<test id="s1-s4-t23" name="Upload invalid missing gender firefox" line="68">
<kw name="Invalid case">
<arg>${invalidFileMissingGender}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:27.005" endtime="20230223 13:50:27.005"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:27.005" endtime="20230223 13:50:27.005"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:27.006" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:27.006" endtime="20230223 13:50:27.006"/>
</kw>
<status status="PASS" starttime="20230223 13:50:27.005" endtime="20230223 13:50:27.007"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:27.007" endtime="20230223 13:50:27.007"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:27.007" endtime="20230223 13:50:27.007"/>
</branch>
<status status="PASS" starttime="20230223 13:50:27.005" endtime="20230223 13:50:27.007"/>
</if>
<status status="PASS" starttime="20230223 13:50:27.004" endtime="20230223 13:50:27.007"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:27.008" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:27.008" endtime="20230223 13:50:27.008"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:27.009" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:50:27.010" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-9.log</msg>
<status status="PASS" starttime="20230223 13:50:27.009" endtime="20230223 13:50:32.670"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:32.671" endtime="20230223 13:50:32.690"/>
</kw>
<status status="PASS" starttime="20230223 13:50:27.007" endtime="20230223 13:50:32.691"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:32.692" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingGender.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:32.691" endtime="20230223 13:50:32.701"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:32.702" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:32.702" endtime="20230223 13:50:32.921"/>
</kw>
<status status="PASS" starttime="20230223 13:50:32.691" endtime="20230223 13:50:32.922"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:32.923" endtime="20230223 13:50:32.932"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:32.954" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:32.933" endtime="20230223 13:50:32.954"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:32.955" endtime="20230223 13:50:32.955"/>
</kw>
<status status="PASS" starttime="20230223 13:50:32.923" endtime="20230223 13:50:32.955"/>
</kw>
<status status="PASS" starttime="20230223 13:50:27.004" endtime="20230223 13:50:32.956"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:32.960" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:32.960" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:32 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:32.957" endtime="20230223 13:50:32.960"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:32.961" endtime="20230223 13:50:35.658"/>
</kw>
<status status="PASS" starttime="20230223 13:50:32.956" endtime="20230223 13:50:35.659"/>
</kw>
<status status="PASS" starttime="20230223 13:50:32.956" endtime="20230223 13:50:35.659"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:27.004" endtime="20230223 13:50:35.659"/>
</test>
<test id="s1-s4-t24" name="Upload invalid missing gender chrome" line="70">
<kw name="Invalid case">
<arg>${invalidFileMissingGender}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:35.667" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:35.667" endtime="20230223 13:50:35.667"/>
</kw>
<status status="PASS" starttime="20230223 13:50:35.667" endtime="20230223 13:50:35.668"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:35.668" endtime="20230223 13:50:35.668"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:35.668" endtime="20230223 13:50:35.669"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:35.669" endtime="20230223 13:50:35.669"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:35.669" endtime="20230223 13:50:35.669"/>
</branch>
<status status="PASS" starttime="20230223 13:50:35.667" endtime="20230223 13:50:35.669"/>
</if>
<status status="PASS" starttime="20230223 13:50:35.666" endtime="20230223 13:50:35.669"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:35.670" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:35.670" endtime="20230223 13:50:35.670"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:35.671" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:35.671" endtime="20230223 13:50:37.117"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:37.118" endtime="20230223 13:50:37.133"/>
</kw>
<status status="PASS" starttime="20230223 13:50:35.670" endtime="20230223 13:50:37.134"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:37.135" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingGender.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:37.134" endtime="20230223 13:50:37.155"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:37.157" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:37.156" endtime="20230223 13:50:37.192"/>
</kw>
<status status="PASS" starttime="20230223 13:50:37.134" endtime="20230223 13:50:37.193"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:37.194" endtime="20230223 13:50:37.210"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:37.222" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:37.210" endtime="20230223 13:50:37.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:37.223" endtime="20230223 13:50:37.223"/>
</kw>
<status status="PASS" starttime="20230223 13:50:37.194" endtime="20230223 13:50:37.224"/>
</kw>
<status status="PASS" starttime="20230223 13:50:35.666" endtime="20230223 13:50:37.224"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:37.228" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:37.228" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:36 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:37.225" endtime="20230223 13:50:37.228"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:37.230" endtime="20230223 13:50:39.363"/>
</kw>
<status status="PASS" starttime="20230223 13:50:37.224" endtime="20230223 13:50:39.363"/>
</kw>
<status status="PASS" starttime="20230223 13:50:37.224" endtime="20230223 13:50:39.363"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:35.666" endtime="20230223 13:50:39.363"/>
</test>
<test id="s1-s4-t25" name="Upload invalid missing birthday edge" line="73">
<kw name="Invalid case">
<arg>${invalidFileMissingBirthday}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:39.372" endtime="20230223 13:50:39.372"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:39.372" endtime="20230223 13:50:39.372"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:39.372" endtime="20230223 13:50:39.373"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:39.372" endtime="20230223 13:50:39.373"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:39.373" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:39.373" endtime="20230223 13:50:39.373"/>
</kw>
<status status="PASS" starttime="20230223 13:50:39.373" endtime="20230223 13:50:39.374"/>
</branch>
<status status="PASS" starttime="20230223 13:50:39.372" endtime="20230223 13:50:39.374"/>
</if>
<status status="PASS" starttime="20230223 13:50:39.371" endtime="20230223 13:50:39.375"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:39.375" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:39.375" endtime="20230223 13:50:39.375"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:39.376" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:39.376" endtime="20230223 13:50:41.089"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:41.090" endtime="20230223 13:50:41.106"/>
</kw>
<status status="PASS" starttime="20230223 13:50:39.375" endtime="20230223 13:50:41.107"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:41.108" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingBirthday.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:41.107" endtime="20230223 13:50:41.129"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:41.131" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:41.131" endtime="20230223 13:50:41.168"/>
</kw>
<status status="PASS" starttime="20230223 13:50:41.107" endtime="20230223 13:50:41.169"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:41.170" endtime="20230223 13:50:41.186"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:41.198" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:41.186" endtime="20230223 13:50:41.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:41.199" endtime="20230223 13:50:41.199"/>
</kw>
<status status="PASS" starttime="20230223 13:50:41.169" endtime="20230223 13:50:41.199"/>
</kw>
<status status="PASS" starttime="20230223 13:50:39.371" endtime="20230223 13:50:41.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:41.204" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:41.204" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:40 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:41.200" endtime="20230223 13:50:41.204"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:41.205" endtime="20230223 13:50:43.364"/>
</kw>
<status status="PASS" starttime="20230223 13:50:41.200" endtime="20230223 13:50:43.364"/>
</kw>
<status status="PASS" starttime="20230223 13:50:41.200" endtime="20230223 13:50:43.364"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:39.370" endtime="20230223 13:50:43.365"/>
</test>
<test id="s1-s4-t26" name="Upload invalid missing birthday firefox" line="75">
<kw name="Invalid case">
<arg>${invalidFileMissingBirthday}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:43.373" endtime="20230223 13:50:43.373"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:43.373" endtime="20230223 13:50:43.373"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:43.374" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:43.373" endtime="20230223 13:50:43.374"/>
</kw>
<status status="PASS" starttime="20230223 13:50:43.373" endtime="20230223 13:50:43.374"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:43.375" endtime="20230223 13:50:43.375"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:43.375" endtime="20230223 13:50:43.375"/>
</branch>
<status status="PASS" starttime="20230223 13:50:43.372" endtime="20230223 13:50:43.375"/>
</if>
<status status="PASS" starttime="20230223 13:50:43.372" endtime="20230223 13:50:43.375"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:43.376" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:43.376" endtime="20230223 13:50:43.376"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:43.377" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:50:43.378" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-10.log</msg>
<status status="PASS" starttime="20230223 13:50:43.377" endtime="20230223 13:50:48.886"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:48.887" endtime="20230223 13:50:48.906"/>
</kw>
<status status="PASS" starttime="20230223 13:50:43.375" endtime="20230223 13:50:48.906"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:48.907" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingBirthday.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:48.907" endtime="20230223 13:50:48.919"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:48.921" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:48.920" endtime="20230223 13:50:49.142"/>
</kw>
<status status="PASS" starttime="20230223 13:50:48.907" endtime="20230223 13:50:49.144"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:49.144" endtime="20230223 13:50:49.153"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:49.166" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:49.154" endtime="20230223 13:50:49.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:49.167" endtime="20230223 13:50:49.167"/>
</kw>
<status status="PASS" starttime="20230223 13:50:49.144" endtime="20230223 13:50:49.167"/>
</kw>
<status status="PASS" starttime="20230223 13:50:43.372" endtime="20230223 13:50:49.167"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:49.171" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:49.171" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:48 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:49.168" endtime="20230223 13:50:49.171"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:49.172" endtime="20230223 13:50:52.002"/>
</kw>
<status status="PASS" starttime="20230223 13:50:49.168" endtime="20230223 13:50:52.003"/>
</kw>
<status status="PASS" starttime="20230223 13:50:49.168" endtime="20230223 13:50:52.003"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:43.371" endtime="20230223 13:50:52.003"/>
</test>
<test id="s1-s4-t27" name="Upload invalid missing birthday chrome" line="77">
<kw name="Invalid case">
<arg>${invalidFileMissingBirthday}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:52.011" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:52.011" endtime="20230223 13:50:52.012"/>
</kw>
<status status="PASS" starttime="20230223 13:50:52.011" endtime="20230223 13:50:52.012"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:52.013" endtime="20230223 13:50:52.013"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:52.012" endtime="20230223 13:50:52.013"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:52.013" endtime="20230223 13:50:52.013"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:52.013" endtime="20230223 13:50:52.013"/>
</branch>
<status status="PASS" starttime="20230223 13:50:52.011" endtime="20230223 13:50:52.013"/>
</if>
<status status="PASS" starttime="20230223 13:50:52.011" endtime="20230223 13:50:52.014"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:52.014" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:52.014" endtime="20230223 13:50:52.014"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:52.016" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:52.015" endtime="20230223 13:50:53.401"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:53.403" endtime="20230223 13:50:53.418"/>
</kw>
<status status="PASS" starttime="20230223 13:50:52.014" endtime="20230223 13:50:53.418"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:53.420" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingBirthday.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:53.419" endtime="20230223 13:50:53.442"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:53.443" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:53.443" endtime="20230223 13:50:53.476"/>
</kw>
<status status="PASS" starttime="20230223 13:50:53.419" endtime="20230223 13:50:53.477"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:53.478" endtime="20230223 13:50:53.494"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:53.505" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:53.495" endtime="20230223 13:50:53.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:53.506" endtime="20230223 13:50:53.506"/>
</kw>
<status status="PASS" starttime="20230223 13:50:53.477" endtime="20230223 13:50:53.506"/>
</kw>
<status status="PASS" starttime="20230223 13:50:52.010" endtime="20230223 13:50:53.507"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:53.511" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:53.511" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:53.508" endtime="20230223 13:50:53.511"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:53.512" endtime="20230223 13:50:55.663"/>
</kw>
<status status="PASS" starttime="20230223 13:50:53.507" endtime="20230223 13:50:55.664"/>
</kw>
<status status="PASS" starttime="20230223 13:50:53.507" endtime="20230223 13:50:55.664"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:52.010" endtime="20230223 13:50:55.664"/>
</test>
<test id="s1-s4-t28" name="Upload invalid missing salary edge" line="80">
<kw name="Invalid case">
<arg>${invalidFileMissingSalary}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:55.672" endtime="20230223 13:50:55.672"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:55.672" endtime="20230223 13:50:55.672"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:55.673" endtime="20230223 13:50:55.673"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:55.672" endtime="20230223 13:50:55.673"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:55.673" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:55.673" endtime="20230223 13:50:55.673"/>
</kw>
<status status="PASS" starttime="20230223 13:50:55.673" endtime="20230223 13:50:55.674"/>
</branch>
<status status="PASS" starttime="20230223 13:50:55.672" endtime="20230223 13:50:55.674"/>
</if>
<status status="PASS" starttime="20230223 13:50:55.671" endtime="20230223 13:50:55.674"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:55.675" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:55.675" endtime="20230223 13:50:55.675"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:55.676" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:50:55.676" endtime="20230223 13:50:57.414"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:57.415" endtime="20230223 13:50:57.431"/>
</kw>
<status status="PASS" starttime="20230223 13:50:55.675" endtime="20230223 13:50:57.431"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:50:57.432" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:50:57.432" endtime="20230223 13:50:57.454"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:57.456" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:50:57.456" endtime="20230223 13:50:57.495"/>
</kw>
<status status="PASS" starttime="20230223 13:50:57.432" endtime="20230223 13:50:57.496"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:50:57.496" endtime="20230223 13:50:57.515"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:50:57.526" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:50:57.515" endtime="20230223 13:50:57.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:50:57.528" endtime="20230223 13:50:57.528"/>
</kw>
<status status="PASS" starttime="20230223 13:50:57.496" endtime="20230223 13:50:57.528"/>
</kw>
<status status="PASS" starttime="20230223 13:50:55.671" endtime="20230223 13:50:57.528"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:50:57.531" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:50:57.532" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:50:56 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:50:57.529" endtime="20230223 13:50:57.532"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:50:57.532" endtime="20230223 13:50:59.653"/>
</kw>
<status status="PASS" starttime="20230223 13:50:57.529" endtime="20230223 13:50:59.653"/>
</kw>
<status status="PASS" starttime="20230223 13:50:57.529" endtime="20230223 13:50:59.654"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:55.671" endtime="20230223 13:50:59.654"/>
</test>
<test id="s1-s4-t29" name="Upload invalid missing salary firefox" line="82">
<kw name="Invalid case">
<arg>${invalidFileMissingSalary}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:59.662" endtime="20230223 13:50:59.662"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:59.662" endtime="20230223 13:50:59.663"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:50:59.663" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:50:59.663" endtime="20230223 13:50:59.663"/>
</kw>
<status status="PASS" starttime="20230223 13:50:59.663" endtime="20230223 13:50:59.664"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:50:59.664" endtime="20230223 13:50:59.664"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:50:59.664" endtime="20230223 13:50:59.664"/>
</branch>
<status status="PASS" starttime="20230223 13:50:59.662" endtime="20230223 13:50:59.665"/>
</if>
<status status="PASS" starttime="20230223 13:50:59.662" endtime="20230223 13:50:59.665"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:50:59.665" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:50:59.665" endtime="20230223 13:50:59.665"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:50:59.667" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:50:59.668" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-11.log</msg>
<status status="PASS" starttime="20230223 13:50:59.666" endtime="20230223 13:51:05.103"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:05.104" endtime="20230223 13:51:05.122"/>
</kw>
<status status="PASS" starttime="20230223 13:50:59.665" endtime="20230223 13:51:05.122"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:05.123" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:05.122" endtime="20230223 13:51:05.130"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:05.132" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:05.131" endtime="20230223 13:51:05.350"/>
</kw>
<status status="PASS" starttime="20230223 13:51:05.122" endtime="20230223 13:51:05.351"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:05.352" endtime="20230223 13:51:05.361"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:05.374" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:05.362" endtime="20230223 13:51:05.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:05.375" endtime="20230223 13:51:05.376"/>
</kw>
<status status="PASS" starttime="20230223 13:51:05.351" endtime="20230223 13:51:05.376"/>
</kw>
<status status="PASS" starttime="20230223 13:50:59.662" endtime="20230223 13:51:05.376"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:05.379" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:05.379" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:04 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:05.377" endtime="20230223 13:51:05.379"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:05.380" endtime="20230223 13:51:08.348"/>
</kw>
<status status="PASS" starttime="20230223 13:51:05.376" endtime="20230223 13:51:08.349"/>
</kw>
<status status="PASS" starttime="20230223 13:51:05.376" endtime="20230223 13:51:08.349"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:50:59.661" endtime="20230223 13:51:08.349"/>
</test>
<test id="s1-s4-t30" name="Upload invalid missing salary chrome" line="84">
<kw name="Invalid case">
<arg>${invalidFileMissingSalary}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:08.357" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:08.357" endtime="20230223 13:51:08.357"/>
</kw>
<status status="PASS" starttime="20230223 13:51:08.357" endtime="20230223 13:51:08.358"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:08.359" endtime="20230223 13:51:08.359"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:08.358" endtime="20230223 13:51:08.359"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:08.359" endtime="20230223 13:51:08.359"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:08.359" endtime="20230223 13:51:08.359"/>
</branch>
<status status="PASS" starttime="20230223 13:51:08.357" endtime="20230223 13:51:08.359"/>
</if>
<status status="PASS" starttime="20230223 13:51:08.357" endtime="20230223 13:51:08.359"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:08.360" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:08.360" endtime="20230223 13:51:08.360"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:08.362" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:08.361" endtime="20230223 13:51:09.753"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:09.754" endtime="20230223 13:51:09.770"/>
</kw>
<status status="PASS" starttime="20230223 13:51:08.360" endtime="20230223 13:51:09.770"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:09.772" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:09.770" endtime="20230223 13:51:09.793"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:09.795" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:09.794" endtime="20230223 13:51:09.829"/>
</kw>
<status status="PASS" starttime="20230223 13:51:09.770" endtime="20230223 13:51:09.830"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:09.831" endtime="20230223 13:51:09.849"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:09.863" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:09.850" endtime="20230223 13:51:09.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:09.864" endtime="20230223 13:51:09.864"/>
</kw>
<status status="PASS" starttime="20230223 13:51:09.831" endtime="20230223 13:51:09.864"/>
</kw>
<status status="PASS" starttime="20230223 13:51:08.356" endtime="20230223 13:51:09.864"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:09.868" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:09.868" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:09 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:09.865" endtime="20230223 13:51:09.868"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:09.869" endtime="20230223 13:51:12.024"/>
</kw>
<status status="PASS" starttime="20230223 13:51:09.865" endtime="20230223 13:51:12.024"/>
</kw>
<status status="PASS" starttime="20230223 13:51:09.865" endtime="20230223 13:51:12.024"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:08.356" endtime="20230223 13:51:12.024"/>
</test>
<test id="s1-s4-t31" name="Upload invalid missing tax edge" line="87">
<kw name="Invalid case">
<arg>${invalidFileMissingTax}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:12.033" endtime="20230223 13:51:12.033"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:12.033" endtime="20230223 13:51:12.033"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:12.033" endtime="20230223 13:51:12.034"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:12.033" endtime="20230223 13:51:12.034"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:12.034" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:12.034" endtime="20230223 13:51:12.034"/>
</kw>
<status status="PASS" starttime="20230223 13:51:12.034" endtime="20230223 13:51:12.035"/>
</branch>
<status status="PASS" starttime="20230223 13:51:12.033" endtime="20230223 13:51:12.035"/>
</if>
<status status="PASS" starttime="20230223 13:51:12.032" endtime="20230223 13:51:12.035"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:12.036" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:12.036" endtime="20230223 13:51:12.036"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:12.037" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:12.037" endtime="20230223 13:51:13.755"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:13.757" endtime="20230223 13:51:13.773"/>
</kw>
<status status="PASS" starttime="20230223 13:51:12.035" endtime="20230223 13:51:13.773"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:13.774" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingTax.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:13.774" endtime="20230223 13:51:13.795"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:13.797" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:13.796" endtime="20230223 13:51:13.833"/>
</kw>
<status status="PASS" starttime="20230223 13:51:13.773" endtime="20230223 13:51:13.834"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:13.835" endtime="20230223 13:51:13.854"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:13.868" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:13.854" endtime="20230223 13:51:13.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:13.870" endtime="20230223 13:51:13.870"/>
</kw>
<status status="PASS" starttime="20230223 13:51:13.835" endtime="20230223 13:51:13.870"/>
</kw>
<status status="PASS" starttime="20230223 13:51:12.032" endtime="20230223 13:51:13.870"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:13.875" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:13.875" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:13 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:13.871" endtime="20230223 13:51:13.875"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:13.876" endtime="20230223 13:51:16.011"/>
</kw>
<status status="PASS" starttime="20230223 13:51:13.871" endtime="20230223 13:51:16.012"/>
</kw>
<status status="PASS" starttime="20230223 13:51:13.871" endtime="20230223 13:51:16.012"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:12.031" endtime="20230223 13:51:16.012"/>
</test>
<test id="s1-s4-t32" name="Upload invalid missing tax firefox" line="89">
<kw name="Invalid case">
<arg>${invalidFileMissingTax}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:16.021" endtime="20230223 13:51:16.021"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:16.020" endtime="20230223 13:51:16.021"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:16.021" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:16.021" endtime="20230223 13:51:16.022"/>
</kw>
<status status="PASS" starttime="20230223 13:51:16.021" endtime="20230223 13:51:16.022"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:16.023" endtime="20230223 13:51:16.023"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:16.022" endtime="20230223 13:51:16.023"/>
</branch>
<status status="PASS" starttime="20230223 13:51:16.020" endtime="20230223 13:51:16.023"/>
</if>
<status status="PASS" starttime="20230223 13:51:16.020" endtime="20230223 13:51:16.023"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:16.024" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:16.023" endtime="20230223 13:51:16.024"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:16.025" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:51:16.026" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-12.log</msg>
<status status="PASS" starttime="20230223 13:51:16.025" endtime="20230223 13:51:21.740"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:21.742" endtime="20230223 13:51:21.759"/>
</kw>
<status status="PASS" starttime="20230223 13:51:16.023" endtime="20230223 13:51:21.760"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:21.761" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingTax.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:21.760" endtime="20230223 13:51:21.768"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:21.770" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:21.769" endtime="20230223 13:51:21.990"/>
</kw>
<status status="PASS" starttime="20230223 13:51:21.760" endtime="20230223 13:51:21.991"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:21.992" endtime="20230223 13:51:22.001"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:22.013" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:22.001" endtime="20230223 13:51:22.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:22.014" endtime="20230223 13:51:22.014"/>
</kw>
<status status="PASS" starttime="20230223 13:51:21.992" endtime="20230223 13:51:22.015"/>
</kw>
<status status="PASS" starttime="20230223 13:51:16.020" endtime="20230223 13:51:22.015"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:22.018" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:22.018" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:21 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:22.016" endtime="20230223 13:51:22.019"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:22.019" endtime="20230223 13:51:25.050"/>
</kw>
<status status="PASS" starttime="20230223 13:51:22.016" endtime="20230223 13:51:25.050"/>
</kw>
<status status="PASS" starttime="20230223 13:51:22.015" endtime="20230223 13:51:25.050"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:16.019" endtime="20230223 13:51:25.051"/>
</test>
<test id="s1-s4-t33" name="Upload invalid missing tax chrome" line="91">
<kw name="Invalid case">
<arg>${invalidFileMissingTax}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:25.059" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:25.059" endtime="20230223 13:51:25.059"/>
</kw>
<status status="PASS" starttime="20230223 13:51:25.058" endtime="20230223 13:51:25.060"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:25.060" endtime="20230223 13:51:25.060"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:25.060" endtime="20230223 13:51:25.060"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:25.060" endtime="20230223 13:51:25.060"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:25.060" endtime="20230223 13:51:25.061"/>
</branch>
<status status="PASS" starttime="20230223 13:51:25.058" endtime="20230223 13:51:25.061"/>
</if>
<status status="PASS" starttime="20230223 13:51:25.058" endtime="20230223 13:51:25.061"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:25.061" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:25.061" endtime="20230223 13:51:25.062"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:25.063" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:25.062" endtime="20230223 13:51:26.458"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:26.460" endtime="20230223 13:51:26.478"/>
</kw>
<status status="PASS" starttime="20230223 13:51:25.061" endtime="20230223 13:51:26.478"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:26.480" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidMissingTax.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:26.479" endtime="20230223 13:51:26.508"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:26.509" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:26.509" endtime="20230223 13:51:26.545"/>
</kw>
<status status="PASS" starttime="20230223 13:51:26.479" endtime="20230223 13:51:26.546"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:26.547" endtime="20230223 13:51:26.566"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:26.579" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:26.567" endtime="20230223 13:51:26.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:26.580" endtime="20230223 13:51:26.581"/>
</kw>
<status status="PASS" starttime="20230223 13:51:26.547" endtime="20230223 13:51:26.581"/>
</kw>
<status status="PASS" starttime="20230223 13:51:25.058" endtime="20230223 13:51:26.581"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:26.585" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:26.585" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:26 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:26.582" endtime="20230223 13:51:26.585"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:26.586" endtime="20230223 13:51:28.706"/>
</kw>
<status status="PASS" starttime="20230223 13:51:26.582" endtime="20230223 13:51:28.706"/>
</kw>
<status status="PASS" starttime="20230223 13:51:26.581" endtime="20230223 13:51:28.706"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:25.057" endtime="20230223 13:51:28.707"/>
</test>
<test id="s1-s4-t34" name="Upload invalid extra column edge" line="94">
<kw name="Invalid case">
<arg>${invalidFileExtraColumn}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:28.717" endtime="20230223 13:51:28.717"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:28.717" endtime="20230223 13:51:28.718"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:28.718" endtime="20230223 13:51:28.718"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:28.718" endtime="20230223 13:51:28.718"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:28.719" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:28.718" endtime="20230223 13:51:28.719"/>
</kw>
<status status="PASS" starttime="20230223 13:51:28.718" endtime="20230223 13:51:28.719"/>
</branch>
<status status="PASS" starttime="20230223 13:51:28.717" endtime="20230223 13:51:28.720"/>
</if>
<status status="PASS" starttime="20230223 13:51:28.717" endtime="20230223 13:51:28.720"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:28.720" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:28.720" endtime="20230223 13:51:28.720"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:28.722" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:28.721" endtime="20230223 13:51:30.365"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:30.367" endtime="20230223 13:51:30.384"/>
</kw>
<status status="PASS" starttime="20230223 13:51:28.720" endtime="20230223 13:51:30.384"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:30.385" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidExtraColumn.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:30.385" endtime="20230223 13:51:30.410"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:30.411" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:30.411" endtime="20230223 13:51:30.458"/>
</kw>
<status status="PASS" starttime="20230223 13:51:30.384" endtime="20230223 13:51:30.460"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:30.461" endtime="20230223 13:51:30.484"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:30.497" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:30.485" endtime="20230223 13:51:30.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:30.498" endtime="20230223 13:51:30.499"/>
</kw>
<status status="PASS" starttime="20230223 13:51:30.460" endtime="20230223 13:51:30.499"/>
</kw>
<status status="PASS" starttime="20230223 13:51:28.716" endtime="20230223 13:51:30.499"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:30.503" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:30.503" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:29 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:30.500" endtime="20230223 13:51:30.503"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:30.504" endtime="20230223 13:51:32.629"/>
</kw>
<status status="PASS" starttime="20230223 13:51:30.500" endtime="20230223 13:51:32.630"/>
</kw>
<status status="PASS" starttime="20230223 13:51:30.499" endtime="20230223 13:51:32.630"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:28.716" endtime="20230223 13:51:32.631"/>
</test>
<test id="s1-s4-t35" name="Upload invalid extra column firefox" line="96">
<kw name="Invalid case">
<arg>${invalidFileExtraColumn}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:32.639" endtime="20230223 13:51:32.639"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:32.639" endtime="20230223 13:51:32.639"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:32.640" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:32.639" endtime="20230223 13:51:32.640"/>
</kw>
<status status="PASS" starttime="20230223 13:51:32.639" endtime="20230223 13:51:32.640"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:32.641" endtime="20230223 13:51:32.641"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:32.641" endtime="20230223 13:51:32.641"/>
</branch>
<status status="PASS" starttime="20230223 13:51:32.639" endtime="20230223 13:51:32.641"/>
</if>
<status status="PASS" starttime="20230223 13:51:32.638" endtime="20230223 13:51:32.641"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:32.642" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:32.642" endtime="20230223 13:51:32.642"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:32.643" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:51:32.644" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-13.log</msg>
<status status="PASS" starttime="20230223 13:51:32.643" endtime="20230223 13:51:38.463"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:38.465" endtime="20230223 13:51:38.483"/>
</kw>
<status status="PASS" starttime="20230223 13:51:32.641" endtime="20230223 13:51:38.483"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:38.484" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidExtraColumn.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:38.484" endtime="20230223 13:51:38.493"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:38.494" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:38.494" endtime="20230223 13:51:38.717"/>
</kw>
<status status="PASS" starttime="20230223 13:51:38.483" endtime="20230223 13:51:38.718"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:38.719" endtime="20230223 13:51:38.728"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:38.741" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:38.728" endtime="20230223 13:51:38.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:38.742" endtime="20230223 13:51:38.742"/>
</kw>
<status status="PASS" starttime="20230223 13:51:38.718" endtime="20230223 13:51:38.742"/>
</kw>
<status status="PASS" starttime="20230223 13:51:32.638" endtime="20230223 13:51:38.743"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:38.747" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:38.747" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:38.744" endtime="20230223 13:51:38.747"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:38.748" endtime="20230223 13:51:41.716"/>
</kw>
<status status="PASS" starttime="20230223 13:51:38.744" endtime="20230223 13:51:41.717"/>
</kw>
<status status="PASS" starttime="20230223 13:51:38.744" endtime="20230223 13:51:41.717"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:32.638" endtime="20230223 13:51:41.717"/>
</test>
<test id="s1-s4-t36" name="Upload invalid extra column chrome" line="98">
<kw name="Invalid case">
<arg>${invalidFileExtraColumn}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:41.726" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:41.725" endtime="20230223 13:51:41.726"/>
</kw>
<status status="PASS" starttime="20230223 13:51:41.725" endtime="20230223 13:51:41.726"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:41.727" endtime="20230223 13:51:41.727"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:41.726" endtime="20230223 13:51:41.727"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:41.727" endtime="20230223 13:51:41.727"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:41.727" endtime="20230223 13:51:41.727"/>
</branch>
<status status="PASS" starttime="20230223 13:51:41.725" endtime="20230223 13:51:41.727"/>
</if>
<status status="PASS" starttime="20230223 13:51:41.725" endtime="20230223 13:51:41.728"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:41.728" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:41.728" endtime="20230223 13:51:41.728"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:41.729" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:41.729" endtime="20230223 13:51:43.157"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:43.158" endtime="20230223 13:51:43.177"/>
</kw>
<status status="PASS" starttime="20230223 13:51:41.728" endtime="20230223 13:51:43.178"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:43.180" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidExtraColumn.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:43.179" endtime="20230223 13:51:43.209"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:43.211" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:43.210" endtime="20230223 13:51:43.249"/>
</kw>
<status status="PASS" starttime="20230223 13:51:43.178" endtime="20230223 13:51:43.250"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:43.250" endtime="20230223 13:51:43.265"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:43.278" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:43.265" endtime="20230223 13:51:43.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:43.279" endtime="20230223 13:51:43.280"/>
</kw>
<status status="PASS" starttime="20230223 13:51:43.250" endtime="20230223 13:51:43.280"/>
</kw>
<status status="PASS" starttime="20230223 13:51:41.724" endtime="20230223 13:51:43.280"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:43.285" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:43.285" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:42 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:43.281" endtime="20230223 13:51:43.285"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:43.286" endtime="20230223 13:51:45.438"/>
</kw>
<status status="PASS" starttime="20230223 13:51:43.281" endtime="20230223 13:51:45.439"/>
</kw>
<status status="PASS" starttime="20230223 13:51:43.281" endtime="20230223 13:51:45.439"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:41.724" endtime="20230223 13:51:45.440"/>
</test>
<test id="s1-s4-t37" name="Upload invalid date invalid format edge" line="101">
<kw name="Invalid case">
<arg>${invalidFileDateInvalidFormat}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:45.448" endtime="20230223 13:51:45.448"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:45.448" endtime="20230223 13:51:45.448"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:45.448" endtime="20230223 13:51:45.448"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:45.448" endtime="20230223 13:51:45.449"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:45.449" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:45.449" endtime="20230223 13:51:45.449"/>
</kw>
<status status="PASS" starttime="20230223 13:51:45.449" endtime="20230223 13:51:45.450"/>
</branch>
<status status="PASS" starttime="20230223 13:51:45.448" endtime="20230223 13:51:45.450"/>
</if>
<status status="PASS" starttime="20230223 13:51:45.447" endtime="20230223 13:51:45.450"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:45.451" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:45.451" endtime="20230223 13:51:45.451"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:45.452" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:45.452" endtime="20230223 13:51:47.100"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:47.101" endtime="20230223 13:51:47.117"/>
</kw>
<status status="PASS" starttime="20230223 13:51:45.450" endtime="20230223 13:51:47.117"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:47.118" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidDateInvalidFormat.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:47.117" endtime="20230223 13:51:47.141"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:47.143" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:47.142" endtime="20230223 13:51:47.176"/>
</kw>
<status status="PASS" starttime="20230223 13:51:47.117" endtime="20230223 13:51:47.178"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:47.179" endtime="20230223 13:51:47.197"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:47.210" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:47.197" endtime="20230223 13:51:47.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:47.211" endtime="20230223 13:51:47.211"/>
</kw>
<status status="PASS" starttime="20230223 13:51:47.178" endtime="20230223 13:51:47.212"/>
</kw>
<status status="PASS" starttime="20230223 13:51:45.447" endtime="20230223 13:51:47.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:47.215" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:47.215" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:46 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:47.213" endtime="20230223 13:51:47.216"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:47.217" endtime="20230223 13:51:49.365"/>
</kw>
<status status="PASS" starttime="20230223 13:51:47.212" endtime="20230223 13:51:49.366"/>
</kw>
<status status="PASS" starttime="20230223 13:51:47.212" endtime="20230223 13:51:49.366"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:45.447" endtime="20230223 13:51:49.366"/>
</test>
<test id="s1-s4-t38" name="Upload invalid date invalid format firefox" line="103">
<kw name="Invalid case">
<arg>${invalidFileDateInvalidFormat}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:49.375" endtime="20230223 13:51:49.375"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:49.374" endtime="20230223 13:51:49.375"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:49.375" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:49.375" endtime="20230223 13:51:49.375"/>
</kw>
<status status="PASS" starttime="20230223 13:51:49.375" endtime="20230223 13:51:49.376"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:49.377" endtime="20230223 13:51:49.377"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:49.377" endtime="20230223 13:51:49.377"/>
</branch>
<status status="PASS" starttime="20230223 13:51:49.374" endtime="20230223 13:51:49.377"/>
</if>
<status status="PASS" starttime="20230223 13:51:49.374" endtime="20230223 13:51:49.377"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:49.378" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:49.378" endtime="20230223 13:51:49.378"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:49.379" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:51:49.380" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-14.log</msg>
<status status="PASS" starttime="20230223 13:51:49.379" endtime="20230223 13:51:54.851"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:54.853" endtime="20230223 13:51:54.871"/>
</kw>
<status status="PASS" starttime="20230223 13:51:49.377" endtime="20230223 13:51:54.871"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:54.872" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidDateInvalidFormat.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:54.872" endtime="20230223 13:51:54.881"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:54.883" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:54.882" endtime="20230223 13:51:55.102"/>
</kw>
<status status="PASS" starttime="20230223 13:51:54.871" endtime="20230223 13:51:55.103"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:55.104" endtime="20230223 13:51:55.113"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:55.126" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:55.114" endtime="20230223 13:51:55.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:55.127" endtime="20230223 13:51:55.127"/>
</kw>
<status status="PASS" starttime="20230223 13:51:55.104" endtime="20230223 13:51:55.127"/>
</kw>
<status status="PASS" starttime="20230223 13:51:49.374" endtime="20230223 13:51:55.127"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:55.131" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:55.131" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:55.128" endtime="20230223 13:51:55.131"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:55.132" endtime="20230223 13:51:58.058"/>
</kw>
<status status="PASS" starttime="20230223 13:51:55.128" endtime="20230223 13:51:58.059"/>
</kw>
<status status="PASS" starttime="20230223 13:51:55.128" endtime="20230223 13:51:58.059"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:49.373" endtime="20230223 13:51:58.059"/>
</test>
<test id="s1-s4-t39" name="Upload invalid date invalid format chrome" line="105">
<kw name="Invalid case">
<arg>${invalidFileDateInvalidFormat}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:51:58.068" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:51:58.067" endtime="20230223 13:51:58.068"/>
</kw>
<status status="PASS" starttime="20230223 13:51:58.067" endtime="20230223 13:51:58.068"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:58.069" endtime="20230223 13:51:58.069"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:58.069" endtime="20230223 13:51:58.069"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:51:58.069" endtime="20230223 13:51:58.069"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:51:58.069" endtime="20230223 13:51:58.069"/>
</branch>
<status status="PASS" starttime="20230223 13:51:58.067" endtime="20230223 13:51:58.070"/>
</if>
<status status="PASS" starttime="20230223 13:51:58.067" endtime="20230223 13:51:58.070"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:51:58.070" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:51:58.070" endtime="20230223 13:51:58.070"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:51:58.072" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:51:58.071" endtime="20230223 13:51:59.496"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:59.497" endtime="20230223 13:51:59.513"/>
</kw>
<status status="PASS" starttime="20230223 13:51:58.070" endtime="20230223 13:51:59.514"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:51:59.515" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidDateInvalidFormat.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:51:59.514" endtime="20230223 13:51:59.536"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:59.537" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:51:59.537" endtime="20230223 13:51:59.568"/>
</kw>
<status status="PASS" starttime="20230223 13:51:59.514" endtime="20230223 13:51:59.569"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:51:59.570" endtime="20230223 13:51:59.587"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:51:59.600" level="INFO">${No_Records_Message} = No records at the moment 😢</msg>
<status status="PASS" starttime="20230223 13:51:59.588" endtime="20230223 13:51:59.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230223 13:51:59.601" endtime="20230223 13:51:59.601"/>
</kw>
<status status="PASS" starttime="20230223 13:51:59.570" endtime="20230223 13:51:59.601"/>
</kw>
<status status="PASS" starttime="20230223 13:51:58.067" endtime="20230223 13:51:59.601"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:51:59.605" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:51:59.605" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:51:59 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:51:59.602" endtime="20230223 13:51:59.605"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:51:59.606" endtime="20230223 13:52:01.741"/>
</kw>
<status status="PASS" starttime="20230223 13:51:59.602" endtime="20230223 13:52:01.741"/>
</kw>
<status status="PASS" starttime="20230223 13:51:59.602" endtime="20230223 13:52:01.742"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="PASS" starttime="20230223 13:51:58.066" endtime="20230223 13:52:01.742"/>
</test>
<test id="s1-s4-t40" name="Upload invalid tax greater than salary edge" line="108">
<kw name="Invalid case">
<arg>${invalidFileTaxGreaterThanSalary}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:01.750" endtime="20230223 13:52:01.750"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:01.750" endtime="20230223 13:52:01.751"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:01.751" endtime="20230223 13:52:01.751"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:01.751" endtime="20230223 13:52:01.751"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:01.752" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:01.751" endtime="20230223 13:52:01.752"/>
</kw>
<status status="PASS" starttime="20230223 13:52:01.751" endtime="20230223 13:52:01.753"/>
</branch>
<status status="PASS" starttime="20230223 13:52:01.750" endtime="20230223 13:52:01.753"/>
</if>
<status status="PASS" starttime="20230223 13:52:01.750" endtime="20230223 13:52:01.753"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:01.753" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:01.753" endtime="20230223 13:52:01.754"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:01.755" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:52:01.754" endtime="20230223 13:52:03.460"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:03.462" endtime="20230223 13:52:03.478"/>
</kw>
<status status="PASS" starttime="20230223 13:52:01.753" endtime="20230223 13:52:03.478"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:03.479" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidTaxGreaterThanSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:03.479" endtime="20230223 13:52:03.501"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:03.502" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:03.502" endtime="20230223 13:52:03.534"/>
</kw>
<status status="PASS" starttime="20230223 13:52:03.478" endtime="20230223 13:52:03.536"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:52:08.796" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-7.png"&gt;&lt;img src="selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:52:08.796" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:03.537" endtime="20230223 13:52:08.796"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:52:08.797" endtime="20230223 13:52:08.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:52:08.797" endtime="20230223 13:52:08.797"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:03.536" endtime="20230223 13:52:08.797"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:01.750" endtime="20230223 13:52:08.798"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:52:08.802" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:52:08.802" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:52:08 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:52:08.799" endtime="20230223 13:52:08.802"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:52:08.803" endtime="20230223 13:52:10.915"/>
</kw>
<status status="PASS" starttime="20230223 13:52:08.798" endtime="20230223 13:52:10.916"/>
</kw>
<status status="PASS" starttime="20230223 13:52:08.798" endtime="20230223 13:52:10.916"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:01.749" endtime="20230223 13:52:10.917">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t41" name="Upload invalid tax greater than salary firefox" line="110">
<kw name="Invalid case">
<arg>${invalidFileTaxGreaterThanSalary}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:10.925" endtime="20230223 13:52:10.925"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:10.925" endtime="20230223 13:52:10.926"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:10.926" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:10.926" endtime="20230223 13:52:10.926"/>
</kw>
<status status="PASS" starttime="20230223 13:52:10.926" endtime="20230223 13:52:10.927"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:10.927" endtime="20230223 13:52:10.927"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:10.927" endtime="20230223 13:52:10.928"/>
</branch>
<status status="PASS" starttime="20230223 13:52:10.925" endtime="20230223 13:52:10.928"/>
</if>
<status status="PASS" starttime="20230223 13:52:10.925" endtime="20230223 13:52:10.928"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:10.928" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:10.928" endtime="20230223 13:52:10.929"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:10.930" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:52:10.931" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-15.log</msg>
<status status="PASS" starttime="20230223 13:52:10.929" endtime="20230223 13:52:16.572"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:16.573" endtime="20230223 13:52:16.592"/>
</kw>
<status status="PASS" starttime="20230223 13:52:10.928" endtime="20230223 13:52:16.593"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:16.594" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidTaxGreaterThanSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:16.593" endtime="20230223 13:52:16.604"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:16.607" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:16.606" endtime="20230223 13:52:16.827"/>
</kw>
<status status="PASS" starttime="20230223 13:52:16.593" endtime="20230223 13:52:16.828"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:52:21.934" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-8.png"&gt;&lt;img src="selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:52:21.935" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:16.829" endtime="20230223 13:52:21.935"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:52:21.936" endtime="20230223 13:52:21.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:52:21.936" endtime="20230223 13:52:21.936"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:16.829" endtime="20230223 13:52:21.936"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:10.925" endtime="20230223 13:52:21.936"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:52:21.941" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:52:21.941" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:52:21 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:52:21.937" endtime="20230223 13:52:21.941"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:52:21.942" endtime="20230223 13:52:24.455"/>
</kw>
<status status="PASS" starttime="20230223 13:52:21.937" endtime="20230223 13:52:24.455"/>
</kw>
<status status="PASS" starttime="20230223 13:52:21.937" endtime="20230223 13:52:24.455"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:10.924" endtime="20230223 13:52:24.456">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t42" name="Upload invalid tax greater than salary chrome" line="112">
<kw name="Invalid case">
<arg>${invalidFileTaxGreaterThanSalary}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:24.463" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:24.462" endtime="20230223 13:52:24.463"/>
</kw>
<status status="PASS" starttime="20230223 13:52:24.462" endtime="20230223 13:52:24.463"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:24.464" endtime="20230223 13:52:24.464"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:24.463" endtime="20230223 13:52:24.464"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:24.464" endtime="20230223 13:52:24.464"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:24.464" endtime="20230223 13:52:24.464"/>
</branch>
<status status="PASS" starttime="20230223 13:52:24.462" endtime="20230223 13:52:24.464"/>
</if>
<status status="PASS" starttime="20230223 13:52:24.462" endtime="20230223 13:52:24.464"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:24.465" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:24.465" endtime="20230223 13:52:24.465"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:24.466" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:52:24.466" endtime="20230223 13:52:25.867"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:25.868" endtime="20230223 13:52:25.883"/>
</kw>
<status status="PASS" starttime="20230223 13:52:24.464" endtime="20230223 13:52:25.883"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:25.884" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidTaxGreaterThanSalary.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:25.884" endtime="20230223 13:52:25.905"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:25.907" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:25.906" endtime="20230223 13:52:25.943"/>
</kw>
<status status="PASS" starttime="20230223 13:52:25.883" endtime="20230223 13:52:25.944"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:52:31.178" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-9.png"&gt;&lt;img src="selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:52:31.178" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:25.945" endtime="20230223 13:52:31.179"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:52:31.180" endtime="20230223 13:52:31.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:52:31.180" endtime="20230223 13:52:31.180"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:25.945" endtime="20230223 13:52:31.180"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:24.462" endtime="20230223 13:52:31.180"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:52:31.185" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:52:31.185" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:52:31 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:52:31.181" endtime="20230223 13:52:31.185"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:52:31.185" endtime="20230223 13:52:33.284"/>
</kw>
<status status="PASS" starttime="20230223 13:52:31.181" endtime="20230223 13:52:33.284"/>
</kw>
<status status="PASS" starttime="20230223 13:52:31.181" endtime="20230223 13:52:33.284"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:24.461" endtime="20230223 13:52:33.285">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t43" name="Upload invalid illogical birthdate edge" line="115">
<kw name="Invalid case">
<arg>${invalidFileIllogicalBirthdate}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:33.293" endtime="20230223 13:52:33.293"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:33.293" endtime="20230223 13:52:33.293"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:33.294" endtime="20230223 13:52:33.294"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:33.294" endtime="20230223 13:52:33.294"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:33.295" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:33.294" endtime="20230223 13:52:33.295"/>
</kw>
<status status="PASS" starttime="20230223 13:52:33.294" endtime="20230223 13:52:33.295"/>
</branch>
<status status="PASS" starttime="20230223 13:52:33.293" endtime="20230223 13:52:33.296"/>
</if>
<status status="PASS" starttime="20230223 13:52:33.293" endtime="20230223 13:52:33.296"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:33.296" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:33.296" endtime="20230223 13:52:33.297"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:33.298" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:52:33.297" endtime="20230223 13:52:35.017"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:35.018" endtime="20230223 13:52:35.041"/>
</kw>
<status status="PASS" starttime="20230223 13:52:33.296" endtime="20230223 13:52:35.041"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:35.042" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidIllogicalBirthdate.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:35.042" endtime="20230223 13:52:35.064"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:35.065" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:35.065" endtime="20230223 13:52:35.101"/>
</kw>
<status status="PASS" starttime="20230223 13:52:35.042" endtime="20230223 13:52:35.102"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:52:40.330" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-10.png"&gt;&lt;img src="selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:52:40.330" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:35.103" endtime="20230223 13:52:40.331"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:52:40.332" endtime="20230223 13:52:40.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:52:40.332" endtime="20230223 13:52:40.332"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:35.103" endtime="20230223 13:52:40.332"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:33.292" endtime="20230223 13:52:40.333"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:52:40.337" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:52:40.337" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:52:40 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:52:40.333" endtime="20230223 13:52:40.337"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:52:40.338" endtime="20230223 13:52:42.449"/>
</kw>
<status status="PASS" starttime="20230223 13:52:40.333" endtime="20230223 13:52:42.449"/>
</kw>
<status status="PASS" starttime="20230223 13:52:40.333" endtime="20230223 13:52:42.449"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:33.292" endtime="20230223 13:52:42.449">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t44" name="Upload invalid illogical birthdate firefox" line="117">
<kw name="Invalid case">
<arg>${invalidFileIllogicalBirthdate}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:42.458" endtime="20230223 13:52:42.458"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:42.458" endtime="20230223 13:52:42.458"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:42.459" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:42.459" endtime="20230223 13:52:42.459"/>
</kw>
<status status="PASS" starttime="20230223 13:52:42.458" endtime="20230223 13:52:42.460"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:42.460" endtime="20230223 13:52:42.460"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:42.460" endtime="20230223 13:52:42.460"/>
</branch>
<status status="PASS" starttime="20230223 13:52:42.458" endtime="20230223 13:52:42.460"/>
</if>
<status status="PASS" starttime="20230223 13:52:42.458" endtime="20230223 13:52:42.461"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:42.461" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:42.461" endtime="20230223 13:52:42.462"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:42.463" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:52:42.464" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-16.log</msg>
<status status="PASS" starttime="20230223 13:52:42.462" endtime="20230223 13:52:48.255"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:48.256" endtime="20230223 13:52:48.276"/>
</kw>
<status status="PASS" starttime="20230223 13:52:42.461" endtime="20230223 13:52:48.276"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:48.277" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidIllogicalBirthdate.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:48.277" endtime="20230223 13:52:48.285"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:48.286" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:48.286" endtime="20230223 13:52:48.514"/>
</kw>
<status status="PASS" starttime="20230223 13:52:48.276" endtime="20230223 13:52:48.515"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:52:53.628" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-11.png"&gt;&lt;img src="selenium-screenshot-11.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:52:53.628" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:48.515" endtime="20230223 13:52:53.629"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:52:53.630" endtime="20230223 13:52:53.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:52:53.630" endtime="20230223 13:52:53.630"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:48.515" endtime="20230223 13:52:53.630"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:42.457" endtime="20230223 13:52:53.630"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:52:53.634" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:52:53.634" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:52:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:52:53.631" endtime="20230223 13:52:53.635"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:52:53.635" endtime="20230223 13:52:56.140"/>
</kw>
<status status="PASS" starttime="20230223 13:52:53.631" endtime="20230223 13:52:56.140"/>
</kw>
<status status="PASS" starttime="20230223 13:52:53.631" endtime="20230223 13:52:56.140"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:42.457" endtime="20230223 13:52:56.140">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t45" name="Upload invalid illogical birthdate chrome" line="119">
<kw name="Invalid case">
<arg>${invalidFileIllogicalBirthdate}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:52:56.149" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:52:56.149" endtime="20230223 13:52:56.149"/>
</kw>
<status status="PASS" starttime="20230223 13:52:56.149" endtime="20230223 13:52:56.150"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:56.150" endtime="20230223 13:52:56.151"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:56.150" endtime="20230223 13:52:56.151"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:52:56.151" endtime="20230223 13:52:56.151"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:52:56.151" endtime="20230223 13:52:56.151"/>
</branch>
<status status="PASS" starttime="20230223 13:52:56.149" endtime="20230223 13:52:56.152"/>
</if>
<status status="PASS" starttime="20230223 13:52:56.148" endtime="20230223 13:52:56.152"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:52:56.152" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:52:56.152" endtime="20230223 13:52:56.153"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:52:56.154" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:52:56.153" endtime="20230223 13:52:57.568"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:52:57.569" endtime="20230223 13:52:57.584"/>
</kw>
<status status="PASS" starttime="20230223 13:52:56.152" endtime="20230223 13:52:57.584"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:52:57.585" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidIllogicalBirthdate.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:52:57.585" endtime="20230223 13:52:57.606"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:52:57.608" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:52:57.607" endtime="20230223 13:52:57.643"/>
</kw>
<status status="PASS" starttime="20230223 13:52:57.584" endtime="20230223 13:52:57.644"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:53:02.860" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-12.png"&gt;&lt;img src="selenium-screenshot-12.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:53:02.861" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:52:57.645" endtime="20230223 13:53:02.861"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:02.862" endtime="20230223 13:53:02.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:53:02.862" endtime="20230223 13:53:02.862"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:57.645" endtime="20230223 13:53:02.862"/>
</kw>
<status status="FAIL" starttime="20230223 13:52:56.148" endtime="20230223 13:53:02.862"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:02.867" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:02.867" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:02 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:02.863" endtime="20230223 13:53:02.867"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:02.868" endtime="20230223 13:53:04.972"/>
</kw>
<status status="PASS" starttime="20230223 13:53:02.863" endtime="20230223 13:53:04.973"/>
</kw>
<status status="PASS" starttime="20230223 13:53:02.863" endtime="20230223 13:53:04.973"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:52:56.147" endtime="20230223 13:53:04.973">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t46" name="Upload invalid record already exists edge" line="122">
<kw name="Invalid case">
<arg>${invalidFileRecordAlreadyExists}</arg>
<arg>${driver_edge}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:04.982" endtime="20230223 13:53:04.982"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:04.982" endtime="20230223 13:53:04.982"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:04.983" endtime="20230223 13:53:04.983"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:04.982" endtime="20230223 13:53:04.983"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:04.983" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:04.983" endtime="20230223 13:53:04.983"/>
</kw>
<status status="PASS" starttime="20230223 13:53:04.983" endtime="20230223 13:53:04.984"/>
</branch>
<status status="PASS" starttime="20230223 13:53:04.982" endtime="20230223 13:53:04.984"/>
</if>
<status status="PASS" starttime="20230223 13:53:04.982" endtime="20230223 13:53:04.985"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:04.985" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:04.985" endtime="20230223 13:53:04.985"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:04.987" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:53:04.986" endtime="20230223 13:53:06.582"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:06.583" endtime="20230223 13:53:06.599"/>
</kw>
<status status="PASS" starttime="20230223 13:53:04.985" endtime="20230223 13:53:06.599"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:53:06.600" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidRecordAlreadyExists.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:53:06.600" endtime="20230223 13:53:06.625"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:06.627" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:53:06.626" endtime="20230223 13:53:06.665"/>
</kw>
<status status="PASS" starttime="20230223 13:53:06.599" endtime="20230223 13:53:06.666"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:53:11.892" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-13.png"&gt;&lt;img src="selenium-screenshot-13.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:53:11.892" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:53:06.667" endtime="20230223 13:53:11.893"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:11.894" endtime="20230223 13:53:11.894"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:53:11.894" endtime="20230223 13:53:11.894"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:06.666" endtime="20230223 13:53:11.894"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:04.981" endtime="20230223 13:53:11.894"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:11.899" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:11.899" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:11 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:11.895" endtime="20230223 13:53:11.899"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:11.900" endtime="20230223 13:53:14.006"/>
</kw>
<status status="PASS" starttime="20230223 13:53:11.895" endtime="20230223 13:53:14.007"/>
</kw>
<status status="PASS" starttime="20230223 13:53:11.895" endtime="20230223 13:53:14.007"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:53:04.981" endtime="20230223 13:53:14.007">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t47" name="Upload invalid record already exists firefox" line="124">
<kw name="Invalid case">
<arg>${invalidFileRecordAlreadyExists}</arg>
<arg>${driver_firefox}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:14.016" endtime="20230223 13:53:14.016"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:14.016" endtime="20230223 13:53:14.016"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:14.017" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:14.016" endtime="20230223 13:53:14.017"/>
</kw>
<status status="PASS" starttime="20230223 13:53:14.016" endtime="20230223 13:53:14.017"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:14.018" endtime="20230223 13:53:14.018"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:14.018" endtime="20230223 13:53:14.018"/>
</branch>
<status status="PASS" starttime="20230223 13:53:14.016" endtime="20230223 13:53:14.018"/>
</if>
<status status="PASS" starttime="20230223 13:53:14.015" endtime="20230223 13:53:14.018"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:14.019" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:14.019" endtime="20230223 13:53:14.019"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:14.020" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:53:14.021" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-17.log</msg>
<status status="PASS" starttime="20230223 13:53:14.020" endtime="20230223 13:53:20.339"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:20.340" endtime="20230223 13:53:20.362"/>
</kw>
<status status="PASS" starttime="20230223 13:53:14.018" endtime="20230223 13:53:20.362"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:53:20.363" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidRecordAlreadyExists.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:53:20.363" endtime="20230223 13:53:20.370"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:20.371" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:53:20.371" endtime="20230223 13:53:20.595"/>
</kw>
<status status="PASS" starttime="20230223 13:53:20.362" endtime="20230223 13:53:20.596"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:53:25.706" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-14.png"&gt;&lt;img src="selenium-screenshot-14.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:53:25.706" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:53:20.597" endtime="20230223 13:53:25.707"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:25.707" endtime="20230223 13:53:25.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:53:25.707" endtime="20230223 13:53:25.708"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:20.597" endtime="20230223 13:53:25.708"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:14.015" endtime="20230223 13:53:25.708"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:25.712" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:25.712" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:25 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:25.709" endtime="20230223 13:53:25.712"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:25.713" endtime="20230223 13:53:28.192"/>
</kw>
<status status="PASS" starttime="20230223 13:53:25.709" endtime="20230223 13:53:28.192"/>
</kw>
<status status="PASS" starttime="20230223 13:53:25.708" endtime="20230223 13:53:28.192"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:53:14.014" endtime="20230223 13:53:28.193">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<test id="s1-s4-t48" name="Upload invalid record already exists chrome" line="126">
<kw name="Invalid case">
<arg>${invalidFileRecordAlreadyExists}</arg>
<arg>${driver_chrome}</arg>
<doc>Test cases in this US3.robot file are aimed to test the uploading of files with multiple persons data for different browsers
The datatable on the webpage and data fetched via API are then used to validate the uploading of files</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:28.201" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:28.201" endtime="20230223 13:53:28.201"/>
</kw>
<status status="PASS" starttime="20230223 13:53:28.201" endtime="20230223 13:53:28.202"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:28.202" endtime="20230223 13:53:28.202"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:28.202" endtime="20230223 13:53:28.202"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:28.203" endtime="20230223 13:53:28.203"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:28.203" endtime="20230223 13:53:28.203"/>
</branch>
<status status="PASS" starttime="20230223 13:53:28.201" endtime="20230223 13:53:28.203"/>
</if>
<status status="PASS" starttime="20230223 13:53:28.200" endtime="20230223 13:53:28.203"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:28.204" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:28.204" endtime="20230223 13:53:28.204"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:28.205" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:53:28.205" endtime="20230223 13:53:29.646"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:29.647" endtime="20230223 13:53:29.663"/>
</kw>
<status status="PASS" starttime="20230223 13:53:28.203" endtime="20230223 13:53:29.664"/>
</kw>
<kw name="Upload file and refresh table" library="UserStory3Utility">
<arg>${fileName}</arg>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${chooseFileXPath}</arg>
<arg>${fileName}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20230223 13:53:29.665" level="INFO">Sending C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestingData\TestData\InputDataInvalidRecordAlreadyExists.csv to browser.</msg>
<status status="PASS" starttime="20230223 13:53:29.664" endtime="20230223 13:53:29.687"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${refreshTaxReliefTableXPath}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:29.688" level="INFO">Clicking button 'xpath:/html/body/div/div[2]/div/button[1]'.</msg>
<status status="PASS" starttime="20230223 13:53:29.688" endtime="20230223 13:53:29.721"/>
</kw>
<status status="PASS" starttime="20230223 13:53:29.664" endtime="20230223 13:53:29.723"/>
</kw>
<kw name="Validate no data" library="UserStory3Utility">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${noRecordsMessageXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20230223 13:53:34.947" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-15.png"&gt;&lt;img src="selenium-screenshot-15.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230223 13:53:34.947" level="FAIL">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</msg>
<status status="FAIL" starttime="20230223 13:53:29.723" endtime="20230223 13:53:34.947"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${No_Records_Message}</var>
<arg>${noRecordsMessageXPath}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:34.948" endtime="20230223 13:53:34.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${No_Records_Message}</arg>
<arg>${noRecordsMessage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230223 13:53:34.948" endtime="20230223 13:53:34.948"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:29.723" endtime="20230223 13:53:34.948"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:28.200" endtime="20230223 13:53:34.949"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:34.953" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:34.953" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:34 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:34.949" endtime="20230223 13:53:34.953"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:34.954" endtime="20230223 13:53:37.052"/>
</kw>
<status status="PASS" starttime="20230223 13:53:34.949" endtime="20230223 13:53:37.052"/>
</kw>
<status status="PASS" starttime="20230223 13:53:34.949" endtime="20230223 13:53:37.053"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US3</tag>
<status status="FAIL" starttime="20230223 13:53:28.199" endtime="20230223 13:53:37.053">Element 'xpath:/html/body/div/div[2]/div/h1' not visible after 5 seconds.</status>
</test>
<status status="FAIL" starttime="20230223 13:47:55.701" endtime="20230223 13:53:37.060"/>
</suite>
<suite id="s1-s5" name="UserStory4" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory4.robot">
<test id="s1-s5-t1" name="Valid data age:18" line="20">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge18}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.130" level="INFO">${request_body} = {'birthday': '01012005', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.130" endtime="20230223 13:53:37.130"/>
</kw>
<msg timestamp="20230223 13:53:37.131" level="INFO">${request_body} = {'birthday': '01012005', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.129" endtime="20230223 13:53:37.131"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.132" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.132" endtime="20230223 13:53:37.132"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.133" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.133" endtime="20230223 13:53:37.133"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.137" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012005", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.137" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.137" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.134" endtime="20230223 13:53:37.137"/>
</kw>
<msg timestamp="20230223 13:53:37.138" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.131" endtime="20230223 13:53:37.138"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.139" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.139" endtime="20230223 13:53:37.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.140" endtime="20230223 13:53:37.140"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.138" endtime="20230223 13:53:37.140"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.143" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.143" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.143" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.141" endtime="20230223 13:53:37.143"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.145" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.143" endtime="20230223 13:53:37.145"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.145" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.145" endtime="20230223 13:53:37.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.146" endtime="20230223 13:53:37.146"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.141" endtime="20230223 13:53:37.146"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.147" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.147" endtime="20230223 13:53:37.147"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.148" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.148" endtime="20230223 13:53:37.148"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.149" level="INFO">${item_birthday} = 01012005</msg>
<status status="PASS" starttime="20230223 13:53:37.148" endtime="20230223 13:53:37.149"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.149" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.149" endtime="20230223 13:53:37.149"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.150" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.150" endtime="20230223 13:53:37.150"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.151" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.151" endtime="20230223 13:53:37.151"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.151" level="INFO">${item_birthyear} = 2005</msg>
<status status="PASS" starttime="20230223 13:53:37.151" endtime="20230223 13:53:37.151"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.153" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.152" endtime="20230223 13:53:37.153"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.152" endtime="20230223 13:53:37.153"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.153" endtime="20230223 13:53:37.153"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.153" endtime="20230223 13:53:37.153"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.154" endtime="20230223 13:53:37.154"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.154" endtime="20230223 13:53:37.154"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.154" endtime="20230223 13:53:37.154"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.154" endtime="20230223 13:53:37.154"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.155" endtime="20230223 13:53:37.155"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.154" endtime="20230223 13:53:37.155"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.152" endtime="20230223 13:53:37.155"/>
</if>
<msg timestamp="20230223 13:53:37.155" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.152" endtime="20230223 13:53:37.155"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.156" level="INFO">${item_age} = 18</msg>
<status status="PASS" starttime="20230223 13:53:37.156" endtime="20230223 13:53:37.156"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.156" endtime="20230223 13:53:37.157"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.157" endtime="20230223 13:53:37.157"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.157" endtime="20230223 13:53:37.157"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.156" endtime="20230223 13:53:37.157"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.157" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.157" endtime="20230223 13:53:37.158"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.157" endtime="20230223 13:53:37.158"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.158" endtime="20230223 13:53:37.158"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.158" endtime="20230223 13:53:37.158"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.159"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.159"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.159"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.159"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.159"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.159" endtime="20230223 13:53:37.160"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.157" endtime="20230223 13:53:37.160"/>
</if>
<msg timestamp="20230223 13:53:37.160" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.155" endtime="20230223 13:53:37.160"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.161" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:37.161" endtime="20230223 13:53:37.161"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.162" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.162" endtime="20230223 13:53:37.162"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.163" endtime="20230223 13:53:37.163"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.162" endtime="20230223 13:53:37.163"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.162" endtime="20230223 13:53:37.163"/>
</if>
<msg timestamp="20230223 13:53:37.163" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.160" endtime="20230223 13:53:37.163"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.164" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.164" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.164" endtime="20230223 13:53:37.164"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.165" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.164" endtime="20230223 13:53:37.165"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.165" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.165" endtime="20230223 13:53:37.165"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.166" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.166" endtime="20230223 13:53:37.166"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.167" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.167" endtime="20230223 13:53:37.167"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.167" endtime="20230223 13:53:37.167"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.168" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.168" endtime="20230223 13:53:37.168"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.168" endtime="20230223 13:53:37.168"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.169" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.169" endtime="20230223 13:53:37.169"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.169" endtime="20230223 13:53:37.169"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.170" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.170" endtime="20230223 13:53:37.170"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.169" endtime="20230223 13:53:37.170"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.171" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.170" endtime="20230223 13:53:37.171"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.170" endtime="20230223 13:53:37.171"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.172" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.171" endtime="20230223 13:53:37.172"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.171" endtime="20230223 13:53:37.172"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.167" endtime="20230223 13:53:37.172"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.173" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.173" endtime="20230223 13:53:37.173"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.173" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.173" endtime="20230223 13:53:37.174"/>
</kw>
<msg timestamp="20230223 13:53:37.174" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.163" endtime="20230223 13:53:37.174"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.175" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.175" endtime="20230223 13:53:37.175"/>
</kw>
<msg timestamp="20230223 13:53:37.176" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.147" endtime="20230223 13:53:37.176"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.177" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.177" endtime="20230223 13:53:37.177"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.178" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.178" endtime="20230223 13:53:37.178"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.179" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.178" endtime="20230223 13:53:37.179"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.179" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.179" endtime="20230223 13:53:37.179"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.182" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.182" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.183" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.180" endtime="20230223 13:53:37.183"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.185" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.183" endtime="20230223 13:53:37.185"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.186" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.185" endtime="20230223 13:53:37.186"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.180" endtime="20230223 13:53:37.186"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.186" endtime="20230223 13:53:37.187"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.186" endtime="20230223 13:53:37.187"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.180" endtime="20230223 13:53:37.187"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.187" endtime="20230223 13:53:37.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.187" endtime="20230223 13:53:37.187"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.187" endtime="20230223 13:53:37.188"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.176" endtime="20230223 13:53:37.188"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.129" endtime="20230223 13:53:37.188"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.190" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.190" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.188" endtime="20230223 13:53:37.190"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.128" endtime="20230223 13:53:37.191"/>
</test>
<test id="s1-s5-t2" name="Valid data age:19" line="22">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge19}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.199" level="INFO">${request_body} = {'birthday': '01012004', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.199" endtime="20230223 13:53:37.199"/>
</kw>
<msg timestamp="20230223 13:53:37.200" level="INFO">${request_body} = {'birthday': '01012004', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.198" endtime="20230223 13:53:37.200"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.201" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.201" endtime="20230223 13:53:37.201"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.202" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.201" endtime="20230223 13:53:37.202"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.205" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012004", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.205" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.205" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.202" endtime="20230223 13:53:37.206"/>
</kw>
<msg timestamp="20230223 13:53:37.207" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.200" endtime="20230223 13:53:37.207"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.209" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.208" endtime="20230223 13:53:37.210"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.210" endtime="20230223 13:53:37.210"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.207" endtime="20230223 13:53:37.211"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.213" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.213" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"7200.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.211" endtime="20230223 13:53:37.213"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.216" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.214" endtime="20230223 13:53:37.216"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.217" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.217" endtime="20230223 13:53:37.217"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.218" endtime="20230223 13:53:37.218"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.211" endtime="20230223 13:53:37.219"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.219" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.219" endtime="20230223 13:53:37.219"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.220" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.220" endtime="20230223 13:53:37.220"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.221" level="INFO">${item_birthday} = 01012004</msg>
<status status="PASS" starttime="20230223 13:53:37.221" endtime="20230223 13:53:37.221"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.222" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.222" endtime="20230223 13:53:37.222"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.223" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.223" endtime="20230223 13:53:37.223"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.224" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.224" endtime="20230223 13:53:37.224"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.225" level="INFO">${item_birthyear} = 2004</msg>
<status status="PASS" starttime="20230223 13:53:37.225" endtime="20230223 13:53:37.225"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.226" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.226" endtime="20230223 13:53:37.226"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.226" endtime="20230223 13:53:37.227"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.227" endtime="20230223 13:53:37.227"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.227" endtime="20230223 13:53:37.227"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.227" endtime="20230223 13:53:37.227"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.227" endtime="20230223 13:53:37.228"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.228" endtime="20230223 13:53:37.228"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.228" endtime="20230223 13:53:37.228"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.228" endtime="20230223 13:53:37.228"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.228" endtime="20230223 13:53:37.228"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.226" endtime="20230223 13:53:37.228"/>
</if>
<msg timestamp="20230223 13:53:37.229" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.226" endtime="20230223 13:53:37.229"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.230" level="INFO">${item_age} = 19</msg>
<status status="PASS" starttime="20230223 13:53:37.230" endtime="20230223 13:53:37.230"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.229" endtime="20230223 13:53:37.230"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.231"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.231"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.229" endtime="20230223 13:53:37.231"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.231"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.231"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.232" level="INFO">${age_variable} = 0.8</msg>
<status status="PASS" starttime="20230223 13:53:37.232" endtime="20230223 13:53:37.232"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.232"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.233" endtime="20230223 13:53:37.233"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.233" endtime="20230223 13:53:37.233"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.233" endtime="20230223 13:53:37.233"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.233" endtime="20230223 13:53:37.233"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.234" endtime="20230223 13:53:37.234"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.233" endtime="20230223 13:53:37.234"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.231" endtime="20230223 13:53:37.234"/>
</if>
<msg timestamp="20230223 13:53:37.234" level="INFO">${age_variable} = 0.8</msg>
<status status="PASS" starttime="20230223 13:53:37.229" endtime="20230223 13:53:37.234"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.235" level="INFO">${Tax_Relief} = 7200.0</msg>
<status status="PASS" starttime="20230223 13:53:37.235" endtime="20230223 13:53:37.235"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.236" level="INFO">${Tax_Relief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.236" endtime="20230223 13:53:37.236"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.237" endtime="20230223 13:53:37.237"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.236" endtime="20230223 13:53:37.237"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.236" endtime="20230223 13:53:37.237"/>
</if>
<msg timestamp="20230223 13:53:37.237" level="INFO">${taxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.234" endtime="20230223 13:53:37.237"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.239" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.239" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.238" endtime="20230223 13:53:37.239"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.240" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.240" endtime="20230223 13:53:37.240"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.241" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.241" endtime="20230223 13:53:37.241"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.242" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.242" endtime="20230223 13:53:37.242"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.243" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.243" endtime="20230223 13:53:37.243"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.243" endtime="20230223 13:53:37.244"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.244" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.244" endtime="20230223 13:53:37.244"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.244" endtime="20230223 13:53:37.245"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.245" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.245" endtime="20230223 13:53:37.245"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.245" endtime="20230223 13:53:37.246"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.246" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.246" endtime="20230223 13:53:37.246"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.246" endtime="20230223 13:53:37.247"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.247" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.247" endtime="20230223 13:53:37.247"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.247" endtime="20230223 13:53:37.248"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.248" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.248" endtime="20230223 13:53:37.248"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.248" endtime="20230223 13:53:37.249"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.242" endtime="20230223 13:53:37.249"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.249" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.249" endtime="20230223 13:53:37.249"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.250" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.250" endtime="20230223 13:53:37.250"/>
</kw>
<msg timestamp="20230223 13:53:37.251" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.238" endtime="20230223 13:53:37.251"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.252" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.251" endtime="20230223 13:53:37.252"/>
</kw>
<msg timestamp="20230223 13:53:37.252" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.219" endtime="20230223 13:53:37.252"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.253" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.253" endtime="20230223 13:53:37.254"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.255" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.254" endtime="20230223 13:53:37.255"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.255" level="INFO">${expectedTaxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.255" endtime="20230223 13:53:37.256"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.256" level="INFO">${expectedTaxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.256" endtime="20230223 13:53:37.256"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.260" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.260" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"7200.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.260" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.257" endtime="20230223 13:53:37.260"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.263" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '7200.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.261" endtime="20230223 13:53:37.263"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.264" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.264" endtime="20230223 13:53:37.264"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.257" endtime="20230223 13:53:37.265"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.265" endtime="20230223 13:53:37.265"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.265" endtime="20230223 13:53:37.266"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.257" endtime="20230223 13:53:37.266"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.266" endtime="20230223 13:53:37.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.267" endtime="20230223 13:53:37.267"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.267" endtime="20230223 13:53:37.267"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.253" endtime="20230223 13:53:37.268"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.198" endtime="20230223 13:53:37.268"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.271" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.271" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.268" endtime="20230223 13:53:37.271"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.197" endtime="20230223 13:53:37.272"/>
</test>
<test id="s1-s5-t3" name="Valid data age:35" line="24">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge35}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.280" level="INFO">${request_body} = {'birthday': '01011988', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.280" endtime="20230223 13:53:37.280"/>
</kw>
<msg timestamp="20230223 13:53:37.281" level="INFO">${request_body} = {'birthday': '01011988', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.279" endtime="20230223 13:53:37.281"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.282" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.282" endtime="20230223 13:53:37.282"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.283" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.283" endtime="20230223 13:53:37.283"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.287" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011988", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.287" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.287" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.284" endtime="20230223 13:53:37.287"/>
</kw>
<msg timestamp="20230223 13:53:37.288" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.281" endtime="20230223 13:53:37.288"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.290" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.289" endtime="20230223 13:53:37.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.291" endtime="20230223 13:53:37.291"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.289" endtime="20230223 13:53:37.291"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.294" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.294" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"7200.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.294" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.292" endtime="20230223 13:53:37.294"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.296" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.295" endtime="20230223 13:53:37.296"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.297" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.297" endtime="20230223 13:53:37.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.298" endtime="20230223 13:53:37.298"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.292" endtime="20230223 13:53:37.298"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.299" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.298" endtime="20230223 13:53:37.299"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.299" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.299" endtime="20230223 13:53:37.299"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.300" level="INFO">${item_birthday} = 01011988</msg>
<status status="PASS" starttime="20230223 13:53:37.300" endtime="20230223 13:53:37.300"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.301" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.301" endtime="20230223 13:53:37.301"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.302" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.302" endtime="20230223 13:53:37.302"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.303" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.302" endtime="20230223 13:53:37.303"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.304" level="INFO">${item_birthyear} = 1988</msg>
<status status="PASS" starttime="20230223 13:53:37.304" endtime="20230223 13:53:37.304"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.305" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.305" endtime="20230223 13:53:37.305"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.305" endtime="20230223 13:53:37.306"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.306" endtime="20230223 13:53:37.306"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.306" endtime="20230223 13:53:37.306"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.306" endtime="20230223 13:53:37.307"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.306" endtime="20230223 13:53:37.307"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.307" endtime="20230223 13:53:37.307"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.307" endtime="20230223 13:53:37.307"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.307" endtime="20230223 13:53:37.307"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.307" endtime="20230223 13:53:37.308"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.305" endtime="20230223 13:53:37.308"/>
</if>
<msg timestamp="20230223 13:53:37.308" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.304" endtime="20230223 13:53:37.308"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.309" level="INFO">${item_age} = 35</msg>
<status status="PASS" starttime="20230223 13:53:37.309" endtime="20230223 13:53:37.309"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.309" endtime="20230223 13:53:37.310"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.310" endtime="20230223 13:53:37.310"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.310" endtime="20230223 13:53:37.310"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.309" endtime="20230223 13:53:37.310"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.310" endtime="20230223 13:53:37.311"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.310" endtime="20230223 13:53:37.311"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.311" level="INFO">${age_variable} = 0.8</msg>
<status status="PASS" starttime="20230223 13:53:37.311" endtime="20230223 13:53:37.311"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.311" endtime="20230223 13:53:37.311"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.312" endtime="20230223 13:53:37.312"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.312" endtime="20230223 13:53:37.312"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.312" endtime="20230223 13:53:37.312"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.312" endtime="20230223 13:53:37.312"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.313" endtime="20230223 13:53:37.313"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.312" endtime="20230223 13:53:37.313"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.310" endtime="20230223 13:53:37.313"/>
</if>
<msg timestamp="20230223 13:53:37.313" level="INFO">${age_variable} = 0.8</msg>
<status status="PASS" starttime="20230223 13:53:37.308" endtime="20230223 13:53:37.313"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.314" level="INFO">${Tax_Relief} = 7200.0</msg>
<status status="PASS" starttime="20230223 13:53:37.314" endtime="20230223 13:53:37.314"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.315" level="INFO">${Tax_Relief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.315" endtime="20230223 13:53:37.315"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.316" endtime="20230223 13:53:37.316"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.315" endtime="20230223 13:53:37.316"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.315" endtime="20230223 13:53:37.316"/>
</if>
<msg timestamp="20230223 13:53:37.316" level="INFO">${taxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.313" endtime="20230223 13:53:37.316"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.317" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.317" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.317" endtime="20230223 13:53:37.317"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.318" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.318" endtime="20230223 13:53:37.318"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.319" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.319" endtime="20230223 13:53:37.319"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.320" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.319" endtime="20230223 13:53:37.320"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.321" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.320" endtime="20230223 13:53:37.321"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.320" endtime="20230223 13:53:37.321"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.322" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.321" endtime="20230223 13:53:37.322"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.321" endtime="20230223 13:53:37.322"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.323" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.322" endtime="20230223 13:53:37.323"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.322" endtime="20230223 13:53:37.323"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.324" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.323" endtime="20230223 13:53:37.324"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.323" endtime="20230223 13:53:37.324"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.324" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.324" endtime="20230223 13:53:37.324"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.324" endtime="20230223 13:53:37.325"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.325" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.325" endtime="20230223 13:53:37.325"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.325" endtime="20230223 13:53:37.326"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.320" endtime="20230223 13:53:37.326"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.326" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.326" endtime="20230223 13:53:37.326"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.327" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.327" endtime="20230223 13:53:37.327"/>
</kw>
<msg timestamp="20230223 13:53:37.328" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.316" endtime="20230223 13:53:37.328"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.329" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.329" endtime="20230223 13:53:37.329"/>
</kw>
<msg timestamp="20230223 13:53:37.330" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.298" endtime="20230223 13:53:37.330"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.331" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.330" endtime="20230223 13:53:37.331"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.331" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.331" endtime="20230223 13:53:37.331"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.332" level="INFO">${expectedTaxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.332" endtime="20230223 13:53:37.332"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.333" level="INFO">${expectedTaxRelief} = 7200.00</msg>
<status status="PASS" starttime="20230223 13:53:37.333" endtime="20230223 13:53:37.333"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.336" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.336" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"7200.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.336" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.334" endtime="20230223 13:53:37.336"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.338" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '7200.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.337" endtime="20230223 13:53:37.338"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.339" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '7200.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.339" endtime="20230223 13:53:37.339"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.334" endtime="20230223 13:53:37.340"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.340" endtime="20230223 13:53:37.340"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.340" endtime="20230223 13:53:37.340"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.334" endtime="20230223 13:53:37.340"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.340" endtime="20230223 13:53:37.341"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.341" endtime="20230223 13:53:37.341"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.341" endtime="20230223 13:53:37.341"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.330" endtime="20230223 13:53:37.341"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.279" endtime="20230223 13:53:37.342"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.344" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.344" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.342" endtime="20230223 13:53:37.344"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.278" endtime="20230223 13:53:37.345"/>
</test>
<test id="s1-s5-t4" name="Valid data age:36" line="26">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge36}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.352" level="INFO">${request_body} = {'birthday': '01011987', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.352" endtime="20230223 13:53:37.352"/>
</kw>
<msg timestamp="20230223 13:53:37.353" level="INFO">${request_body} = {'birthday': '01011987', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.352" endtime="20230223 13:53:37.353"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.354" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.354" endtime="20230223 13:53:37.354"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.355" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.355" endtime="20230223 13:53:37.355"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.359" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011987", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.359" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.359" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.356" endtime="20230223 13:53:37.359"/>
</kw>
<msg timestamp="20230223 13:53:37.360" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.354" endtime="20230223 13:53:37.360"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.361" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.361" endtime="20230223 13:53:37.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.362" endtime="20230223 13:53:37.362"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.360" endtime="20230223 13:53:37.362"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.365" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.365" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"4500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.365" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.363" endtime="20230223 13:53:37.365"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.367" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.366" endtime="20230223 13:53:37.367"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.368" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.368" endtime="20230223 13:53:37.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.368" endtime="20230223 13:53:37.369"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.363" endtime="20230223 13:53:37.369"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.369" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.369" endtime="20230223 13:53:37.369"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.370" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.370" endtime="20230223 13:53:37.370"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.371" level="INFO">${item_birthday} = 01011987</msg>
<status status="PASS" starttime="20230223 13:53:37.371" endtime="20230223 13:53:37.371"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.372" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.371" endtime="20230223 13:53:37.372"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.372" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.372" endtime="20230223 13:53:37.372"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.373" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.373" endtime="20230223 13:53:37.373"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.374" level="INFO">${item_birthyear} = 1987</msg>
<status status="PASS" starttime="20230223 13:53:37.374" endtime="20230223 13:53:37.374"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.375" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.375" endtime="20230223 13:53:37.375"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.374" endtime="20230223 13:53:37.375"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.376" endtime="20230223 13:53:37.376"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.375" endtime="20230223 13:53:37.376"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.376" endtime="20230223 13:53:37.376"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.376" endtime="20230223 13:53:37.376"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.376" endtime="20230223 13:53:37.376"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.376" endtime="20230223 13:53:37.376"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.377" endtime="20230223 13:53:37.377"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.377" endtime="20230223 13:53:37.377"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.374" endtime="20230223 13:53:37.377"/>
</if>
<msg timestamp="20230223 13:53:37.377" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.374" endtime="20230223 13:53:37.377"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.378" level="INFO">${item_age} = 36</msg>
<status status="PASS" starttime="20230223 13:53:37.378" endtime="20230223 13:53:37.378"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.378" endtime="20230223 13:53:37.379"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.379" endtime="20230223 13:53:37.379"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.379" endtime="20230223 13:53:37.379"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.378" endtime="20230223 13:53:37.379"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.379" endtime="20230223 13:53:37.380"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.379" endtime="20230223 13:53:37.380"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.380" endtime="20230223 13:53:37.380"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.380" endtime="20230223 13:53:37.380"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.380" level="INFO">${age_variable} = 0.5</msg>
<status status="PASS" starttime="20230223 13:53:37.380" endtime="20230223 13:53:37.380"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.380" endtime="20230223 13:53:37.381"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.381" endtime="20230223 13:53:37.381"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.381" endtime="20230223 13:53:37.381"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.382" endtime="20230223 13:53:37.382"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.382" endtime="20230223 13:53:37.382"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.379" endtime="20230223 13:53:37.382"/>
</if>
<msg timestamp="20230223 13:53:37.382" level="INFO">${age_variable} = 0.5</msg>
<status status="PASS" starttime="20230223 13:53:37.378" endtime="20230223 13:53:37.382"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.383" level="INFO">${Tax_Relief} = 4500.0</msg>
<status status="PASS" starttime="20230223 13:53:37.383" endtime="20230223 13:53:37.383"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.384" level="INFO">${Tax_Relief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.384" endtime="20230223 13:53:37.384"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.385" endtime="20230223 13:53:37.385"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.385" endtime="20230223 13:53:37.385"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.384" endtime="20230223 13:53:37.385"/>
</if>
<msg timestamp="20230223 13:53:37.385" level="INFO">${taxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.383" endtime="20230223 13:53:37.385"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.386" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.386" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.386" endtime="20230223 13:53:37.386"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.387" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.387" endtime="20230223 13:53:37.387"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.388" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.387" endtime="20230223 13:53:37.388"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.388" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.388" endtime="20230223 13:53:37.388"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.389" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.389" endtime="20230223 13:53:37.389"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.389" endtime="20230223 13:53:37.390"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.390" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.390" endtime="20230223 13:53:37.390"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.390" endtime="20230223 13:53:37.391"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.391" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.391" endtime="20230223 13:53:37.391"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.391" endtime="20230223 13:53:37.392"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.392" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.392" endtime="20230223 13:53:37.392"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.392" endtime="20230223 13:53:37.393"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.393" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.393" endtime="20230223 13:53:37.393"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.393" endtime="20230223 13:53:37.393"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.394" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.394" endtime="20230223 13:53:37.394"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.394" endtime="20230223 13:53:37.394"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.389" endtime="20230223 13:53:37.395"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.395" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.395" endtime="20230223 13:53:37.395"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.396" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.395" endtime="20230223 13:53:37.396"/>
</kw>
<msg timestamp="20230223 13:53:37.396" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.386" endtime="20230223 13:53:37.396"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.397" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.397" endtime="20230223 13:53:37.397"/>
</kw>
<msg timestamp="20230223 13:53:37.398" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.369" endtime="20230223 13:53:37.398"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.399" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.399" endtime="20230223 13:53:37.399"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.400" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.399" endtime="20230223 13:53:37.400"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.400" level="INFO">${expectedTaxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.400" endtime="20230223 13:53:37.400"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.401" level="INFO">${expectedTaxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.401" endtime="20230223 13:53:37.401"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.404" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.404" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"4500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.404" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.402" endtime="20230223 13:53:37.404"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.406" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '4500.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.405" endtime="20230223 13:53:37.406"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.407" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.407" endtime="20230223 13:53:37.407"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.402" endtime="20230223 13:53:37.408"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.408" endtime="20230223 13:53:37.408"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.408" endtime="20230223 13:53:37.408"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.402" endtime="20230223 13:53:37.408"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.408" endtime="20230223 13:53:37.408"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.409" endtime="20230223 13:53:37.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.409" endtime="20230223 13:53:37.409"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.398" endtime="20230223 13:53:37.409"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.351" endtime="20230223 13:53:37.409"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.412" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.412" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.410" endtime="20230223 13:53:37.412"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.351" endtime="20230223 13:53:37.413"/>
</test>
<test id="s1-s5-t5" name="Valid data age:50" line="28">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge50}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.420" level="INFO">${request_body} = {'birthday': '01011973', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.420" endtime="20230223 13:53:37.420"/>
</kw>
<msg timestamp="20230223 13:53:37.421" level="INFO">${request_body} = {'birthday': '01011973', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.419" endtime="20230223 13:53:37.421"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.422" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.422" endtime="20230223 13:53:37.422"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.423" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.422" endtime="20230223 13:53:37.423"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.426" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011973", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.426" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.427" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.423" endtime="20230223 13:53:37.427"/>
</kw>
<msg timestamp="20230223 13:53:37.428" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.421" endtime="20230223 13:53:37.428"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.429" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.429" endtime="20230223 13:53:37.430"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.430" endtime="20230223 13:53:37.430"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.428" endtime="20230223 13:53:37.431"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.433" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.433" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"4500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.433" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.431" endtime="20230223 13:53:37.433"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.435" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.434" endtime="20230223 13:53:37.435"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.436" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.436" endtime="20230223 13:53:37.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.436" endtime="20230223 13:53:37.437"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.431" endtime="20230223 13:53:37.437"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.437" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.437" endtime="20230223 13:53:37.437"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.438" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.438" endtime="20230223 13:53:37.438"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.439" level="INFO">${item_birthday} = 01011973</msg>
<status status="PASS" starttime="20230223 13:53:37.439" endtime="20230223 13:53:37.439"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.440" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.440" endtime="20230223 13:53:37.440"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.440" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.440" endtime="20230223 13:53:37.440"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.441" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.441" endtime="20230223 13:53:37.441"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.442" level="INFO">${item_birthyear} = 1973</msg>
<status status="PASS" starttime="20230223 13:53:37.442" endtime="20230223 13:53:37.442"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.443" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.443" endtime="20230223 13:53:37.443"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.443" endtime="20230223 13:53:37.444"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.444" endtime="20230223 13:53:37.444"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.444" endtime="20230223 13:53:37.444"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.444" endtime="20230223 13:53:37.444"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.444" endtime="20230223 13:53:37.444"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.445" endtime="20230223 13:53:37.445"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.445" endtime="20230223 13:53:37.445"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.445" endtime="20230223 13:53:37.445"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.445" endtime="20230223 13:53:37.445"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.443" endtime="20230223 13:53:37.445"/>
</if>
<msg timestamp="20230223 13:53:37.445" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.442" endtime="20230223 13:53:37.445"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.447" level="INFO">${item_age} = 50</msg>
<status status="PASS" starttime="20230223 13:53:37.446" endtime="20230223 13:53:37.447"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.446" endtime="20230223 13:53:37.447"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.447" endtime="20230223 13:53:37.448"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.447" endtime="20230223 13:53:37.448"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.446" endtime="20230223 13:53:37.448"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.448" endtime="20230223 13:53:37.448"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.448" endtime="20230223 13:53:37.448"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.448" endtime="20230223 13:53:37.449"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.448" endtime="20230223 13:53:37.449"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.449" level="INFO">${age_variable} = 0.5</msg>
<status status="PASS" starttime="20230223 13:53:37.449" endtime="20230223 13:53:37.449"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.449" endtime="20230223 13:53:37.449"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.450" endtime="20230223 13:53:37.450"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.450" endtime="20230223 13:53:37.450"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.450" endtime="20230223 13:53:37.450"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.450" endtime="20230223 13:53:37.450"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.448" endtime="20230223 13:53:37.450"/>
</if>
<msg timestamp="20230223 13:53:37.450" level="INFO">${age_variable} = 0.5</msg>
<status status="PASS" starttime="20230223 13:53:37.446" endtime="20230223 13:53:37.450"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.452" level="INFO">${Tax_Relief} = 4500.0</msg>
<status status="PASS" starttime="20230223 13:53:37.451" endtime="20230223 13:53:37.452"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.453" level="INFO">${Tax_Relief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.452" endtime="20230223 13:53:37.453"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.453" endtime="20230223 13:53:37.453"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.453" endtime="20230223 13:53:37.454"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.453" endtime="20230223 13:53:37.454"/>
</if>
<msg timestamp="20230223 13:53:37.454" level="INFO">${taxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.451" endtime="20230223 13:53:37.454"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.455" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.455" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.455" endtime="20230223 13:53:37.455"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.456" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.455" endtime="20230223 13:53:37.456"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.456" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.456" endtime="20230223 13:53:37.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.457" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.457" endtime="20230223 13:53:37.457"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.458" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.458" endtime="20230223 13:53:37.458"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.458" endtime="20230223 13:53:37.459"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.459" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.459" endtime="20230223 13:53:37.459"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.459" endtime="20230223 13:53:37.460"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.460" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.460" endtime="20230223 13:53:37.460"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.460" endtime="20230223 13:53:37.461"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.461" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.461" endtime="20230223 13:53:37.461"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.461" endtime="20230223 13:53:37.462"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.462" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.462" endtime="20230223 13:53:37.462"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.462" endtime="20230223 13:53:37.463"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.464" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.464" endtime="20230223 13:53:37.464"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.464" endtime="20230223 13:53:37.464"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.458" endtime="20230223 13:53:37.465"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.465" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.465" endtime="20230223 13:53:37.465"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.466" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.466" endtime="20230223 13:53:37.466"/>
</kw>
<msg timestamp="20230223 13:53:37.466" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.454" endtime="20230223 13:53:37.466"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.467" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.467" endtime="20230223 13:53:37.467"/>
</kw>
<msg timestamp="20230223 13:53:37.468" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.437" endtime="20230223 13:53:37.468"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.469" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.469" endtime="20230223 13:53:37.469"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.470" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.470" endtime="20230223 13:53:37.470"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.471" level="INFO">${expectedTaxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.470" endtime="20230223 13:53:37.471"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.471" level="INFO">${expectedTaxRelief} = 4500.00</msg>
<status status="PASS" starttime="20230223 13:53:37.471" endtime="20230223 13:53:37.471"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.474" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.474" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"4500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.474" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.472" endtime="20230223 13:53:37.474"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.476" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '4500.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.475" endtime="20230223 13:53:37.476"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.477" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '4500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.477" endtime="20230223 13:53:37.477"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.472" endtime="20230223 13:53:37.478"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.478" endtime="20230223 13:53:37.478"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.478" endtime="20230223 13:53:37.478"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.472" endtime="20230223 13:53:37.478"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.478" endtime="20230223 13:53:37.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.479" endtime="20230223 13:53:37.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.479" endtime="20230223 13:53:37.479"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.468" endtime="20230223 13:53:37.479"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.419" endtime="20230223 13:53:37.479"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.482" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.482" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.480" endtime="20230223 13:53:37.482"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.419" endtime="20230223 13:53:37.483"/>
</test>
<test id="s1-s5-t6" name="Valid data age:51" line="30">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge51}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.490" level="INFO">${request_body} = {'birthday': '01011972', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.490" endtime="20230223 13:53:37.491"/>
</kw>
<msg timestamp="20230223 13:53:37.491" level="INFO">${request_body} = {'birthday': '01011972', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.490" endtime="20230223 13:53:37.491"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.492" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.492" endtime="20230223 13:53:37.493"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.493" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.493" endtime="20230223 13:53:37.493"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.497" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011972", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.497" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.497" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.494" endtime="20230223 13:53:37.497"/>
</kw>
<msg timestamp="20230223 13:53:37.498" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.492" endtime="20230223 13:53:37.498"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.500" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.499" endtime="20230223 13:53:37.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.500" endtime="20230223 13:53:37.501"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.499" endtime="20230223 13:53:37.501"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.503" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.503" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"3303.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.501" endtime="20230223 13:53:37.503"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.506" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.504" endtime="20230223 13:53:37.506"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.507" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.507" endtime="20230223 13:53:37.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.508" endtime="20230223 13:53:37.508"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.501" endtime="20230223 13:53:37.508"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.509" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.509" endtime="20230223 13:53:37.509"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.510" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.509" endtime="20230223 13:53:37.510"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.510" level="INFO">${item_birthday} = 01011972</msg>
<status status="PASS" starttime="20230223 13:53:37.510" endtime="20230223 13:53:37.510"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.511" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.511" endtime="20230223 13:53:37.511"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.512" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.511" endtime="20230223 13:53:37.512"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.512" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.512" endtime="20230223 13:53:37.512"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.513" level="INFO">${item_birthyear} = 1972</msg>
<status status="PASS" starttime="20230223 13:53:37.513" endtime="20230223 13:53:37.513"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.514" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.514" endtime="20230223 13:53:37.514"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.514" endtime="20230223 13:53:37.515"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.515" endtime="20230223 13:53:37.515"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.515" endtime="20230223 13:53:37.515"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.515" endtime="20230223 13:53:37.515"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.515" endtime="20230223 13:53:37.516"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.516" endtime="20230223 13:53:37.516"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.516" endtime="20230223 13:53:37.516"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.516" endtime="20230223 13:53:37.516"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.516" endtime="20230223 13:53:37.516"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.514" endtime="20230223 13:53:37.517"/>
</if>
<msg timestamp="20230223 13:53:37.517" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.514" endtime="20230223 13:53:37.517"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.518" level="INFO">${item_age} = 51</msg>
<status status="PASS" starttime="20230223 13:53:37.518" endtime="20230223 13:53:37.518"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.517" endtime="20230223 13:53:37.518"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.519" endtime="20230223 13:53:37.519"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.519" endtime="20230223 13:53:37.519"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.517" endtime="20230223 13:53:37.519"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.519" endtime="20230223 13:53:37.519"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.519" endtime="20230223 13:53:37.519"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.520" endtime="20230223 13:53:37.520"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.520" endtime="20230223 13:53:37.520"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.520" endtime="20230223 13:53:37.520"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.520" endtime="20230223 13:53:37.520"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.521" level="INFO">${age_variable} = 0.367</msg>
<status status="PASS" starttime="20230223 13:53:37.521" endtime="20230223 13:53:37.521"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.520" endtime="20230223 13:53:37.521"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.522" endtime="20230223 13:53:37.522"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.521" endtime="20230223 13:53:37.522"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.519" endtime="20230223 13:53:37.522"/>
</if>
<msg timestamp="20230223 13:53:37.522" level="INFO">${age_variable} = 0.367</msg>
<status status="PASS" starttime="20230223 13:53:37.517" endtime="20230223 13:53:37.522"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.523" level="INFO">${Tax_Relief} = 3303.0</msg>
<status status="PASS" starttime="20230223 13:53:37.523" endtime="20230223 13:53:37.523"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.524" level="INFO">${Tax_Relief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.524" endtime="20230223 13:53:37.524"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.525" endtime="20230223 13:53:37.525"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.525" endtime="20230223 13:53:37.525"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.525" endtime="20230223 13:53:37.525"/>
</if>
<msg timestamp="20230223 13:53:37.526" level="INFO">${taxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.523" endtime="20230223 13:53:37.526"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.527" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.527" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.526" endtime="20230223 13:53:37.527"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.527" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.527" endtime="20230223 13:53:37.527"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.528" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.528" endtime="20230223 13:53:37.528"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.529" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.529" endtime="20230223 13:53:37.529"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.530" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.530" endtime="20230223 13:53:37.530"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.530" endtime="20230223 13:53:37.531"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.531" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.531" endtime="20230223 13:53:37.531"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.531" endtime="20230223 13:53:37.532"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.532" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.532" endtime="20230223 13:53:37.532"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.532" endtime="20230223 13:53:37.533"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.533" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.533" endtime="20230223 13:53:37.533"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.533" endtime="20230223 13:53:37.534"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.534" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.534" endtime="20230223 13:53:37.534"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.534" endtime="20230223 13:53:37.535"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.535" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.535" endtime="20230223 13:53:37.535"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.535" endtime="20230223 13:53:37.536"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.530" endtime="20230223 13:53:37.536"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.536" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.536" endtime="20230223 13:53:37.536"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.537" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.537" endtime="20230223 13:53:37.537"/>
</kw>
<msg timestamp="20230223 13:53:37.538" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.526" endtime="20230223 13:53:37.538"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.539" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.538" endtime="20230223 13:53:37.539"/>
</kw>
<msg timestamp="20230223 13:53:37.539" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.508" endtime="20230223 13:53:37.539"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.540" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.540" endtime="20230223 13:53:37.540"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.541" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.541" endtime="20230223 13:53:37.541"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.542" level="INFO">${expectedTaxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.542" endtime="20230223 13:53:37.542"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.543" level="INFO">${expectedTaxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.542" endtime="20230223 13:53:37.543"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.546" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.546" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"3303.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.546" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.543" endtime="20230223 13:53:37.546"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.548" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '3303.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.547" endtime="20230223 13:53:37.548"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.549" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.548" endtime="20230223 13:53:37.549"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.543" endtime="20230223 13:53:37.549"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.550" endtime="20230223 13:53:37.550"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.549" endtime="20230223 13:53:37.550"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.543" endtime="20230223 13:53:37.550"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.550" endtime="20230223 13:53:37.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.550" endtime="20230223 13:53:37.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.551" endtime="20230223 13:53:37.551"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.540" endtime="20230223 13:53:37.551"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.489" endtime="20230223 13:53:37.551"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.554" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.554" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.552" endtime="20230223 13:53:37.554"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.489" endtime="20230223 13:53:37.555"/>
</test>
<test id="s1-s5-t7" name="Valid data age:75" line="32">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge75}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.563" level="INFO">${request_body} = {'birthday': '01011948', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.562" endtime="20230223 13:53:37.563"/>
</kw>
<msg timestamp="20230223 13:53:37.564" level="INFO">${request_body} = {'birthday': '01011948', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.562" endtime="20230223 13:53:37.564"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.565" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.564" endtime="20230223 13:53:37.565"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.566" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.565" endtime="20230223 13:53:37.566"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.570" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011948", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.570" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.570" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.566" endtime="20230223 13:53:37.570"/>
</kw>
<msg timestamp="20230223 13:53:37.571" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.564" endtime="20230223 13:53:37.571"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.573" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.572" endtime="20230223 13:53:37.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.573" endtime="20230223 13:53:37.574"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.571" endtime="20230223 13:53:37.574"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.576" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.576" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"3303.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.576" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.574" endtime="20230223 13:53:37.576"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.579" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.577" endtime="20230223 13:53:37.579"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.579" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.579" endtime="20230223 13:53:37.579"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.580" endtime="20230223 13:53:37.580"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.574" endtime="20230223 13:53:37.580"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.581" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.581" endtime="20230223 13:53:37.581"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.582" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.581" endtime="20230223 13:53:37.582"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.582" level="INFO">${item_birthday} = 01011948</msg>
<status status="PASS" starttime="20230223 13:53:37.582" endtime="20230223 13:53:37.582"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.583" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.583" endtime="20230223 13:53:37.583"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.584" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.584" endtime="20230223 13:53:37.584"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.585" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.585" endtime="20230223 13:53:37.585"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.586" level="INFO">${item_birthyear} = 1948</msg>
<status status="PASS" starttime="20230223 13:53:37.585" endtime="20230223 13:53:37.586"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.587" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.586" endtime="20230223 13:53:37.587"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.586" endtime="20230223 13:53:37.587"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.587" endtime="20230223 13:53:37.587"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.587" endtime="20230223 13:53:37.588"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.588" endtime="20230223 13:53:37.588"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.588" endtime="20230223 13:53:37.588"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.588" endtime="20230223 13:53:37.588"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.588" endtime="20230223 13:53:37.588"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.589" endtime="20230223 13:53:37.589"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.588" endtime="20230223 13:53:37.589"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.586" endtime="20230223 13:53:37.589"/>
</if>
<msg timestamp="20230223 13:53:37.589" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.586" endtime="20230223 13:53:37.589"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.590" level="INFO">${item_age} = 75</msg>
<status status="PASS" starttime="20230223 13:53:37.590" endtime="20230223 13:53:37.590"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.590" endtime="20230223 13:53:37.591"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.591" endtime="20230223 13:53:37.591"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.591" endtime="20230223 13:53:37.591"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.590" endtime="20230223 13:53:37.591"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.591" endtime="20230223 13:53:37.591"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.591" endtime="20230223 13:53:37.591"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.592" endtime="20230223 13:53:37.592"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.592" endtime="20230223 13:53:37.592"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.592" endtime="20230223 13:53:37.592"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.592" endtime="20230223 13:53:37.592"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.593" level="INFO">${age_variable} = 0.367</msg>
<status status="PASS" starttime="20230223 13:53:37.593" endtime="20230223 13:53:37.593"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.592" endtime="20230223 13:53:37.593"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.594" endtime="20230223 13:53:37.594"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.593" endtime="20230223 13:53:37.594"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.591" endtime="20230223 13:53:37.594"/>
</if>
<msg timestamp="20230223 13:53:37.594" level="INFO">${age_variable} = 0.367</msg>
<status status="PASS" starttime="20230223 13:53:37.589" endtime="20230223 13:53:37.594"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.595" level="INFO">${Tax_Relief} = 3303.0</msg>
<status status="PASS" starttime="20230223 13:53:37.595" endtime="20230223 13:53:37.595"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.596" level="INFO">${Tax_Relief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.596" endtime="20230223 13:53:37.596"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.597" endtime="20230223 13:53:37.597"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.597" endtime="20230223 13:53:37.597"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.597" endtime="20230223 13:53:37.597"/>
</if>
<msg timestamp="20230223 13:53:37.597" level="INFO">${taxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.595" endtime="20230223 13:53:37.597"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.598" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.598" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.598" endtime="20230223 13:53:37.598"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.599" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.599" endtime="20230223 13:53:37.599"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.599" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.599" endtime="20230223 13:53:37.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.600" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.600" endtime="20230223 13:53:37.600"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.601" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.601" endtime="20230223 13:53:37.601"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.601" endtime="20230223 13:53:37.602"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.602" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.602" endtime="20230223 13:53:37.602"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.602" endtime="20230223 13:53:37.602"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.603" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.603" endtime="20230223 13:53:37.603"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.603" endtime="20230223 13:53:37.603"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.604" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.604" endtime="20230223 13:53:37.604"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.604" endtime="20230223 13:53:37.604"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.605" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.605" endtime="20230223 13:53:37.605"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.605" endtime="20230223 13:53:37.605"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.606" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.606" endtime="20230223 13:53:37.606"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.605" endtime="20230223 13:53:37.606"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.601" endtime="20230223 13:53:37.606"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.607" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.607" endtime="20230223 13:53:37.607"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.608" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.607" endtime="20230223 13:53:37.608"/>
</kw>
<msg timestamp="20230223 13:53:37.608" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.598" endtime="20230223 13:53:37.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.609" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.609" endtime="20230223 13:53:37.609"/>
</kw>
<msg timestamp="20230223 13:53:37.610" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.580" endtime="20230223 13:53:37.610"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.611" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.611" endtime="20230223 13:53:37.611"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.612" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.611" endtime="20230223 13:53:37.612"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.612" level="INFO">${expectedTaxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.612" endtime="20230223 13:53:37.612"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.613" level="INFO">${expectedTaxRelief} = 3303.00</msg>
<status status="PASS" starttime="20230223 13:53:37.613" endtime="20230223 13:53:37.613"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.616" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.616" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"3303.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.616" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.614" endtime="20230223 13:53:37.616"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.618" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '3303.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.617" endtime="20230223 13:53:37.618"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.619" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '3303.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.619" endtime="20230223 13:53:37.619"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.614" endtime="20230223 13:53:37.619"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.620" endtime="20230223 13:53:37.620"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.620" endtime="20230223 13:53:37.620"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.614" endtime="20230223 13:53:37.620"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.620" endtime="20230223 13:53:37.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.620" endtime="20230223 13:53:37.621"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.621" endtime="20230223 13:53:37.621"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.610" endtime="20230223 13:53:37.621"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.562" endtime="20230223 13:53:37.621"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.624" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.624" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.622" endtime="20230223 13:53:37.624"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.561" endtime="20230223 13:53:37.625"/>
</test>
<test id="s1-s5-t8" name="Valid data age:76" line="34">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayAge76}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.632" level="INFO">${request_body} = {'birthday': '01011947', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.632" endtime="20230223 13:53:37.632"/>
</kw>
<msg timestamp="20230223 13:53:37.633" level="INFO">${request_body} = {'birthday': '01011947', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.631" endtime="20230223 13:53:37.633"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.634" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.634" endtime="20230223 13:53:37.634"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.635" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.635" endtime="20230223 13:53:37.635"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.638" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011947", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.639" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.639" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.635" endtime="20230223 13:53:37.639"/>
</kw>
<msg timestamp="20230223 13:53:37.640" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.633" endtime="20230223 13:53:37.640"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.641" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.641" endtime="20230223 13:53:37.641"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.642" endtime="20230223 13:53:37.642"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.640" endtime="20230223 13:53:37.642"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.645" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.645" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"450.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.645" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.643" endtime="20230223 13:53:37.645"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.647" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.646" endtime="20230223 13:53:37.647"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.648" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.648" endtime="20230223 13:53:37.648"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.649" endtime="20230223 13:53:37.649"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.643" endtime="20230223 13:53:37.649"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.649" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.649" endtime="20230223 13:53:37.649"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.650" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.650" endtime="20230223 13:53:37.650"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.651" level="INFO">${item_birthday} = 01011947</msg>
<status status="PASS" starttime="20230223 13:53:37.651" endtime="20230223 13:53:37.651"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.652" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.651" endtime="20230223 13:53:37.652"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.652" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.652" endtime="20230223 13:53:37.652"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.653" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.653" endtime="20230223 13:53:37.653"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.654" level="INFO">${item_birthyear} = 1947</msg>
<status status="PASS" starttime="20230223 13:53:37.654" endtime="20230223 13:53:37.654"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.655" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.655" endtime="20230223 13:53:37.655"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.655" endtime="20230223 13:53:37.656"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.656" endtime="20230223 13:53:37.656"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.656" endtime="20230223 13:53:37.656"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.656" endtime="20230223 13:53:37.656"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.656" endtime="20230223 13:53:37.656"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.657" endtime="20230223 13:53:37.657"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.657" endtime="20230223 13:53:37.657"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.657" endtime="20230223 13:53:37.657"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.657" endtime="20230223 13:53:37.657"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.655" endtime="20230223 13:53:37.657"/>
</if>
<msg timestamp="20230223 13:53:37.657" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.655" endtime="20230223 13:53:37.657"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.658" level="INFO">${item_age} = 76</msg>
<status status="PASS" starttime="20230223 13:53:37.658" endtime="20230223 13:53:37.658"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.658" endtime="20230223 13:53:37.659"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.659" endtime="20230223 13:53:37.659"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.659" endtime="20230223 13:53:37.659"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.658" endtime="20230223 13:53:37.659"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.660" endtime="20230223 13:53:37.660"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.659" endtime="20230223 13:53:37.660"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.660" endtime="20230223 13:53:37.660"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.660" endtime="20230223 13:53:37.660"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.661" endtime="20230223 13:53:37.661"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.660" endtime="20230223 13:53:37.661"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.661" endtime="20230223 13:53:37.661"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.661" endtime="20230223 13:53:37.661"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.662" level="INFO">${age_variable} = 0.05</msg>
<status status="PASS" starttime="20230223 13:53:37.661" endtime="20230223 13:53:37.662"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.661" endtime="20230223 13:53:37.662"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.659" endtime="20230223 13:53:37.662"/>
</if>
<msg timestamp="20230223 13:53:37.662" level="INFO">${age_variable} = 0.05</msg>
<status status="PASS" starttime="20230223 13:53:37.658" endtime="20230223 13:53:37.662"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.663" level="INFO">${Tax_Relief} = 450.0</msg>
<status status="PASS" starttime="20230223 13:53:37.663" endtime="20230223 13:53:37.663"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.664" level="INFO">${Tax_Relief} = 450.00</msg>
<status status="PASS" starttime="20230223 13:53:37.664" endtime="20230223 13:53:37.664"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.665" endtime="20230223 13:53:37.665"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.665" endtime="20230223 13:53:37.665"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.665" endtime="20230223 13:53:37.665"/>
</if>
<msg timestamp="20230223 13:53:37.665" level="INFO">${taxRelief} = 450.00</msg>
<status status="PASS" starttime="20230223 13:53:37.663" endtime="20230223 13:53:37.665"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.666" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.666" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.666" endtime="20230223 13:53:37.666"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.667" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.667" endtime="20230223 13:53:37.667"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.668" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.668" endtime="20230223 13:53:37.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.668" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.668" endtime="20230223 13:53:37.668"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.669" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.669" endtime="20230223 13:53:37.669"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.669" endtime="20230223 13:53:37.670"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.670" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.670" endtime="20230223 13:53:37.670"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.670" endtime="20230223 13:53:37.671"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.671" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.671" endtime="20230223 13:53:37.671"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.671" endtime="20230223 13:53:37.672"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.672" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.672" endtime="20230223 13:53:37.672"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.672" endtime="20230223 13:53:37.673"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.673" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.673" endtime="20230223 13:53:37.673"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.673" endtime="20230223 13:53:37.674"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.674" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.674" endtime="20230223 13:53:37.674"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.674" endtime="20230223 13:53:37.675"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.669" endtime="20230223 13:53:37.675"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.675" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.675" endtime="20230223 13:53:37.675"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.676" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.676" endtime="20230223 13:53:37.676"/>
</kw>
<msg timestamp="20230223 13:53:37.677" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.666" endtime="20230223 13:53:37.677"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.678" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '450.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.678" endtime="20230223 13:53:37.678"/>
</kw>
<msg timestamp="20230223 13:53:37.679" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '450.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.649" endtime="20230223 13:53:37.679"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.680" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.679" endtime="20230223 13:53:37.680"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.680" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.680" endtime="20230223 13:53:37.680"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.681" level="INFO">${expectedTaxRelief} = 450.00</msg>
<status status="PASS" starttime="20230223 13:53:37.681" endtime="20230223 13:53:37.681"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.682" level="INFO">${expectedTaxRelief} = 450.00</msg>
<status status="PASS" starttime="20230223 13:53:37.682" endtime="20230223 13:53:37.682"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.685" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.685" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"450.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.685" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.683" endtime="20230223 13:53:37.685"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.687" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '450.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.686" endtime="20230223 13:53:37.687"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.688" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '450.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.687" endtime="20230223 13:53:37.688"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.682" endtime="20230223 13:53:37.688"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.688" endtime="20230223 13:53:37.688"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.688" endtime="20230223 13:53:37.689"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.682" endtime="20230223 13:53:37.689"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.689" endtime="20230223 13:53:37.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.689" endtime="20230223 13:53:37.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.689" endtime="20230223 13:53:37.690"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.679" endtime="20230223 13:53:37.690"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.631" endtime="20230223 13:53:37.690"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.692" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.692" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.690" endtime="20230223 13:53:37.693"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.631" endtime="20230223 13:53:37.693"/>
</test>
<test id="s1-s5-t9" name="Invalid data age:150" line="36">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdateTooFarInPast}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.701" level="INFO">${request_body} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.700" endtime="20230223 13:53:37.701"/>
</kw>
<msg timestamp="20230223 13:53:37.701" level="INFO">${request_body} = {'birthday': '01011873', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.700" endtime="20230223 13:53:37.702"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.703" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.703" endtime="20230223 13:53:37.703"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.704" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.704" endtime="20230223 13:53:37.704"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.708" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01011873", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.708" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.708" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:53:37.705" endtime="20230223 13:53:37.709"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.702" endtime="20230223 13:53:37.710"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.710" endtime="20230223 13:53:37.710"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.710" endtime="20230223 13:53:37.710"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.710" endtime="20230223 13:53:37.710"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.711" endtime="20230223 13:53:37.711"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.700" endtime="20230223 13:53:37.711"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.713" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.714" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.711" endtime="20230223 13:53:37.714"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:37.699" endtime="20230223 13:53:37.715">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s5-t10" name="Invalid data birthday in future" line="38">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdateInFuture}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.722" level="INFO">${request_body} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.722" endtime="20230223 13:53:37.722"/>
</kw>
<msg timestamp="20230223 13:53:37.723" level="INFO">${request_body} = {'birthday': '01012030', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.721" endtime="20230223 13:53:37.723"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.724" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.724" endtime="20230223 13:53:37.724"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.725" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.725" endtime="20230223 13:53:37.725"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.729" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012030", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.729" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.729" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:53:37.726" endtime="20230223 13:53:37.729"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.724" endtime="20230223 13:53:37.730"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.731" endtime="20230223 13:53:37.731"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.731" endtime="20230223 13:53:37.731"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.731" endtime="20230223 13:53:37.731"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.731" endtime="20230223 13:53:37.731"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.721" endtime="20230223 13:53:37.731"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.734" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.734" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.732" endtime="20230223 13:53:37.734"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:37.721" endtime="20230223 13:53:37.735">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s5-t11" name="Invalid data age too small" line="40">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdateAgeTooYoung}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.743" level="INFO">${request_body} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.743" endtime="20230223 13:53:37.743"/>
</kw>
<msg timestamp="20230223 13:53:37.744" level="INFO">${request_body} = {'birthday': '01012018', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.742" endtime="20230223 13:53:37.744"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.745" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.745" endtime="20230223 13:53:37.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.746" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.746" endtime="20230223 13:53:37.746"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.750" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012018", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.750" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.750" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:53:37.747" endtime="20230223 13:53:37.750"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.745" endtime="20230223 13:53:37.751"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.751" endtime="20230223 13:53:37.751"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.752" endtime="20230223 13:53:37.752"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.752" endtime="20230223 13:53:37.752"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.752" endtime="20230223 13:53:37.752"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.742" endtime="20230223 13:53:37.752"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.755" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.755" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.753" endtime="20230223 13:53:37.755"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:37.742" endtime="20230223 13:53:37.756">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s5-t12" name="Invalid data birthday invalid format" line="42">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayInvalidFormat}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.767" level="INFO">${request_body} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.767" endtime="20230223 13:53:37.767"/>
</kw>
<msg timestamp="20230223 13:53:37.768" level="INFO">${request_body} = {'birthday': '20200101', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.767" endtime="20230223 13:53:37.768"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.769" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.769" endtime="20230223 13:53:37.769"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.770" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.770" endtime="20230223 13:53:37.770"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.776" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "20200101", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.776" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:37.774+0000","status":500,"error":"Internal Server Error","message":"Text '20200101' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 20","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:37.776" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.771" endtime="20230223 13:53:37.776"/>
</kw>
<msg timestamp="20230223 13:53:37.777" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.769" endtime="20230223 13:53:37.777"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.779" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:37.778" endtime="20230223 13:53:37.779"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.780" endtime="20230223 13:53:37.780"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.778" endtime="20230223 13:53:37.780"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.783" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.783" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:37.783" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.781" endtime="20230223 13:53:37.783"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.785" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.784" endtime="20230223 13:53:37.785"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.786" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.786" endtime="20230223 13:53:37.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.786" endtime="20230223 13:53:37.786"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.781" endtime="20230223 13:53:37.787"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.787" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.787" endtime="20230223 13:53:37.787"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.788" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.788" endtime="20230223 13:53:37.788"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.789" level="INFO">${item_birthday} = 20200101</msg>
<status status="PASS" starttime="20230223 13:53:37.788" endtime="20230223 13:53:37.789"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.789" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.789" endtime="20230223 13:53:37.789"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.790" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.790" endtime="20230223 13:53:37.790"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.791" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.791" endtime="20230223 13:53:37.791"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.792" level="INFO">${item_birthyear} = 0101</msg>
<status status="PASS" starttime="20230223 13:53:37.791" endtime="20230223 13:53:37.792"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.792" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.792" endtime="20230223 13:53:37.793"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.792" endtime="20230223 13:53:37.793"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.793" endtime="20230223 13:53:37.793"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.793" endtime="20230223 13:53:37.794"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.794" endtime="20230223 13:53:37.794"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.794" endtime="20230223 13:53:37.794"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.794" endtime="20230223 13:53:37.794"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.794" endtime="20230223 13:53:37.794"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.795" endtime="20230223 13:53:37.795"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.795" endtime="20230223 13:53:37.795"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.792" endtime="20230223 13:53:37.795"/>
</if>
<msg timestamp="20230223 13:53:37.795" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.792" endtime="20230223 13:53:37.795"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.797" level="FAIL">Evaluating expression '2023-0101' failed: SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230223 13:53:37.796" endtime="20230223 13:53:37.797"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.796" endtime="20230223 13:53:37.799"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:37.799" level="INFO">Execution passed with message:
msg=Invalid date format</msg>
<status status="PASS" starttime="20230223 13:53:37.799" endtime="20230223 13:53:37.799"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.799" endtime="20230223 13:53:37.800"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.796" endtime="20230223 13:53:37.800"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.800"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.800"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.800"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.800"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.801" endtime="20230223 13:53:37.801"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.801"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.801" endtime="20230223 13:53:37.801"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.801" endtime="20230223 13:53:37.801"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.801" endtime="20230223 13:53:37.801"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.801" endtime="20230223 13:53:37.801"/>
</branch>
<status status="NOT RUN" starttime="20230223 13:53:37.800" endtime="20230223 13:53:37.802"/>
</if>
<status status="PASS" starttime="20230223 13:53:37.796" endtime="20230223 13:53:37.802"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.802" endtime="20230223 13:53:37.802"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.802" endtime="20230223 13:53:37.802"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.802" endtime="20230223 13:53:37.802"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.787" endtime="20230223 13:53:37.802"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.802" endtime="20230223 13:53:37.803"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.766" endtime="20230223 13:53:37.803"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.805" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.805" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.803" endtime="20230223 13:53:37.805"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.766" endtime="20230223 13:53:37.806">msg=Invalid date format</status>
</test>
<test id="s1-s5-t13" name="Invalid data birthday is special characters" line="44">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdaySpecialChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.814" level="INFO">${request_body} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.813" endtime="20230223 13:53:37.814"/>
</kw>
<msg timestamp="20230223 13:53:37.814" level="INFO">${request_body} = {'birthday': '!@#$!@!@', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.813" endtime="20230223 13:53:37.814"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.815" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.815" endtime="20230223 13:53:37.816"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.816" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.816" endtime="20230223 13:53:37.816"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.821" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "!@#$!@!@", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.821" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:37.819+0000","status":500,"error":"Internal Server Error","message":"Text '!@#$!@!@' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:37.821" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.817" endtime="20230223 13:53:37.821"/>
</kw>
<msg timestamp="20230223 13:53:37.822" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.815" endtime="20230223 13:53:37.822"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.843" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:37.823" endtime="20230223 13:53:37.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.844" endtime="20230223 13:53:37.844"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.823" endtime="20230223 13:53:37.844"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.847" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.847" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:37.847" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.844" endtime="20230223 13:53:37.847"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.849" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.848" endtime="20230223 13:53:37.849"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.849" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.849" endtime="20230223 13:53:37.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.850" endtime="20230223 13:53:37.850"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.844" endtime="20230223 13:53:37.850"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.851" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.851" endtime="20230223 13:53:37.851"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.852" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.852" endtime="20230223 13:53:37.852"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.852" level="INFO">${item_birthday} = !@#$!@!@</msg>
<status status="PASS" starttime="20230223 13:53:37.852" endtime="20230223 13:53:37.852"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.853" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.853" endtime="20230223 13:53:37.853"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.854" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.854" endtime="20230223 13:53:37.854"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.855" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.854" endtime="20230223 13:53:37.855"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.855" level="INFO">${item_birthyear} = !@!@</msg>
<status status="PASS" starttime="20230223 13:53:37.855" endtime="20230223 13:53:37.855"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.857" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.856" endtime="20230223 13:53:37.857"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.856" endtime="20230223 13:53:37.857"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.857" endtime="20230223 13:53:37.857"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.857" endtime="20230223 13:53:37.857"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.858" endtime="20230223 13:53:37.858"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.858" endtime="20230223 13:53:37.858"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.858" endtime="20230223 13:53:37.858"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.858" endtime="20230223 13:53:37.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.859" endtime="20230223 13:53:37.859"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.858" endtime="20230223 13:53:37.859"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.856" endtime="20230223 13:53:37.859"/>
</if>
<msg timestamp="20230223 13:53:37.859" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.856" endtime="20230223 13:53:37.859"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.860" level="FAIL">Evaluating expression '2023-!@!@' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230223 13:53:37.860" endtime="20230223 13:53:37.860"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.860" endtime="20230223 13:53:37.861"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:37.861" level="INFO">Execution passed with message:
msg=Invalid date format</msg>
<status status="PASS" starttime="20230223 13:53:37.861" endtime="20230223 13:53:37.861"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.861" endtime="20230223 13:53:37.862"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.860" endtime="20230223 13:53:37.862"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.862" endtime="20230223 13:53:37.862"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.862" endtime="20230223 13:53:37.862"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.862" endtime="20230223 13:53:37.863"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.862" endtime="20230223 13:53:37.863"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.863" endtime="20230223 13:53:37.863"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.863" endtime="20230223 13:53:37.863"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.863" endtime="20230223 13:53:37.863"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.863" endtime="20230223 13:53:37.863"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.864" endtime="20230223 13:53:37.864"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.864" endtime="20230223 13:53:37.864"/>
</branch>
<status status="NOT RUN" starttime="20230223 13:53:37.862" endtime="20230223 13:53:37.864"/>
</if>
<status status="PASS" starttime="20230223 13:53:37.859" endtime="20230223 13:53:37.864"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.864" endtime="20230223 13:53:37.864"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.864" endtime="20230223 13:53:37.864"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.865" endtime="20230223 13:53:37.865"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.851" endtime="20230223 13:53:37.865"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.865" endtime="20230223 13:53:37.865"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.813" endtime="20230223 13:53:37.865"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.867" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.867" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.865" endtime="20230223 13:53:37.868"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.812" endtime="20230223 13:53:37.868">msg=Invalid date format</status>
</test>
<test id="s1-s5-t14" name="Invalid data birthday is characters" line="46">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthdayChar}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.876" level="INFO">${request_body} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.875" endtime="20230223 13:53:37.876"/>
</kw>
<msg timestamp="20230223 13:53:37.876" level="INFO">${request_body} = {'birthday': 'abcdabab', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.875" endtime="20230223 13:53:37.876"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.877" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.877" endtime="20230223 13:53:37.878"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.878" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.878" endtime="20230223 13:53:37.879"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.883" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "abcdabab", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.883" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:37.882+0000","status":500,"error":"Internal Server Error","message":"Text 'abcdabab' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:37.884" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.879" endtime="20230223 13:53:37.884"/>
</kw>
<msg timestamp="20230223 13:53:37.884" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.877" endtime="20230223 13:53:37.885"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.886" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:37.886" endtime="20230223 13:53:37.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.887" endtime="20230223 13:53:37.887"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.885" endtime="20230223 13:53:37.887"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.890" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.890" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:37.890" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.888" endtime="20230223 13:53:37.890"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.892" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.891" endtime="20230223 13:53:37.892"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.893" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.893" endtime="20230223 13:53:37.893"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.893" endtime="20230223 13:53:37.894"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.888" endtime="20230223 13:53:37.894"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.894" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.894" endtime="20230223 13:53:37.894"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.895" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.895" endtime="20230223 13:53:37.895"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.896" level="INFO">${item_birthday} = abcdabab</msg>
<status status="PASS" starttime="20230223 13:53:37.896" endtime="20230223 13:53:37.896"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.897" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.897" endtime="20230223 13:53:37.897"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.897" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.897" endtime="20230223 13:53:37.897"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.898" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.898" endtime="20230223 13:53:37.898"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.899" level="INFO">${item_birthyear} = abab</msg>
<status status="PASS" starttime="20230223 13:53:37.899" endtime="20230223 13:53:37.899"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.900" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.900" endtime="20230223 13:53:37.900"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.900" endtime="20230223 13:53:37.901"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.901" endtime="20230223 13:53:37.901"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.901" endtime="20230223 13:53:37.901"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.901" endtime="20230223 13:53:37.901"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.901" endtime="20230223 13:53:37.901"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.902" endtime="20230223 13:53:37.902"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.902" endtime="20230223 13:53:37.902"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.902" endtime="20230223 13:53:37.902"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.902" endtime="20230223 13:53:37.902"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.900" endtime="20230223 13:53:37.902"/>
</if>
<msg timestamp="20230223 13:53:37.903" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.900" endtime="20230223 13:53:37.903"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.905" level="FAIL">Evaluating expression '2023-abab' failed: NameError: name 'abab' is not defined nor importable as module</msg>
<status status="FAIL" starttime="20230223 13:53:37.903" endtime="20230223 13:53:37.905"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:37.903" endtime="20230223 13:53:37.906"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:37.906" level="INFO">Execution passed with message:
msg=Invalid date format</msg>
<status status="PASS" starttime="20230223 13:53:37.906" endtime="20230223 13:53:37.906"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.906" endtime="20230223 13:53:37.907"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.903" endtime="20230223 13:53:37.907"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.907" endtime="20230223 13:53:37.907"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.907" endtime="20230223 13:53:37.907"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.907" endtime="20230223 13:53:37.907"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.907" endtime="20230223 13:53:37.907"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.908" endtime="20230223 13:53:37.908"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.908" endtime="20230223 13:53:37.908"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.908" endtime="20230223 13:53:37.908"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.908" endtime="20230223 13:53:37.908"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.909" endtime="20230223 13:53:37.909"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.908" endtime="20230223 13:53:37.909"/>
</branch>
<status status="NOT RUN" starttime="20230223 13:53:37.907" endtime="20230223 13:53:37.909"/>
</if>
<status status="PASS" starttime="20230223 13:53:37.903" endtime="20230223 13:53:37.909"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.909" endtime="20230223 13:53:37.909"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.909" endtime="20230223 13:53:37.909"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.909" endtime="20230223 13:53:37.910"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.894" endtime="20230223 13:53:37.910"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:37.910" endtime="20230223 13:53:37.910"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.875" endtime="20230223 13:53:37.910"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.913" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.913" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.910" endtime="20230223 13:53:37.913"/>
</kw>
<tag>AgeFilter</tag>
<tag>Functional</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.874" endtime="20230223 13:53:37.914">msg=Invalid date format</status>
</test>
<test id="s1-s5-t15" name="Valid data gender:M" line="49">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.921" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.921" endtime="20230223 13:53:37.921"/>
</kw>
<msg timestamp="20230223 13:53:37.922" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.921" endtime="20230223 13:53:37.922"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.924" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.923" endtime="20230223 13:53:37.924"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.924" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.924" endtime="20230223 13:53:37.924"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.928" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.928" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.928" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.925" endtime="20230223 13:53:37.929"/>
</kw>
<msg timestamp="20230223 13:53:37.930" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.923" endtime="20230223 13:53:37.930"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.932" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:37.931" endtime="20230223 13:53:37.932"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.932" endtime="20230223 13:53:37.932"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.930" endtime="20230223 13:53:37.933"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.935" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.935" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.933" endtime="20230223 13:53:37.935"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.937" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.936" endtime="20230223 13:53:37.937"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.938" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.938" endtime="20230223 13:53:37.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.939" endtime="20230223 13:53:37.939"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.933" endtime="20230223 13:53:37.939"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.939" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:37.939" endtime="20230223 13:53:37.940"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.940" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:37.940" endtime="20230223 13:53:37.940"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.941" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:37.941" endtime="20230223 13:53:37.941"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.942" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:37.942" endtime="20230223 13:53:37.942"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.942" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.942" endtime="20230223 13:53:37.942"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.943" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:37.943" endtime="20230223 13:53:37.943"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.944" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:37.944" endtime="20230223 13:53:37.944"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.945" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.945" endtime="20230223 13:53:37.945"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.945" endtime="20230223 13:53:37.945"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.946"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.946"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.946"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.946"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.947"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.946" endtime="20230223 13:53:37.947"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.947" endtime="20230223 13:53:37.947"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.947" endtime="20230223 13:53:37.947"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.945" endtime="20230223 13:53:37.948"/>
</if>
<msg timestamp="20230223 13:53:37.948" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.944" endtime="20230223 13:53:37.948"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.949" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:37.949" endtime="20230223 13:53:37.949"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.949" endtime="20230223 13:53:37.949"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.950" endtime="20230223 13:53:37.950"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.950" endtime="20230223 13:53:37.950"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.949" endtime="20230223 13:53:37.950"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.950" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.950" endtime="20230223 13:53:37.950"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.950" endtime="20230223 13:53:37.951"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.951" endtime="20230223 13:53:37.951"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.951" endtime="20230223 13:53:37.951"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.952" endtime="20230223 13:53:37.952"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.951" endtime="20230223 13:53:37.952"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.952" endtime="20230223 13:53:37.952"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.952" endtime="20230223 13:53:37.952"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.952" endtime="20230223 13:53:37.952"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.952" endtime="20230223 13:53:37.953"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.950" endtime="20230223 13:53:37.953"/>
</if>
<msg timestamp="20230223 13:53:37.953" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:37.948" endtime="20230223 13:53:37.953"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.954" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:37.954" endtime="20230223 13:53:37.954"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.955" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.954" endtime="20230223 13:53:37.955"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.955" endtime="20230223 13:53:37.955"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.955" endtime="20230223 13:53:37.955"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.955" endtime="20230223 13:53:37.956"/>
</if>
<msg timestamp="20230223 13:53:37.956" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.953" endtime="20230223 13:53:37.956"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:37.957" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:37.957" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:37.957" endtime="20230223 13:53:37.957"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.958" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:37.957" endtime="20230223 13:53:37.958"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.958" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:37.958" endtime="20230223 13:53:37.958"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:37.959" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:37.959" endtime="20230223 13:53:37.959"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.960" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:37.960" endtime="20230223 13:53:37.960"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.960" endtime="20230223 13:53:37.961"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.961" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:37.961" endtime="20230223 13:53:37.961"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.961" endtime="20230223 13:53:37.962"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.962" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.962" endtime="20230223 13:53:37.962"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.962" endtime="20230223 13:53:37.963"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.963" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.963" endtime="20230223 13:53:37.963"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.963" endtime="20230223 13:53:37.964"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.964" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.964" endtime="20230223 13:53:37.964"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.964" endtime="20230223 13:53:37.965"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.965" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.965" endtime="20230223 13:53:37.965"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.965" endtime="20230223 13:53:37.966"/>
</iter>
<status status="PASS" starttime="20230223 13:53:37.960" endtime="20230223 13:53:37.966"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:37.966" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.966" endtime="20230223 13:53:37.966"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:37.967" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.967" endtime="20230223 13:53:37.967"/>
</kw>
<msg timestamp="20230223 13:53:37.967" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.956" endtime="20230223 13:53:37.968"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.968" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.968" endtime="20230223 13:53:37.968"/>
</kw>
<msg timestamp="20230223 13:53:37.969" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.939" endtime="20230223 13:53:37.969"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.970" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:37.970" endtime="20230223 13:53:37.970"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.971" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:37.970" endtime="20230223 13:53:37.971"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:37.971" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.971" endtime="20230223 13:53:37.971"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:37.972" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:37.972" endtime="20230223 13:53:37.972"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.975" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.975" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:37.975" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.973" endtime="20230223 13:53:37.975"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:37.977" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:37.976" endtime="20230223 13:53:37.977"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:37.978" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:37.978" endtime="20230223 13:53:37.978"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.973" endtime="20230223 13:53:37.979"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:37.979" endtime="20230223 13:53:37.979"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:37.979" endtime="20230223 13:53:37.979"/>
</branch>
<status status="PASS" starttime="20230223 13:53:37.973" endtime="20230223 13:53:37.979"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.979" endtime="20230223 13:53:37.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.980" endtime="20230223 13:53:37.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:37.980" endtime="20230223 13:53:37.980"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.969" endtime="20230223 13:53:37.980"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.920" endtime="20230223 13:53:37.980"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.983" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:37.983" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:37.981" endtime="20230223 13:53:37.983"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.920" endtime="20230223 13:53:37.984"/>
</test>
<test id="s1-s5-t16" name="Valid data gender:F" line="51">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender2}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.992" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'F', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.991" endtime="20230223 13:53:37.992"/>
</kw>
<msg timestamp="20230223 13:53:37.992" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'F', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:37.991" endtime="20230223 13:53:37.992"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:37.993" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:37.993" endtime="20230223 13:53:37.993"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:37.994" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:37.994" endtime="20230223 13:53:37.994"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:37.998" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "F", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:37.998" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:37.998" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.995" endtime="20230223 13:53:37.998"/>
</kw>
<msg timestamp="20230223 13:53:37.999" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:37.993" endtime="20230223 13:53:37.999"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.001" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.000" endtime="20230223 13:53:38.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.002" endtime="20230223 13:53:38.002"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.000" endtime="20230223 13:53:38.002"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.005" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.005" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.005" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.002" endtime="20230223 13:53:38.005"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.007" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.005" endtime="20230223 13:53:38.007"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.008" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.007" endtime="20230223 13:53:38.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.008" endtime="20230223 13:53:38.008"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.002" endtime="20230223 13:53:38.009"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.009" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.009" endtime="20230223 13:53:38.009"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.010" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.010" endtime="20230223 13:53:38.010"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.011" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.010" endtime="20230223 13:53:38.011"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.011" level="INFO">${item_gender} = F</msg>
<status status="PASS" starttime="20230223 13:53:38.011" endtime="20230223 13:53:38.011"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.012" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.012" endtime="20230223 13:53:38.012"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.013" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.013" endtime="20230223 13:53:38.013"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.014" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.013" endtime="20230223 13:53:38.014"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.015" endtime="20230223 13:53:38.015"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.014" endtime="20230223 13:53:38.015"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.015" endtime="20230223 13:53:38.015"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.015" endtime="20230223 13:53:38.015"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.016" level="INFO">${gender_bonus} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.015" endtime="20230223 13:53:38.016"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.015" endtime="20230223 13:53:38.016"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.016" endtime="20230223 13:53:38.017"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.016" endtime="20230223 13:53:38.017"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.017" endtime="20230223 13:53:38.017"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.017" endtime="20230223 13:53:38.017"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.014" endtime="20230223 13:53:38.017"/>
</if>
<msg timestamp="20230223 13:53:38.017" level="INFO">${gender_bonus} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.014" endtime="20230223 13:53:38.017"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.019" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.018" endtime="20230223 13:53:38.019"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.018" endtime="20230223 13:53:38.019"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.019" endtime="20230223 13:53:38.019"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.019" endtime="20230223 13:53:38.019"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.018" endtime="20230223 13:53:38.020"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.020" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.020" endtime="20230223 13:53:38.020"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.020" endtime="20230223 13:53:38.020"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.021"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.021"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.021"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.021"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.022"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.021" endtime="20230223 13:53:38.022"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.022" endtime="20230223 13:53:38.022"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.022" endtime="20230223 13:53:38.022"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.020" endtime="20230223 13:53:38.022"/>
</if>
<msg timestamp="20230223 13:53:38.022" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.018" endtime="20230223 13:53:38.022"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.023" level="INFO">${Tax_Relief} = 9500.0</msg>
<status status="PASS" starttime="20230223 13:53:38.023" endtime="20230223 13:53:38.023"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.024" level="INFO">${Tax_Relief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.024" endtime="20230223 13:53:38.024"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.025" endtime="20230223 13:53:38.025"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.025" endtime="20230223 13:53:38.025"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.025" endtime="20230223 13:53:38.025"/>
</if>
<msg timestamp="20230223 13:53:38.025" level="INFO">${taxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.023" endtime="20230223 13:53:38.025"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.026" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.026" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.026" endtime="20230223 13:53:38.026"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.027" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.027" endtime="20230223 13:53:38.027"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.028" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.027" endtime="20230223 13:53:38.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.028" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.028" endtime="20230223 13:53:38.028"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.029" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.029" endtime="20230223 13:53:38.029"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.029" endtime="20230223 13:53:38.030"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.030" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.030" endtime="20230223 13:53:38.030"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.030" endtime="20230223 13:53:38.031"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.031" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.031" endtime="20230223 13:53:38.031"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.031" endtime="20230223 13:53:38.032"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.032" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.032" endtime="20230223 13:53:38.032"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.032" endtime="20230223 13:53:38.033"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.033" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.033" endtime="20230223 13:53:38.033"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.033" endtime="20230223 13:53:38.034"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.034" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.034" endtime="20230223 13:53:38.034"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.034" endtime="20230223 13:53:38.035"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.029" endtime="20230223 13:53:38.035"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.035" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.035" endtime="20230223 13:53:38.035"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.036" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.036" endtime="20230223 13:53:38.036"/>
</kw>
<msg timestamp="20230223 13:53:38.037" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.026" endtime="20230223 13:53:38.037"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.038" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.037" endtime="20230223 13:53:38.038"/>
</kw>
<msg timestamp="20230223 13:53:38.039" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.009" endtime="20230223 13:53:38.039"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.040" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.039" endtime="20230223 13:53:38.040"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.041" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.040" endtime="20230223 13:53:38.041"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.041" level="INFO">${expectedTaxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.041" endtime="20230223 13:53:38.041"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.042" level="INFO">${expectedTaxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.042" endtime="20230223 13:53:38.042"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.045" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.045" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.045" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.043" endtime="20230223 13:53:38.045"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.047" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9500.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.046" endtime="20230223 13:53:38.047"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.048" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.048" endtime="20230223 13:53:38.048"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.043" endtime="20230223 13:53:38.048"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.049" endtime="20230223 13:53:38.049"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.049" endtime="20230223 13:53:38.049"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.043" endtime="20230223 13:53:38.049"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.049" endtime="20230223 13:53:38.049"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.049" endtime="20230223 13:53:38.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.050" endtime="20230223 13:53:38.050"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.039" endtime="20230223 13:53:38.050"/>
</kw>
<status status="PASS" starttime="20230223 13:53:37.990" endtime="20230223 13:53:38.050"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.053" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.053" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.051" endtime="20230223 13:53:38.053"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:37.990" endtime="20230223 13:53:38.054"/>
</test>
<test id="s1-s5-t17" name="Valid data gender:m" line="53">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderm}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.062" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'm', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.062" endtime="20230223 13:53:38.062"/>
</kw>
<msg timestamp="20230223 13:53:38.063" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'm', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.062" endtime="20230223 13:53:38.063"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.064" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.064" endtime="20230223 13:53:38.065"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.065" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.065" endtime="20230223 13:53:38.065"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.070" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "m", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.070" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.070" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.066" endtime="20230223 13:53:38.070"/>
</kw>
<msg timestamp="20230223 13:53:38.071" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.064" endtime="20230223 13:53:38.071"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.073" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.072" endtime="20230223 13:53:38.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.074" endtime="20230223 13:53:38.074"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.072" endtime="20230223 13:53:38.074"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.077" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.077" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.077" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.075" endtime="20230223 13:53:38.077"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.079" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.078" endtime="20230223 13:53:38.079"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.080" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.080" endtime="20230223 13:53:38.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.081" endtime="20230223 13:53:38.081"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.074" endtime="20230223 13:53:38.081"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.082" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.082" endtime="20230223 13:53:38.082"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.083" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.083" endtime="20230223 13:53:38.083"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.084" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.084" endtime="20230223 13:53:38.084"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.085" level="INFO">${item_gender} = m</msg>
<status status="PASS" starttime="20230223 13:53:38.085" endtime="20230223 13:53:38.085"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.086" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.086" endtime="20230223 13:53:38.086"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.087" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.086" endtime="20230223 13:53:38.087"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.087" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.087" endtime="20230223 13:53:38.088"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.089" endtime="20230223 13:53:38.089"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.088" endtime="20230223 13:53:38.089"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.089" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.089" endtime="20230223 13:53:38.089"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.089" endtime="20230223 13:53:38.090"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.090" endtime="20230223 13:53:38.090"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.090" endtime="20230223 13:53:38.090"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.091" endtime="20230223 13:53:38.091"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.090" endtime="20230223 13:53:38.091"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.091" endtime="20230223 13:53:38.091"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.091" endtime="20230223 13:53:38.091"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.088" endtime="20230223 13:53:38.091"/>
</if>
<msg timestamp="20230223 13:53:38.091" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.088" endtime="20230223 13:53:38.091"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.093" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.092" endtime="20230223 13:53:38.093"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.092" endtime="20230223 13:53:38.093"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.094" endtime="20230223 13:53:38.094"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.093" endtime="20230223 13:53:38.094"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.092" endtime="20230223 13:53:38.094"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.094" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.094" endtime="20230223 13:53:38.094"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.094" endtime="20230223 13:53:38.095"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.095" endtime="20230223 13:53:38.095"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.095" endtime="20230223 13:53:38.096"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.096" endtime="20230223 13:53:38.096"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.096" endtime="20230223 13:53:38.096"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.096" endtime="20230223 13:53:38.096"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.096" endtime="20230223 13:53:38.096"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.097" endtime="20230223 13:53:38.097"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.097" endtime="20230223 13:53:38.097"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.094" endtime="20230223 13:53:38.097"/>
</if>
<msg timestamp="20230223 13:53:38.097" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.092" endtime="20230223 13:53:38.097"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.099" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:38.098" endtime="20230223 13:53:38.099"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.100" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.099" endtime="20230223 13:53:38.100"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.100" endtime="20230223 13:53:38.101"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.100" endtime="20230223 13:53:38.101"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.100" endtime="20230223 13:53:38.101"/>
</if>
<msg timestamp="20230223 13:53:38.101" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.098" endtime="20230223 13:53:38.101"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.102" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.102" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.102" endtime="20230223 13:53:38.102"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.103" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.102" endtime="20230223 13:53:38.103"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.104" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.103" endtime="20230223 13:53:38.104"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.104" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.104" endtime="20230223 13:53:38.104"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.105" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.105" endtime="20230223 13:53:38.105"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.105" endtime="20230223 13:53:38.106"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.106" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.106" endtime="20230223 13:53:38.107"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.106" endtime="20230223 13:53:38.107"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.108" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.107" endtime="20230223 13:53:38.108"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.107" endtime="20230223 13:53:38.108"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.109" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.109" endtime="20230223 13:53:38.109"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.109" endtime="20230223 13:53:38.109"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.110" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.110" endtime="20230223 13:53:38.110"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.110" endtime="20230223 13:53:38.111"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.111" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.111" endtime="20230223 13:53:38.111"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.111" endtime="20230223 13:53:38.112"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.105" endtime="20230223 13:53:38.112"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.113" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.112" endtime="20230223 13:53:38.113"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.114" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.113" endtime="20230223 13:53:38.114"/>
</kw>
<msg timestamp="20230223 13:53:38.114" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.101" endtime="20230223 13:53:38.114"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.115" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.115" endtime="20230223 13:53:38.115"/>
</kw>
<msg timestamp="20230223 13:53:38.116" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.081" endtime="20230223 13:53:38.116"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.117" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.117" endtime="20230223 13:53:38.117"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.118" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.118" endtime="20230223 13:53:38.118"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.119" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.119" endtime="20230223 13:53:38.119"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.120" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.120" endtime="20230223 13:53:38.120"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.124" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.124" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9000.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.124" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.122" endtime="20230223 13:53:38.124"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.126" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.125" endtime="20230223 13:53:38.126"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.127" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.127" endtime="20230223 13:53:38.127"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.121" endtime="20230223 13:53:38.128"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.128" endtime="20230223 13:53:38.128"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.128" endtime="20230223 13:53:38.128"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.121" endtime="20230223 13:53:38.128"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.128" endtime="20230223 13:53:38.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.129" endtime="20230223 13:53:38.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.129" endtime="20230223 13:53:38.129"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.117" endtime="20230223 13:53:38.129"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.061" endtime="20230223 13:53:38.130"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.132" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.132" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:37 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.130" endtime="20230223 13:53:38.133"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.061" endtime="20230223 13:53:38.133"/>
</test>
<test id="s1-s5-t18" name="Valid data gender:f" line="55">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderf}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.141" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'f', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.141" endtime="20230223 13:53:38.141"/>
</kw>
<msg timestamp="20230223 13:53:38.142" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'f', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.141" endtime="20230223 13:53:38.142"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.144" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.143" endtime="20230223 13:53:38.144"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.145" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.145" endtime="20230223 13:53:38.145"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.149" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "f", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.149" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.149" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.146" endtime="20230223 13:53:38.149"/>
</kw>
<msg timestamp="20230223 13:53:38.150" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.143" endtime="20230223 13:53:38.150"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.152" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.151" endtime="20230223 13:53:38.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.153" endtime="20230223 13:53:38.153"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.151" endtime="20230223 13:53:38.153"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.156" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.156" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.156" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.153" endtime="20230223 13:53:38.156"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.158" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.157" endtime="20230223 13:53:38.158"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.159" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.159" endtime="20230223 13:53:38.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.160" endtime="20230223 13:53:38.160"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.153" endtime="20230223 13:53:38.160"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.161" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.161" endtime="20230223 13:53:38.161"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.162" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.162" endtime="20230223 13:53:38.162"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.163" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.163" endtime="20230223 13:53:38.163"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.164" level="INFO">${item_gender} = f</msg>
<status status="PASS" starttime="20230223 13:53:38.163" endtime="20230223 13:53:38.164"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.165" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.165" endtime="20230223 13:53:38.165"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.166" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.165" endtime="20230223 13:53:38.166"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.167" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.167" endtime="20230223 13:53:38.167"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.168" endtime="20230223 13:53:38.168"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.168" endtime="20230223 13:53:38.168"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.168" endtime="20230223 13:53:38.169"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.168" endtime="20230223 13:53:38.169"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.169" endtime="20230223 13:53:38.169"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.169" endtime="20230223 13:53:38.169"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.170" level="INFO">${gender_bonus} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.169" endtime="20230223 13:53:38.170"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.169" endtime="20230223 13:53:38.170"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.170" endtime="20230223 13:53:38.170"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.170" endtime="20230223 13:53:38.171"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.168" endtime="20230223 13:53:38.171"/>
</if>
<msg timestamp="20230223 13:53:38.171" level="INFO">${gender_bonus} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.167" endtime="20230223 13:53:38.171"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.172" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.172" endtime="20230223 13:53:38.172"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.172" endtime="20230223 13:53:38.173"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.173" endtime="20230223 13:53:38.173"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.173" endtime="20230223 13:53:38.173"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.172" endtime="20230223 13:53:38.174"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.174" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.174" endtime="20230223 13:53:38.174"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.174" endtime="20230223 13:53:38.175"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.175" endtime="20230223 13:53:38.175"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.175" endtime="20230223 13:53:38.175"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.176" endtime="20230223 13:53:38.176"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.176" endtime="20230223 13:53:38.176"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.176" endtime="20230223 13:53:38.176"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.176" endtime="20230223 13:53:38.176"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.177" endtime="20230223 13:53:38.177"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.177" endtime="20230223 13:53:38.177"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.174" endtime="20230223 13:53:38.177"/>
</if>
<msg timestamp="20230223 13:53:38.177" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.171" endtime="20230223 13:53:38.177"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.179" level="INFO">${Tax_Relief} = 9500.0</msg>
<status status="PASS" starttime="20230223 13:53:38.178" endtime="20230223 13:53:38.179"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.180" level="INFO">${Tax_Relief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.179" endtime="20230223 13:53:38.180"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.181" endtime="20230223 13:53:38.181"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.180" endtime="20230223 13:53:38.181"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.180" endtime="20230223 13:53:38.181"/>
</if>
<msg timestamp="20230223 13:53:38.181" level="INFO">${taxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.178" endtime="20230223 13:53:38.181"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.182" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.183" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.182" endtime="20230223 13:53:38.183"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.184" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.183" endtime="20230223 13:53:38.184"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.185" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.184" endtime="20230223 13:53:38.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.186" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.185" endtime="20230223 13:53:38.186"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.187" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.187" endtime="20230223 13:53:38.187"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.187" endtime="20230223 13:53:38.188"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.189" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.188" endtime="20230223 13:53:38.189"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.188" endtime="20230223 13:53:38.189"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.190" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.190" endtime="20230223 13:53:38.190"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.190" endtime="20230223 13:53:38.191"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.191" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.191" endtime="20230223 13:53:38.191"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.191" endtime="20230223 13:53:38.192"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.193" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.192" endtime="20230223 13:53:38.193"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.192" endtime="20230223 13:53:38.193"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.194" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.194" endtime="20230223 13:53:38.194"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.193" endtime="20230223 13:53:38.194"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.186" endtime="20230223 13:53:38.194"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.195" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.195" endtime="20230223 13:53:38.195"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.196" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.195" endtime="20230223 13:53:38.196"/>
</kw>
<msg timestamp="20230223 13:53:38.197" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.182" endtime="20230223 13:53:38.197"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.198" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.197" endtime="20230223 13:53:38.198"/>
</kw>
<msg timestamp="20230223 13:53:38.198" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.160" endtime="20230223 13:53:38.198"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.200" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.200" endtime="20230223 13:53:38.200"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.201" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.201" endtime="20230223 13:53:38.201"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.202" level="INFO">${expectedTaxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.202" endtime="20230223 13:53:38.202"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.203" level="INFO">${expectedTaxRelief} = 9500.00</msg>
<status status="PASS" starttime="20230223 13:53:38.203" endtime="20230223 13:53:38.203"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.206" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.206" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"9500.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.206" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.204" endtime="20230223 13:53:38.206"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.209" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9500.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.207" endtime="20230223 13:53:38.209"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.210" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '9500.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.209" endtime="20230223 13:53:38.210"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.204" endtime="20230223 13:53:38.210"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.211" endtime="20230223 13:53:38.211"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.210" endtime="20230223 13:53:38.211"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.204" endtime="20230223 13:53:38.211"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.211" endtime="20230223 13:53:38.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.211" endtime="20230223 13:53:38.211"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.212" endtime="20230223 13:53:38.212"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.199" endtime="20230223 13:53:38.212"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.140" endtime="20230223 13:53:38.212"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.215" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.215" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.212" endtime="20230223 13:53:38.215"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.140" endtime="20230223 13:53:38.216"/>
</test>
<test id="s1-s5-t19" name="Invalid data invalid gender:W" line="57">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderW}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.224" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.224" endtime="20230223 13:53:38.224"/>
</kw>
<msg timestamp="20230223 13:53:38.225" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'W', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.223" endtime="20230223 13:53:38.225"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.227" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.226" endtime="20230223 13:53:38.227"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.228" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.228" endtime="20230223 13:53:38.228"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.232" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "W", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.232" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.232" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20230223 13:53:38.229" endtime="20230223 13:53:38.233"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.226" endtime="20230223 13:53:38.234"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:38.234" endtime="20230223 13:53:38.234"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<status status="NOT RUN" starttime="20230223 13:53:38.234" endtime="20230223 13:53:38.234"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<status status="NOT RUN" starttime="20230223 13:53:38.234" endtime="20230223 13:53:38.235"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<status status="NOT RUN" starttime="20230223 13:53:38.235" endtime="20230223 13:53:38.235"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.223" endtime="20230223 13:53:38.235"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.238" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.238" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.235" endtime="20230223 13:53:38.238"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:38.222" endtime="20230223 13:53:38.239">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s5-t20" name="Invalid data invalid gender:Male" line="59">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderMale}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.247" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.247" endtime="20230223 13:53:38.247"/>
</kw>
<msg timestamp="20230223 13:53:38.248" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Male', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.246" endtime="20230223 13:53:38.248"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.249" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.249" endtime="20230223 13:53:38.249"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.250" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.250" endtime="20230223 13:53:38.250"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.256" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "Male", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.256" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:38.254+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:38.256" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.250" endtime="20230223 13:53:38.256"/>
</kw>
<msg timestamp="20230223 13:53:38.257" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.248" endtime="20230223 13:53:38.257"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.259" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.258" endtime="20230223 13:53:38.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.260" endtime="20230223 13:53:38.260"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.258" endtime="20230223 13:53:38.260"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.263" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.263" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.263" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.261" endtime="20230223 13:53:38.263"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.265" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.264" endtime="20230223 13:53:38.265"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.266" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.266" endtime="20230223 13:53:38.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.266" endtime="20230223 13:53:38.267"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.261" endtime="20230223 13:53:38.267"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.267" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.267" endtime="20230223 13:53:38.267"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.268" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.268" endtime="20230223 13:53:38.268"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.269" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.269" endtime="20230223 13:53:38.269"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.270" level="INFO">${item_gender} = Male</msg>
<status status="PASS" starttime="20230223 13:53:38.269" endtime="20230223 13:53:38.270"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.271" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.270" endtime="20230223 13:53:38.271"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.272" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.271" endtime="20230223 13:53:38.272"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.272" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.272" endtime="20230223 13:53:38.272"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.273" endtime="20230223 13:53:38.273"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.273" endtime="20230223 13:53:38.274"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.274" endtime="20230223 13:53:38.274"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.274" endtime="20230223 13:53:38.274"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.274" endtime="20230223 13:53:38.274"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.274" endtime="20230223 13:53:38.274"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.275" endtime="20230223 13:53:38.275"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.274" endtime="20230223 13:53:38.275"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.275" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.275" endtime="20230223 13:53:38.275"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.275" endtime="20230223 13:53:38.276"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.273" endtime="20230223 13:53:38.276"/>
</if>
<msg timestamp="20230223 13:53:38.276" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.273" endtime="20230223 13:53:38.276"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.277" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.277" endtime="20230223 13:53:38.277"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.277" endtime="20230223 13:53:38.278"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.278" endtime="20230223 13:53:38.278"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.278" endtime="20230223 13:53:38.278"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.277" endtime="20230223 13:53:38.278"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.278" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.278" endtime="20230223 13:53:38.278"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.278" endtime="20230223 13:53:38.279"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.279" endtime="20230223 13:53:38.279"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.279" endtime="20230223 13:53:38.279"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.279" endtime="20230223 13:53:38.280"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.279" endtime="20230223 13:53:38.280"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.280" endtime="20230223 13:53:38.280"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.280" endtime="20230223 13:53:38.280"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.280" endtime="20230223 13:53:38.280"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.280" endtime="20230223 13:53:38.280"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.278" endtime="20230223 13:53:38.280"/>
</if>
<msg timestamp="20230223 13:53:38.281" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.276" endtime="20230223 13:53:38.281"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.282" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:38.281" endtime="20230223 13:53:38.282"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.282" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.282" endtime="20230223 13:53:38.282"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.283" endtime="20230223 13:53:38.283"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.283" endtime="20230223 13:53:38.283"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.283" endtime="20230223 13:53:38.283"/>
</if>
<msg timestamp="20230223 13:53:38.284" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.281" endtime="20230223 13:53:38.284"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.285" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.285" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.284" endtime="20230223 13:53:38.285"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.286" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.285" endtime="20230223 13:53:38.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.286" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.286" endtime="20230223 13:53:38.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.287" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.287" endtime="20230223 13:53:38.287"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.288" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.288" endtime="20230223 13:53:38.288"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.288" endtime="20230223 13:53:38.289"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.289" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.289" endtime="20230223 13:53:38.289"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.289" endtime="20230223 13:53:38.290"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.290" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.290" endtime="20230223 13:53:38.290"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.290" endtime="20230223 13:53:38.291"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.291" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.291" endtime="20230223 13:53:38.291"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.291" endtime="20230223 13:53:38.292"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.292" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.292" endtime="20230223 13:53:38.292"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.292" endtime="20230223 13:53:38.292"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.293" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.293" endtime="20230223 13:53:38.293"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.293" endtime="20230223 13:53:38.293"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.288" endtime="20230223 13:53:38.294"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.294" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.294" endtime="20230223 13:53:38.294"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.295" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.295" endtime="20230223 13:53:38.295"/>
</kw>
<msg timestamp="20230223 13:53:38.295" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.284" endtime="20230223 13:53:38.295"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.296" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.296" endtime="20230223 13:53:38.296"/>
</kw>
<msg timestamp="20230223 13:53:38.297" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.267" endtime="20230223 13:53:38.297"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.298" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.298" endtime="20230223 13:53:38.298"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.298" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.298" endtime="20230223 13:53:38.299"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.299" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.299" endtime="20230223 13:53:38.299"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.300" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.300" endtime="20230223 13:53:38.300"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.303" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.303" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.303" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.301" endtime="20230223 13:53:38.303"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.305" level="INFO">${responsebody_contents} = []</msg>
<status status="PASS" starttime="20230223 13:53:38.304" endtime="20230223 13:53:38.305"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.306" level="FAIL">List '${responsebody_contents}' has no item in index 0.</msg>
<status status="FAIL" starttime="20230223 13:53:38.306" endtime="20230223 13:53:38.306"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.301" endtime="20230223 13:53:38.306"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:38.307" level="INFO">Execution passed with message:
msg=Response body is empty</msg>
<status status="PASS" starttime="20230223 13:53:38.307" endtime="20230223 13:53:38.307"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.307" endtime="20230223 13:53:38.307"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.301" endtime="20230223 13:53:38.308"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.308" endtime="20230223 13:53:38.308"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.308" endtime="20230223 13:53:38.308"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.308" endtime="20230223 13:53:38.308"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.297" endtime="20230223 13:53:38.308"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.246" endtime="20230223 13:53:38.308"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.311" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.311" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.309" endtime="20230223 13:53:38.311"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.245" endtime="20230223 13:53:38.312">msg=Response body is empty</status>
</test>
<test id="s1-s5-t21" name="Invalid data invalid gender:Female" line="61">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderFemale}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.319" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Female', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.319" endtime="20230223 13:53:38.319"/>
</kw>
<msg timestamp="20230223 13:53:38.320" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'Female', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.318" endtime="20230223 13:53:38.320"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.321" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.320" endtime="20230223 13:53:38.321"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.322" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.321" endtime="20230223 13:53:38.322"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.328" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '119'} 
 body=b'{"birthday": "01012007", "gender": "Female", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.328" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:38.326+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:38.328" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.322" endtime="20230223 13:53:38.328"/>
</kw>
<msg timestamp="20230223 13:53:38.329" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.320" endtime="20230223 13:53:38.329"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.331" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.330" endtime="20230223 13:53:38.331"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.331" endtime="20230223 13:53:38.331"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.329" endtime="20230223 13:53:38.332"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.334" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.334" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.334" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.332" endtime="20230223 13:53:38.334"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.336" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.335" endtime="20230223 13:53:38.336"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.337" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.337" endtime="20230223 13:53:38.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.338" endtime="20230223 13:53:38.338"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.332" endtime="20230223 13:53:38.338"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.339" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.338" endtime="20230223 13:53:38.339"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.340" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.339" endtime="20230223 13:53:38.340"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.340" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.340" endtime="20230223 13:53:38.340"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.341" level="INFO">${item_gender} = Female</msg>
<status status="PASS" starttime="20230223 13:53:38.341" endtime="20230223 13:53:38.341"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.342" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.342" endtime="20230223 13:53:38.342"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.343" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.343" endtime="20230223 13:53:38.343"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.343" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.343" endtime="20230223 13:53:38.344"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.344" endtime="20230223 13:53:38.345"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.344" endtime="20230223 13:53:38.345"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.345" endtime="20230223 13:53:38.345"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.345" endtime="20230223 13:53:38.345"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.345" endtime="20230223 13:53:38.345"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.345" endtime="20230223 13:53:38.346"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.346" endtime="20230223 13:53:38.346"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.346" endtime="20230223 13:53:38.346"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.346" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.346" endtime="20230223 13:53:38.346"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.346" endtime="20230223 13:53:38.347"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.344" endtime="20230223 13:53:38.347"/>
</if>
<msg timestamp="20230223 13:53:38.347" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.344" endtime="20230223 13:53:38.347"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.348" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.348" endtime="20230223 13:53:38.349"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.348" endtime="20230223 13:53:38.349"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.349" endtime="20230223 13:53:38.349"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.349" endtime="20230223 13:53:38.349"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.348" endtime="20230223 13:53:38.350"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.350" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.350" endtime="20230223 13:53:38.350"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.350" endtime="20230223 13:53:38.350"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.351" endtime="20230223 13:53:38.351"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.351" endtime="20230223 13:53:38.351"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.351" endtime="20230223 13:53:38.351"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.351" endtime="20230223 13:53:38.351"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.352" endtime="20230223 13:53:38.352"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.351" endtime="20230223 13:53:38.352"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.352" endtime="20230223 13:53:38.352"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.352" endtime="20230223 13:53:38.352"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.350" endtime="20230223 13:53:38.352"/>
</if>
<msg timestamp="20230223 13:53:38.352" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.348" endtime="20230223 13:53:38.352"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.354" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:38.353" endtime="20230223 13:53:38.354"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.354" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.354" endtime="20230223 13:53:38.354"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.355" endtime="20230223 13:53:38.355"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.355" endtime="20230223 13:53:38.355"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.355" endtime="20230223 13:53:38.355"/>
</if>
<msg timestamp="20230223 13:53:38.355" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.353" endtime="20230223 13:53:38.355"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.356" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.356" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.356" endtime="20230223 13:53:38.357"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.357" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.357" endtime="20230223 13:53:38.357"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.358" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.358" endtime="20230223 13:53:38.358"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.359" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.359" endtime="20230223 13:53:38.359"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.360" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.360" endtime="20230223 13:53:38.360"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.359" endtime="20230223 13:53:38.360"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.361" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.361" endtime="20230223 13:53:38.361"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.361" endtime="20230223 13:53:38.361"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.362" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.362" endtime="20230223 13:53:38.362"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.361" endtime="20230223 13:53:38.362"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.363" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.363" endtime="20230223 13:53:38.363"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.363" endtime="20230223 13:53:38.363"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.364" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.364" endtime="20230223 13:53:38.364"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.363" endtime="20230223 13:53:38.364"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.365" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.365" endtime="20230223 13:53:38.365"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.365" endtime="20230223 13:53:38.366"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.359" endtime="20230223 13:53:38.366"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.366" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.366" endtime="20230223 13:53:38.366"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.367" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.367" endtime="20230223 13:53:38.367"/>
</kw>
<msg timestamp="20230223 13:53:38.368" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.356" endtime="20230223 13:53:38.368"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.368" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.368" endtime="20230223 13:53:38.368"/>
</kw>
<msg timestamp="20230223 13:53:38.369" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.338" endtime="20230223 13:53:38.369"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.370" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.370" endtime="20230223 13:53:38.370"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.371" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.371" endtime="20230223 13:53:38.371"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.372" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.371" endtime="20230223 13:53:38.372"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.373" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.372" endtime="20230223 13:53:38.373"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.376" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.376" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.376" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.373" endtime="20230223 13:53:38.376"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.378" level="INFO">${responsebody_contents} = []</msg>
<status status="PASS" starttime="20230223 13:53:38.377" endtime="20230223 13:53:38.378"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.379" level="FAIL">List '${responsebody_contents}' has no item in index 0.</msg>
<status status="FAIL" starttime="20230223 13:53:38.379" endtime="20230223 13:53:38.379"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.373" endtime="20230223 13:53:38.379"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:38.380" level="INFO">Execution passed with message:
msg=Response body is empty</msg>
<status status="PASS" starttime="20230223 13:53:38.380" endtime="20230223 13:53:38.380"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.380" endtime="20230223 13:53:38.381"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.373" endtime="20230223 13:53:38.381"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.381" endtime="20230223 13:53:38.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.381" endtime="20230223 13:53:38.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.381" endtime="20230223 13:53:38.382"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.370" endtime="20230223 13:53:38.382"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.318" endtime="20230223 13:53:38.382"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.385" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.385" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.382" endtime="20230223 13:53:38.385"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.317" endtime="20230223 13:53:38.386">msg=Response body is empty</status>
</test>
<test id="s1-s5-t22" name="Invalid data gender is digits" line="63">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderNum}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.393" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.393" endtime="20230223 13:53:38.393"/>
</kw>
<msg timestamp="20230223 13:53:38.394" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '123', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.393" endtime="20230223 13:53:38.394"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.395" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.395" endtime="20230223 13:53:38.395"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.396" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.396" endtime="20230223 13:53:38.396"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.403" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"birthday": "01012007", "gender": "123", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.403" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:38.401+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:38.403" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.397" endtime="20230223 13:53:38.403"/>
</kw>
<msg timestamp="20230223 13:53:38.404" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.395" endtime="20230223 13:53:38.404"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.406" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.405" endtime="20230223 13:53:38.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.406" endtime="20230223 13:53:38.407"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.404" endtime="20230223 13:53:38.407"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.410" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.410" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.410" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.407" endtime="20230223 13:53:38.410"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.412" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.411" endtime="20230223 13:53:38.412"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.413" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.412" endtime="20230223 13:53:38.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.413" endtime="20230223 13:53:38.413"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.407" endtime="20230223 13:53:38.414"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.414" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.414" endtime="20230223 13:53:38.414"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.415" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.415" endtime="20230223 13:53:38.415"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.416" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.415" endtime="20230223 13:53:38.416"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.416" level="INFO">${item_gender} = 123</msg>
<status status="PASS" starttime="20230223 13:53:38.416" endtime="20230223 13:53:38.417"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.417" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.417" endtime="20230223 13:53:38.417"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.418" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.418" endtime="20230223 13:53:38.418"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.419" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.419" endtime="20230223 13:53:38.419"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.420"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.420"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.420"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.420"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.421" endtime="20230223 13:53:38.421"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.421"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.421" endtime="20230223 13:53:38.421"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.421" endtime="20230223 13:53:38.421"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.422" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.421" endtime="20230223 13:53:38.422"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.421" endtime="20230223 13:53:38.422"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.420" endtime="20230223 13:53:38.422"/>
</if>
<msg timestamp="20230223 13:53:38.422" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.419" endtime="20230223 13:53:38.422"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.423" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.423" endtime="20230223 13:53:38.423"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.423" endtime="20230223 13:53:38.424"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.424" endtime="20230223 13:53:38.424"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.424" endtime="20230223 13:53:38.424"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.423" endtime="20230223 13:53:38.424"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.425" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.425" endtime="20230223 13:53:38.425"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.424" endtime="20230223 13:53:38.425"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.426" endtime="20230223 13:53:38.426"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.425" endtime="20230223 13:53:38.426"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.426" endtime="20230223 13:53:38.426"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.426" endtime="20230223 13:53:38.426"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.426" endtime="20230223 13:53:38.426"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.426" endtime="20230223 13:53:38.426"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.427" endtime="20230223 13:53:38.427"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.427" endtime="20230223 13:53:38.427"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.424" endtime="20230223 13:53:38.427"/>
</if>
<msg timestamp="20230223 13:53:38.427" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.423" endtime="20230223 13:53:38.427"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.428" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:38.428" endtime="20230223 13:53:38.428"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.429" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.429" endtime="20230223 13:53:38.429"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.430" endtime="20230223 13:53:38.430"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.430" endtime="20230223 13:53:38.430"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.430" endtime="20230223 13:53:38.430"/>
</if>
<msg timestamp="20230223 13:53:38.430" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.428" endtime="20230223 13:53:38.430"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.431" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.431" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.431" endtime="20230223 13:53:38.431"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.432" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.432" endtime="20230223 13:53:38.432"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.433" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.432" endtime="20230223 13:53:38.433"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.433" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.433" endtime="20230223 13:53:38.433"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.435" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.435" endtime="20230223 13:53:38.435"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.434" endtime="20230223 13:53:38.436"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.436" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.436" endtime="20230223 13:53:38.436"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.436" endtime="20230223 13:53:38.437"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.437" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.437" endtime="20230223 13:53:38.437"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.437" endtime="20230223 13:53:38.438"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.438" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.438" endtime="20230223 13:53:38.438"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.438" endtime="20230223 13:53:38.439"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.439" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.439" endtime="20230223 13:53:38.439"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.439" endtime="20230223 13:53:38.440"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.440" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.440" endtime="20230223 13:53:38.440"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.440" endtime="20230223 13:53:38.441"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.434" endtime="20230223 13:53:38.441"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.441" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.441" endtime="20230223 13:53:38.441"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.442" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.442" endtime="20230223 13:53:38.442"/>
</kw>
<msg timestamp="20230223 13:53:38.443" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.431" endtime="20230223 13:53:38.443"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.443" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.443" endtime="20230223 13:53:38.443"/>
</kw>
<msg timestamp="20230223 13:53:38.444" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.414" endtime="20230223 13:53:38.444"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.445" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.445" endtime="20230223 13:53:38.445"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.446" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.446" endtime="20230223 13:53:38.446"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.446" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.446" endtime="20230223 13:53:38.446"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.447" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.447" endtime="20230223 13:53:38.447"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.450" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.450" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.450" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.448" endtime="20230223 13:53:38.450"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.452" level="INFO">${responsebody_contents} = []</msg>
<status status="PASS" starttime="20230223 13:53:38.451" endtime="20230223 13:53:38.452"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.453" level="FAIL">List '${responsebody_contents}' has no item in index 0.</msg>
<status status="FAIL" starttime="20230223 13:53:38.453" endtime="20230223 13:53:38.453"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.448" endtime="20230223 13:53:38.454"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:38.454" level="INFO">Execution passed with message:
msg=Response body is empty</msg>
<status status="PASS" starttime="20230223 13:53:38.454" endtime="20230223 13:53:38.454"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.454" endtime="20230223 13:53:38.455"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.448" endtime="20230223 13:53:38.455"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.455" endtime="20230223 13:53:38.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.455" endtime="20230223 13:53:38.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.455" endtime="20230223 13:53:38.455"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.445" endtime="20230223 13:53:38.455"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.392" endtime="20230223 13:53:38.456"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.458" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.458" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.456" endtime="20230223 13:53:38.458"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.392" endtime="20230223 13:53:38.459">msg=Response body is empty</status>
</test>
<test id="s1-s5-t23" name="Invalid data gender is special char" line="65">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${genderSpecialChar}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_invalid}</arg>
<arg>${empty}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.467" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.466" endtime="20230223 13:53:38.467"/>
</kw>
<msg timestamp="20230223 13:53:38.467" level="INFO">${request_body} = {'birthday': '01012007', 'gender': '!@#', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '1000'}</msg>
<status status="PASS" starttime="20230223 13:53:38.466" endtime="20230223 13:53:38.467"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.468" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.468" endtime="20230223 13:53:38.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.469" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.469" endtime="20230223 13:53:38.469"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.475" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body=b'{"birthday": "01012007", "gender": "!@#", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "1000"}' 
 </msg>
<msg timestamp="20230223 13:53:38.475" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT', 'Connection': 'close'} 
 body={"timestamp":"2023-02-23T05:53:38.474+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20230223 13:53:38.475" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.470" endtime="20230223 13:53:38.475"/>
</kw>
<msg timestamp="20230223 13:53:38.476" level="INFO">${response} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.468" endtime="20230223 13:53:38.477"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.479" level="INFO">${actual_status_code} = 500</msg>
<status status="PASS" starttime="20230223 13:53:38.478" endtime="20230223 13:53:38.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.479" endtime="20230223 13:53:38.480"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.477" endtime="20230223 13:53:38.480"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.483" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.483" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.483" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.480" endtime="20230223 13:53:38.483"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.485" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.484" endtime="20230223 13:53:38.485"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.485" level="INFO">${number_of_rows_from_db} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.485" endtime="20230223 13:53:38.486"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.486" endtime="20230223 13:53:38.486"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.480" endtime="20230223 13:53:38.487"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.487" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.487" endtime="20230223 13:53:38.487"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.488" level="INFO">${item_tax} = 1000</msg>
<status status="PASS" starttime="20230223 13:53:38.488" endtime="20230223 13:53:38.488"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.489" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.489" endtime="20230223 13:53:38.489"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.490" level="INFO">${item_gender} = !@#</msg>
<status status="PASS" starttime="20230223 13:53:38.490" endtime="20230223 13:53:38.490"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.491" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.491" endtime="20230223 13:53:38.491"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.492" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.491" endtime="20230223 13:53:38.492"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.492" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.492" endtime="20230223 13:53:38.492"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.493" endtime="20230223 13:53:38.493"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.493" endtime="20230223 13:53:38.494"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.494" endtime="20230223 13:53:38.494"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.494" endtime="20230223 13:53:38.494"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.494" endtime="20230223 13:53:38.494"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.494" endtime="20230223 13:53:38.495"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.495" endtime="20230223 13:53:38.495"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.495" endtime="20230223 13:53:38.495"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.495" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.495" endtime="20230223 13:53:38.495"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.495" endtime="20230223 13:53:38.496"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.493" endtime="20230223 13:53:38.496"/>
</if>
<msg timestamp="20230223 13:53:38.496" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.493" endtime="20230223 13:53:38.496"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.497" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.497" endtime="20230223 13:53:38.497"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.497" endtime="20230223 13:53:38.498"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.498" endtime="20230223 13:53:38.498"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.498" endtime="20230223 13:53:38.498"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.497" endtime="20230223 13:53:38.498"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.499" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.499" endtime="20230223 13:53:38.499"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.498" endtime="20230223 13:53:38.499"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.499" endtime="20230223 13:53:38.500"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.499" endtime="20230223 13:53:38.500"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.500" endtime="20230223 13:53:38.500"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.500" endtime="20230223 13:53:38.500"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.500" endtime="20230223 13:53:38.500"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.500" endtime="20230223 13:53:38.500"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.501" endtime="20230223 13:53:38.501"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.501" endtime="20230223 13:53:38.501"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.498" endtime="20230223 13:53:38.501"/>
</if>
<msg timestamp="20230223 13:53:38.501" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.497" endtime="20230223 13:53:38.501"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.502" level="INFO">${Tax_Relief} = 9000.0</msg>
<status status="PASS" starttime="20230223 13:53:38.502" endtime="20230223 13:53:38.502"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.503" level="INFO">${Tax_Relief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.503" endtime="20230223 13:53:38.503"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.504" endtime="20230223 13:53:38.504"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.504" endtime="20230223 13:53:38.504"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.503" endtime="20230223 13:53:38.504"/>
</if>
<msg timestamp="20230223 13:53:38.504" level="INFO">${taxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.502" endtime="20230223 13:53:38.504"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.505" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.505" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.505" endtime="20230223 13:53:38.505"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.506" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.506" endtime="20230223 13:53:38.506"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.507" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.506" endtime="20230223 13:53:38.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.507" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.507" endtime="20230223 13:53:38.507"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.508" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.508" endtime="20230223 13:53:38.508"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.508" endtime="20230223 13:53:38.509"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.509" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.509" endtime="20230223 13:53:38.509"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.509" endtime="20230223 13:53:38.510"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.510" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.510" endtime="20230223 13:53:38.510"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.510" endtime="20230223 13:53:38.511"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.511" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.511" endtime="20230223 13:53:38.511"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.511" endtime="20230223 13:53:38.512"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.512" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.512" endtime="20230223 13:53:38.512"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.512" endtime="20230223 13:53:38.513"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.513" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.513" endtime="20230223 13:53:38.513"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.513" endtime="20230223 13:53:38.514"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.508" endtime="20230223 13:53:38.514"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.514" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.514" endtime="20230223 13:53:38.514"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.515" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.515" endtime="20230223 13:53:38.515"/>
</kw>
<msg timestamp="20230223 13:53:38.516" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.505" endtime="20230223 13:53:38.516"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.517" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.516" endtime="20230223 13:53:38.517"/>
</kw>
<msg timestamp="20230223 13:53:38.517" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '9000.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.487" endtime="20230223 13:53:38.517"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.518" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.518" endtime="20230223 13:53:38.518"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.519" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.519" endtime="20230223 13:53:38.519"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.520" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.519" endtime="20230223 13:53:38.520"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.520" level="INFO">${expectedTaxRelief} = 9000.00</msg>
<status status="PASS" starttime="20230223 13:53:38.520" endtime="20230223 13:53:38.520"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.523" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.523" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[] 
 </msg>
<msg timestamp="20230223 13:53:38.523" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.521" endtime="20230223 13:53:38.524"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.525" level="INFO">${responsebody_contents} = []</msg>
<status status="PASS" starttime="20230223 13:53:38.525" endtime="20230223 13:53:38.526"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.526" level="FAIL">List '${responsebody_contents}' has no item in index 0.</msg>
<status status="FAIL" starttime="20230223 13:53:38.526" endtime="20230223 13:53:38.526"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.521" endtime="20230223 13:53:38.527"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230223 13:53:38.527" level="INFO">Execution passed with message:
msg=Response body is empty</msg>
<status status="PASS" starttime="20230223 13:53:38.527" endtime="20230223 13:53:38.527"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.527" endtime="20230223 13:53:38.528"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.521" endtime="20230223 13:53:38.528"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.528" endtime="20230223 13:53:38.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.528" endtime="20230223 13:53:38.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.529" endtime="20230223 13:53:38.529"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.518" endtime="20230223 13:53:38.529"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.466" endtime="20230223 13:53:38.529"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.531" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.531" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.529" endtime="20230223 13:53:38.531"/>
</kw>
<tag>Functional</tag>
<tag>GenderFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.465" endtime="20230223 13:53:38.532">msg=Response body is empty</status>
</test>
<test id="s1-s5-t24" name="Valid data relief with decimal .00" line="68">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.00}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.540" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9900.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.540" endtime="20230223 13:53:38.540"/>
</kw>
<msg timestamp="20230223 13:53:38.541" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9900.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.540" endtime="20230223 13:53:38.541"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.542" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.542" endtime="20230223 13:53:38.542"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.543" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.543" endtime="20230223 13:53:38.543"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.547" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9900.00"}' 
 </msg>
<msg timestamp="20230223 13:53:38.547" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.547" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.544" endtime="20230223 13:53:38.547"/>
</kw>
<msg timestamp="20230223 13:53:38.548" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.542" endtime="20230223 13:53:38.548"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.551" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.550" endtime="20230223 13:53:38.551"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.552" endtime="20230223 13:53:38.552"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.549" endtime="20230223 13:53:38.552"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.555" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.555" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.553" endtime="20230223 13:53:38.555"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.557" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.556" endtime="20230223 13:53:38.557"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.558" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.558" endtime="20230223 13:53:38.558"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.559" endtime="20230223 13:53:38.560"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.552" endtime="20230223 13:53:38.560"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.561" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.560" endtime="20230223 13:53:38.561"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.562" level="INFO">${item_tax} = 9900.00</msg>
<status status="PASS" starttime="20230223 13:53:38.561" endtime="20230223 13:53:38.562"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.563" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.562" endtime="20230223 13:53:38.563"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.564" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.563" endtime="20230223 13:53:38.564"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.564" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.564" endtime="20230223 13:53:38.564"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.565" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.565" endtime="20230223 13:53:38.565"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.566" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.566" endtime="20230223 13:53:38.566"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.567" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.567" endtime="20230223 13:53:38.567"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.567" endtime="20230223 13:53:38.568"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.568" endtime="20230223 13:53:38.568"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.568" endtime="20230223 13:53:38.568"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.569"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.569"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.569"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.569"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.570"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.569" endtime="20230223 13:53:38.570"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.567" endtime="20230223 13:53:38.570"/>
</if>
<msg timestamp="20230223 13:53:38.570" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.567" endtime="20230223 13:53:38.570"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.571" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.571" endtime="20230223 13:53:38.571"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.571" endtime="20230223 13:53:38.572"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.572" endtime="20230223 13:53:38.572"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.572" endtime="20230223 13:53:38.572"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.571" endtime="20230223 13:53:38.572"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.573" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.573" endtime="20230223 13:53:38.573"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.572" endtime="20230223 13:53:38.574"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.574" endtime="20230223 13:53:38.574"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.574" endtime="20230223 13:53:38.574"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.574" endtime="20230223 13:53:38.574"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.574" endtime="20230223 13:53:38.574"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.575" endtime="20230223 13:53:38.575"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.575" endtime="20230223 13:53:38.575"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.575" endtime="20230223 13:53:38.575"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.575" endtime="20230223 13:53:38.575"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.572" endtime="20230223 13:53:38.575"/>
</if>
<msg timestamp="20230223 13:53:38.576" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.570" endtime="20230223 13:53:38.576"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.577" level="INFO">${Tax_Relief} = 100.0</msg>
<status status="PASS" starttime="20230223 13:53:38.577" endtime="20230223 13:53:38.577"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.578" level="INFO">${Tax_Relief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.578" endtime="20230223 13:53:38.578"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.579" endtime="20230223 13:53:38.579"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.579" endtime="20230223 13:53:38.579"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.579" endtime="20230223 13:53:38.579"/>
</if>
<msg timestamp="20230223 13:53:38.579" level="INFO">${taxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.576" endtime="20230223 13:53:38.579"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.580" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.580" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.580" endtime="20230223 13:53:38.580"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.581" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.581" endtime="20230223 13:53:38.581"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.582" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.582" endtime="20230223 13:53:38.582"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.583" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.583" endtime="20230223 13:53:38.583"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.584" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.584" endtime="20230223 13:53:38.584"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.584" endtime="20230223 13:53:38.585"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.585" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.585" endtime="20230223 13:53:38.585"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.585" endtime="20230223 13:53:38.586"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.586" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.586" endtime="20230223 13:53:38.586"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.586" endtime="20230223 13:53:38.587"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.588" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.587" endtime="20230223 13:53:38.588"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.587" endtime="20230223 13:53:38.588"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.589" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.588" endtime="20230223 13:53:38.589"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.588" endtime="20230223 13:53:38.589"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.590" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.589" endtime="20230223 13:53:38.590"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.589" endtime="20230223 13:53:38.590"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.584" endtime="20230223 13:53:38.590"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.591" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.590" endtime="20230223 13:53:38.591"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.591" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.591" endtime="20230223 13:53:38.591"/>
</kw>
<msg timestamp="20230223 13:53:38.592" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.580" endtime="20230223 13:53:38.592"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.593" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.593" endtime="20230223 13:53:38.593"/>
</kw>
<msg timestamp="20230223 13:53:38.594" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.560" endtime="20230223 13:53:38.594"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.595" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.595" endtime="20230223 13:53:38.595"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.596" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.596" endtime="20230223 13:53:38.596"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.597" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.596" endtime="20230223 13:53:38.597"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.598" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.597" endtime="20230223 13:53:38.598"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.601" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.601" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.601" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.598" endtime="20230223 13:53:38.601"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.603" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.602" endtime="20230223 13:53:38.603"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.604" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.604" endtime="20230223 13:53:38.604"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.598" endtime="20230223 13:53:38.605"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.605" endtime="20230223 13:53:38.605"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.605" endtime="20230223 13:53:38.605"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.598" endtime="20230223 13:53:38.605"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.605" endtime="20230223 13:53:38.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.606" endtime="20230223 13:53:38.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.606" endtime="20230223 13:53:38.607"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.595" endtime="20230223 13:53:38.607"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.539" endtime="20230223 13:53:38.607"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.610" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.610" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.607" endtime="20230223 13:53:38.610"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.539" endtime="20230223 13:53:38.611"/>
</test>
<test id="s1-s5-t25" name="Valid data relief with decimal .01" line="70">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.01}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.618" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.99'}</msg>
<status status="PASS" starttime="20230223 13:53:38.618" endtime="20230223 13:53:38.618"/>
</kw>
<msg timestamp="20230223 13:53:38.619" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.99'}</msg>
<status status="PASS" starttime="20230223 13:53:38.618" endtime="20230223 13:53:38.619"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.620" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.620" endtime="20230223 13:53:38.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.621" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.621" endtime="20230223 13:53:38.621"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.625" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.99"}' 
 </msg>
<msg timestamp="20230223 13:53:38.625" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.625" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.622" endtime="20230223 13:53:38.625"/>
</kw>
<msg timestamp="20230223 13:53:38.626" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.620" endtime="20230223 13:53:38.626"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.628" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.627" endtime="20230223 13:53:38.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.629" endtime="20230223 13:53:38.629"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.627" endtime="20230223 13:53:38.629"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.631" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.631" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.631" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.629" endtime="20230223 13:53:38.631"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.633" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.632" endtime="20230223 13:53:38.633"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.634" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.634" endtime="20230223 13:53:38.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.635" endtime="20230223 13:53:38.635"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.629" endtime="20230223 13:53:38.635"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.636" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.636" endtime="20230223 13:53:38.636"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.637" level="INFO">${item_tax} = 9899.99</msg>
<status status="PASS" starttime="20230223 13:53:38.636" endtime="20230223 13:53:38.637"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.637" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.637" endtime="20230223 13:53:38.637"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.638" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.638" endtime="20230223 13:53:38.638"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.639" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.639" endtime="20230223 13:53:38.639"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.640" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.639" endtime="20230223 13:53:38.640"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.641" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.640" endtime="20230223 13:53:38.641"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.642" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.642" endtime="20230223 13:53:38.642"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.641" endtime="20230223 13:53:38.642"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.643" endtime="20230223 13:53:38.643"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.642" endtime="20230223 13:53:38.643"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.643" endtime="20230223 13:53:38.643"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.643" endtime="20230223 13:53:38.643"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.643" endtime="20230223 13:53:38.643"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.643" endtime="20230223 13:53:38.644"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.644" endtime="20230223 13:53:38.644"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.644" endtime="20230223 13:53:38.644"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.641" endtime="20230223 13:53:38.644"/>
</if>
<msg timestamp="20230223 13:53:38.644" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.641" endtime="20230223 13:53:38.644"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.645" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.645" endtime="20230223 13:53:38.645"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.645" endtime="20230223 13:53:38.646"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.646" endtime="20230223 13:53:38.646"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.646" endtime="20230223 13:53:38.646"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.645" endtime="20230223 13:53:38.647"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.647" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.647" endtime="20230223 13:53:38.647"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.647" endtime="20230223 13:53:38.648"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.648" endtime="20230223 13:53:38.648"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.648" endtime="20230223 13:53:38.648"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.648" endtime="20230223 13:53:38.649"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.648" endtime="20230223 13:53:38.649"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.649" endtime="20230223 13:53:38.649"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.649" endtime="20230223 13:53:38.649"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.649" endtime="20230223 13:53:38.649"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.649" endtime="20230223 13:53:38.649"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.647" endtime="20230223 13:53:38.650"/>
</if>
<msg timestamp="20230223 13:53:38.650" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.645" endtime="20230223 13:53:38.650"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.651" level="INFO">${Tax_Relief} = 100.01</msg>
<status status="PASS" starttime="20230223 13:53:38.651" endtime="20230223 13:53:38.651"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.652" level="INFO">${Tax_Relief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.651" endtime="20230223 13:53:38.652"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.652" endtime="20230223 13:53:38.653"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.652" endtime="20230223 13:53:38.653"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.652" endtime="20230223 13:53:38.653"/>
</if>
<msg timestamp="20230223 13:53:38.653" level="INFO">${taxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.650" endtime="20230223 13:53:38.653"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.654" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.654" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.654" endtime="20230223 13:53:38.654"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.655" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.655" endtime="20230223 13:53:38.655"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.656" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.656" endtime="20230223 13:53:38.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.657" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.656" endtime="20230223 13:53:38.657"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.658" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.657" endtime="20230223 13:53:38.658"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.657" endtime="20230223 13:53:38.658"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.659" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.658" endtime="20230223 13:53:38.659"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.658" endtime="20230223 13:53:38.659"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.660" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.659" endtime="20230223 13:53:38.660"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.659" endtime="20230223 13:53:38.660"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.661" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.660" endtime="20230223 13:53:38.661"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.660" endtime="20230223 13:53:38.661"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.662" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.662" endtime="20230223 13:53:38.662"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.662" endtime="20230223 13:53:38.663"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.663" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.663" endtime="20230223 13:53:38.663"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.663" endtime="20230223 13:53:38.664"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.657" endtime="20230223 13:53:38.664"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.665" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.665" endtime="20230223 13:53:38.665"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.666" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.665" endtime="20230223 13:53:38.666"/>
</kw>
<msg timestamp="20230223 13:53:38.666" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.653" endtime="20230223 13:53:38.666"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.667" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.667" endtime="20230223 13:53:38.668"/>
</kw>
<msg timestamp="20230223 13:53:38.668" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.635" endtime="20230223 13:53:38.668"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.669" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.669" endtime="20230223 13:53:38.669"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.670" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.670" endtime="20230223 13:53:38.670"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.671" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.671" endtime="20230223 13:53:38.671"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.672" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.672" endtime="20230223 13:53:38.672"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.676" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.676" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.676" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.673" endtime="20230223 13:53:38.676"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.678" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.677" endtime="20230223 13:53:38.678"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.679" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.679" endtime="20230223 13:53:38.679"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.673" endtime="20230223 13:53:38.679"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.680" endtime="20230223 13:53:38.680"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.680" endtime="20230223 13:53:38.680"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.673" endtime="20230223 13:53:38.680"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.680" endtime="20230223 13:53:38.680"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.681" endtime="20230223 13:53:38.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.681" endtime="20230223 13:53:38.681"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.669" endtime="20230223 13:53:38.681"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.617" endtime="20230223 13:53:38.681"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.684" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.684" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.682" endtime="20230223 13:53:38.684"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.617" endtime="20230223 13:53:38.685"/>
</test>
<test id="s1-s5-t26" name="Valid data relief with decimal .26" line="72">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.26}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.693" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.74'}</msg>
<status status="PASS" starttime="20230223 13:53:38.692" endtime="20230223 13:53:38.693"/>
</kw>
<msg timestamp="20230223 13:53:38.694" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.74'}</msg>
<status status="PASS" starttime="20230223 13:53:38.692" endtime="20230223 13:53:38.694"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.695" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.695" endtime="20230223 13:53:38.695"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.696" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.696" endtime="20230223 13:53:38.696"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.700" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.74"}' 
 </msg>
<msg timestamp="20230223 13:53:38.700" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.700" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.697" endtime="20230223 13:53:38.701"/>
</kw>
<msg timestamp="20230223 13:53:38.702" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.694" endtime="20230223 13:53:38.702"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.704" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.703" endtime="20230223 13:53:38.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.704" endtime="20230223 13:53:38.705"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.702" endtime="20230223 13:53:38.705"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.707" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.707" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.705" endtime="20230223 13:53:38.708"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.710" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.708" endtime="20230223 13:53:38.710"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.711" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.710" endtime="20230223 13:53:38.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.711" endtime="20230223 13:53:38.712"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.705" endtime="20230223 13:53:38.712"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.712" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.712" endtime="20230223 13:53:38.712"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.713" level="INFO">${item_tax} = 9899.74</msg>
<status status="PASS" starttime="20230223 13:53:38.713" endtime="20230223 13:53:38.713"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.714" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.714" endtime="20230223 13:53:38.714"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.715" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.715" endtime="20230223 13:53:38.715"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.716" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.716" endtime="20230223 13:53:38.716"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.717" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.717" endtime="20230223 13:53:38.717"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.718" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.718" endtime="20230223 13:53:38.718"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.719" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.719" endtime="20230223 13:53:38.719"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.719" endtime="20230223 13:53:38.720"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.720" endtime="20230223 13:53:38.720"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.720" endtime="20230223 13:53:38.720"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.720" endtime="20230223 13:53:38.720"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.720" endtime="20230223 13:53:38.721"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.721" endtime="20230223 13:53:38.721"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.721" endtime="20230223 13:53:38.721"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.721" endtime="20230223 13:53:38.722"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.721" endtime="20230223 13:53:38.722"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.719" endtime="20230223 13:53:38.722"/>
</if>
<msg timestamp="20230223 13:53:38.722" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.718" endtime="20230223 13:53:38.722"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.723" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.723" endtime="20230223 13:53:38.723"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.723" endtime="20230223 13:53:38.724"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.724" endtime="20230223 13:53:38.724"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.724" endtime="20230223 13:53:38.724"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.723" endtime="20230223 13:53:38.724"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.725" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.724" endtime="20230223 13:53:38.725"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.724" endtime="20230223 13:53:38.725"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.725" endtime="20230223 13:53:38.726"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.725" endtime="20230223 13:53:38.726"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.726" endtime="20230223 13:53:38.726"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.726" endtime="20230223 13:53:38.726"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.726" endtime="20230223 13:53:38.726"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.726" endtime="20230223 13:53:38.727"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.727" endtime="20230223 13:53:38.727"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.727" endtime="20230223 13:53:38.727"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.724" endtime="20230223 13:53:38.727"/>
</if>
<msg timestamp="20230223 13:53:38.727" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.722" endtime="20230223 13:53:38.727"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.728" level="INFO">${Tax_Relief} = 100.26</msg>
<status status="PASS" starttime="20230223 13:53:38.728" endtime="20230223 13:53:38.728"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.729" level="INFO">${Tax_Relief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.729" endtime="20230223 13:53:38.729"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.730" endtime="20230223 13:53:38.730"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.730" endtime="20230223 13:53:38.730"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.730" endtime="20230223 13:53:38.731"/>
</if>
<msg timestamp="20230223 13:53:38.731" level="INFO">${taxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.728" endtime="20230223 13:53:38.731"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.732" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.732" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.732" endtime="20230223 13:53:38.732"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.733" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.732" endtime="20230223 13:53:38.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.734" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.733" endtime="20230223 13:53:38.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.735" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.734" endtime="20230223 13:53:38.735"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.736" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.736" endtime="20230223 13:53:38.736"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.735" endtime="20230223 13:53:38.736"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.737" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.737" endtime="20230223 13:53:38.737"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.737" endtime="20230223 13:53:38.738"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.738" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.738" endtime="20230223 13:53:38.738"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.738" endtime="20230223 13:53:38.738"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.739" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.739" endtime="20230223 13:53:38.739"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.739" endtime="20230223 13:53:38.740"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.740" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.740" endtime="20230223 13:53:38.740"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.740" endtime="20230223 13:53:38.741"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.741" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.741" endtime="20230223 13:53:38.741"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.741" endtime="20230223 13:53:38.743"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.735" endtime="20230223 13:53:38.743"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.744" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.744" endtime="20230223 13:53:38.744"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.745" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.744" endtime="20230223 13:53:38.745"/>
</kw>
<msg timestamp="20230223 13:53:38.745" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.731" endtime="20230223 13:53:38.745"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.746" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.746" endtime="20230223 13:53:38.746"/>
</kw>
<msg timestamp="20230223 13:53:38.747" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.712" endtime="20230223 13:53:38.747"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.748" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.748" endtime="20230223 13:53:38.748"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.749" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.749" endtime="20230223 13:53:38.749"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.750" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.750" endtime="20230223 13:53:38.750"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.751" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.751" endtime="20230223 13:53:38.751"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.754" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.754" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.755" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.752" endtime="20230223 13:53:38.755"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.757" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.756" endtime="20230223 13:53:38.757"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.758" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.757" endtime="20230223 13:53:38.758"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.752" endtime="20230223 13:53:38.758"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.759" endtime="20230223 13:53:38.759"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.758" endtime="20230223 13:53:38.759"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.752" endtime="20230223 13:53:38.759"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.759" endtime="20230223 13:53:38.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.760" endtime="20230223 13:53:38.760"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.760" endtime="20230223 13:53:38.760"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.748" endtime="20230223 13:53:38.760"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.691" endtime="20230223 13:53:38.760"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.763" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.763" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.761" endtime="20230223 13:53:38.763"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.691" endtime="20230223 13:53:38.764"/>
</test>
<test id="s1-s5-t27" name="Valid data relief with decimal .49" line="74">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.49}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.772" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.51'}</msg>
<status status="PASS" starttime="20230223 13:53:38.772" endtime="20230223 13:53:38.772"/>
</kw>
<msg timestamp="20230223 13:53:38.773" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.51'}</msg>
<status status="PASS" starttime="20230223 13:53:38.771" endtime="20230223 13:53:38.773"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.775" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.774" endtime="20230223 13:53:38.775"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.776" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.776" endtime="20230223 13:53:38.776"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.780" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.51"}' 
 </msg>
<msg timestamp="20230223 13:53:38.781" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.781" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.777" endtime="20230223 13:53:38.781"/>
</kw>
<msg timestamp="20230223 13:53:38.782" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.774" endtime="20230223 13:53:38.782"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.784" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.783" endtime="20230223 13:53:38.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.785" endtime="20230223 13:53:38.785"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.783" endtime="20230223 13:53:38.785"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.788" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.788" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.788" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.786" endtime="20230223 13:53:38.788"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.791" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.790" endtime="20230223 13:53:38.791"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.792" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.792" endtime="20230223 13:53:38.792"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.793" endtime="20230223 13:53:38.793"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.786" endtime="20230223 13:53:38.793"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.794" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.794" endtime="20230223 13:53:38.794"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.795" level="INFO">${item_tax} = 9899.51</msg>
<status status="PASS" starttime="20230223 13:53:38.795" endtime="20230223 13:53:38.795"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.796" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.796" endtime="20230223 13:53:38.796"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.797" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.797" endtime="20230223 13:53:38.797"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.799" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.798" endtime="20230223 13:53:38.799"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.800" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.799" endtime="20230223 13:53:38.800"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.801" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.800" endtime="20230223 13:53:38.801"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.803" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.803" endtime="20230223 13:53:38.803"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.803" endtime="20230223 13:53:38.804"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.804" endtime="20230223 13:53:38.804"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.804" endtime="20230223 13:53:38.804"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.805" endtime="20230223 13:53:38.805"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.804" endtime="20230223 13:53:38.805"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.805" endtime="20230223 13:53:38.805"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.805" endtime="20230223 13:53:38.805"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.806" endtime="20230223 13:53:38.806"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.805" endtime="20230223 13:53:38.806"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.803" endtime="20230223 13:53:38.806"/>
</if>
<msg timestamp="20230223 13:53:38.806" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.802" endtime="20230223 13:53:38.806"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.808" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.808" endtime="20230223 13:53:38.808"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.807" endtime="20230223 13:53:38.809"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.809" endtime="20230223 13:53:38.810"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.809" endtime="20230223 13:53:38.810"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.807" endtime="20230223 13:53:38.810"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.811" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.810" endtime="20230223 13:53:38.811"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.810" endtime="20230223 13:53:38.811"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.811" endtime="20230223 13:53:38.812"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.811" endtime="20230223 13:53:38.812"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.812" endtime="20230223 13:53:38.812"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.812" endtime="20230223 13:53:38.812"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.812" endtime="20230223 13:53:38.813"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.812" endtime="20230223 13:53:38.813"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.813" endtime="20230223 13:53:38.813"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.813" endtime="20230223 13:53:38.813"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.810" endtime="20230223 13:53:38.813"/>
</if>
<msg timestamp="20230223 13:53:38.813" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.807" endtime="20230223 13:53:38.813"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.815" level="INFO">${Tax_Relief} = 100.48</msg>
<status status="PASS" starttime="20230223 13:53:38.815" endtime="20230223 13:53:38.815"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.816" level="INFO">${Tax_Relief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.816" endtime="20230223 13:53:38.816"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.817" endtime="20230223 13:53:38.817"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.817" endtime="20230223 13:53:38.817"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.817" endtime="20230223 13:53:38.817"/>
</if>
<msg timestamp="20230223 13:53:38.817" level="INFO">${taxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.814" endtime="20230223 13:53:38.817"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.819" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.819" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.818" endtime="20230223 13:53:38.819"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.820" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.819" endtime="20230223 13:53:38.820"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.821" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.820" endtime="20230223 13:53:38.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.822" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.821" endtime="20230223 13:53:38.822"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.823" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.823" endtime="20230223 13:53:38.823"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.823" endtime="20230223 13:53:38.824"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.824" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.824" endtime="20230223 13:53:38.824"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.824" endtime="20230223 13:53:38.825"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.825" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.825" endtime="20230223 13:53:38.826"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.825" endtime="20230223 13:53:38.826"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.827" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.826" endtime="20230223 13:53:38.827"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.826" endtime="20230223 13:53:38.827"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.828" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.828" endtime="20230223 13:53:38.828"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.827" endtime="20230223 13:53:38.829"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.829" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.829" endtime="20230223 13:53:38.829"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.829" endtime="20230223 13:53:38.830"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.822" endtime="20230223 13:53:38.830"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.831" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.830" endtime="20230223 13:53:38.831"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.832" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.831" endtime="20230223 13:53:38.832"/>
</kw>
<msg timestamp="20230223 13:53:38.833" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.818" endtime="20230223 13:53:38.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.834" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.834" endtime="20230223 13:53:38.834"/>
</kw>
<msg timestamp="20230223 13:53:38.835" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.794" endtime="20230223 13:53:38.835"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.836" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.836" endtime="20230223 13:53:38.836"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.838" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.837" endtime="20230223 13:53:38.838"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.839" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.838" endtime="20230223 13:53:38.839"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.840" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.839" endtime="20230223 13:53:38.840"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.844" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.844" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.844" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.841" endtime="20230223 13:53:38.844"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.846" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.845" endtime="20230223 13:53:38.846"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.847" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.847" endtime="20230223 13:53:38.847"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.841" endtime="20230223 13:53:38.847"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.848" endtime="20230223 13:53:38.848"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.848" endtime="20230223 13:53:38.848"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.841" endtime="20230223 13:53:38.848"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.848" endtime="20230223 13:53:38.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.849" endtime="20230223 13:53:38.849"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.849" endtime="20230223 13:53:38.849"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.836" endtime="20230223 13:53:38.849"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.771" endtime="20230223 13:53:38.850"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.853" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.853" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.850" endtime="20230223 13:53:38.853"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.770" endtime="20230223 13:53:38.854"/>
</test>
<test id="s1-s5-t28" name="Valid data relief with decimal .50" line="76">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.50}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.862" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.50'}</msg>
<status status="PASS" starttime="20230223 13:53:38.862" endtime="20230223 13:53:38.862"/>
</kw>
<msg timestamp="20230223 13:53:38.863" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.50'}</msg>
<status status="PASS" starttime="20230223 13:53:38.861" endtime="20230223 13:53:38.863"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.864" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.864" endtime="20230223 13:53:38.864"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.865" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.865" endtime="20230223 13:53:38.865"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.869" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.50"}' 
 </msg>
<msg timestamp="20230223 13:53:38.870" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.870" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.866" endtime="20230223 13:53:38.870"/>
</kw>
<msg timestamp="20230223 13:53:38.871" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.863" endtime="20230223 13:53:38.871"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.873" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.872" endtime="20230223 13:53:38.873"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.873" endtime="20230223 13:53:38.874"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.871" endtime="20230223 13:53:38.874"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.877" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.877" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.877" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.874" endtime="20230223 13:53:38.877"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.879" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.878" endtime="20230223 13:53:38.879"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.880" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.880" endtime="20230223 13:53:38.880"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.881" endtime="20230223 13:53:38.881"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.874" endtime="20230223 13:53:38.881"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.882" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.881" endtime="20230223 13:53:38.882"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.882" level="INFO">${item_tax} = 9899.50</msg>
<status status="PASS" starttime="20230223 13:53:38.882" endtime="20230223 13:53:38.882"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.883" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.883" endtime="20230223 13:53:38.883"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.884" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.884" endtime="20230223 13:53:38.884"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.885" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.885" endtime="20230223 13:53:38.885"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.886" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.885" endtime="20230223 13:53:38.886"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.887" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.886" endtime="20230223 13:53:38.887"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.888" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.888" endtime="20230223 13:53:38.888"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.887" endtime="20230223 13:53:38.888"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.889" endtime="20230223 13:53:38.889"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.889" endtime="20230223 13:53:38.889"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.889" endtime="20230223 13:53:38.889"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.889" endtime="20230223 13:53:38.889"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.890" endtime="20230223 13:53:38.890"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.889" endtime="20230223 13:53:38.890"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.890" endtime="20230223 13:53:38.890"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.890" endtime="20230223 13:53:38.890"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.887" endtime="20230223 13:53:38.890"/>
</if>
<msg timestamp="20230223 13:53:38.890" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.887" endtime="20230223 13:53:38.890"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.892" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.891" endtime="20230223 13:53:38.892"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.891" endtime="20230223 13:53:38.892"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.893" endtime="20230223 13:53:38.893"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.892" endtime="20230223 13:53:38.893"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.891" endtime="20230223 13:53:38.893"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.893" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.893" endtime="20230223 13:53:38.893"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.893" endtime="20230223 13:53:38.894"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.894" endtime="20230223 13:53:38.894"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.894" endtime="20230223 13:53:38.895"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.895" endtime="20230223 13:53:38.895"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.895" endtime="20230223 13:53:38.895"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.895" endtime="20230223 13:53:38.895"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.895" endtime="20230223 13:53:38.896"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.896" endtime="20230223 13:53:38.896"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.896" endtime="20230223 13:53:38.896"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.893" endtime="20230223 13:53:38.896"/>
</if>
<msg timestamp="20230223 13:53:38.896" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.891" endtime="20230223 13:53:38.896"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.897" level="INFO">${Tax_Relief} = 100.5</msg>
<status status="PASS" starttime="20230223 13:53:38.897" endtime="20230223 13:53:38.897"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.898" level="INFO">${Tax_Relief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.898" endtime="20230223 13:53:38.898"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.899" endtime="20230223 13:53:38.899"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.899" endtime="20230223 13:53:38.899"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.899" endtime="20230223 13:53:38.900"/>
</if>
<msg timestamp="20230223 13:53:38.900" level="INFO">${taxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.897" endtime="20230223 13:53:38.900"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.901" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.901" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.901" endtime="20230223 13:53:38.901"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.902" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.902" endtime="20230223 13:53:38.902"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.903" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.902" endtime="20230223 13:53:38.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.904" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.903" endtime="20230223 13:53:38.904"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.905" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.905" endtime="20230223 13:53:38.905"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.904" endtime="20230223 13:53:38.905"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.906" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.906" endtime="20230223 13:53:38.906"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.906" endtime="20230223 13:53:38.907"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.907" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.907" endtime="20230223 13:53:38.907"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.907" endtime="20230223 13:53:38.908"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.908" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.908" endtime="20230223 13:53:38.908"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.908" endtime="20230223 13:53:38.909"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.910" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.909" endtime="20230223 13:53:38.910"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.909" endtime="20230223 13:53:38.910"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.911" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.911" endtime="20230223 13:53:38.911"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.910" endtime="20230223 13:53:38.911"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.904" endtime="20230223 13:53:38.912"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.912" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.912" endtime="20230223 13:53:38.912"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.913" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.913" endtime="20230223 13:53:38.913"/>
</kw>
<msg timestamp="20230223 13:53:38.914" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.900" endtime="20230223 13:53:38.914"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.915" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.914" endtime="20230223 13:53:38.915"/>
</kw>
<msg timestamp="20230223 13:53:38.915" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.881" endtime="20230223 13:53:38.915"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.917" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.917" endtime="20230223 13:53:38.917"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.918" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.917" endtime="20230223 13:53:38.918"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.919" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.918" endtime="20230223 13:53:38.919"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.920" level="INFO">${expectedTaxRelief} = 100.00</msg>
<status status="PASS" starttime="20230223 13:53:38.919" endtime="20230223 13:53:38.920"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.924" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.924" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.00"}] 
 </msg>
<msg timestamp="20230223 13:53:38.924" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.921" endtime="20230223 13:53:38.924"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.926" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:38.925" endtime="20230223 13:53:38.926"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:38.927" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.927" endtime="20230223 13:53:38.927"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.921" endtime="20230223 13:53:38.928"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.928" endtime="20230223 13:53:38.928"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.928" endtime="20230223 13:53:38.928"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.921" endtime="20230223 13:53:38.928"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.928" endtime="20230223 13:53:38.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.929" endtime="20230223 13:53:38.929"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.929" endtime="20230223 13:53:38.929"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.916" endtime="20230223 13:53:38.929"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.861" endtime="20230223 13:53:38.930"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.933" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.933" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:38.930" endtime="20230223 13:53:38.933"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:38.860" endtime="20230223 13:53:38.934"/>
</test>
<test id="s1-s5-t29" name="Valid data relief with decimal .51" line="78">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.51}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.942" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.49'}</msg>
<status status="PASS" starttime="20230223 13:53:38.942" endtime="20230223 13:53:38.942"/>
</kw>
<msg timestamp="20230223 13:53:38.943" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.49'}</msg>
<status status="PASS" starttime="20230223 13:53:38.941" endtime="20230223 13:53:38.943"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:38.944" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:38.944" endtime="20230223 13:53:38.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.945" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:38.945" endtime="20230223 13:53:38.945"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.949" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.49"}' 
 </msg>
<msg timestamp="20230223 13:53:38.950" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:38.950" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.946" endtime="20230223 13:53:38.950"/>
</kw>
<msg timestamp="20230223 13:53:38.951" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.944" endtime="20230223 13:53:38.951"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.953" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:38.952" endtime="20230223 13:53:38.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.954" endtime="20230223 13:53:38.954"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.951" endtime="20230223 13:53:38.954"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:38.957" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:38.957" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.51"}] 
 </msg>
<msg timestamp="20230223 13:53:38.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:38.955" endtime="20230223 13:53:38.958"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.960" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.958" endtime="20230223 13:53:38.960"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:38.961" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.960" endtime="20230223 13:53:38.961"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:38.962" endtime="20230223 13:53:38.962"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.954" endtime="20230223 13:53:38.962"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.963" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:38.962" endtime="20230223 13:53:38.963"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.963" level="INFO">${item_tax} = 9899.49</msg>
<status status="PASS" starttime="20230223 13:53:38.963" endtime="20230223 13:53:38.964"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.965" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:38.964" endtime="20230223 13:53:38.965"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.966" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:38.966" endtime="20230223 13:53:38.966"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.969" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:38.969" endtime="20230223 13:53:38.969"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:38.970" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:38.970" endtime="20230223 13:53:38.970"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.971" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:38.971" endtime="20230223 13:53:38.971"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.972" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.972" endtime="20230223 13:53:38.972"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.972" endtime="20230223 13:53:38.973"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.973" endtime="20230223 13:53:38.973"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.973" endtime="20230223 13:53:38.974"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.974" endtime="20230223 13:53:38.974"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.974" endtime="20230223 13:53:38.974"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.974" endtime="20230223 13:53:38.974"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.974" endtime="20230223 13:53:38.974"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.975" endtime="20230223 13:53:38.975"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.975" endtime="20230223 13:53:38.975"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.972" endtime="20230223 13:53:38.975"/>
</if>
<msg timestamp="20230223 13:53:38.975" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.972" endtime="20230223 13:53:38.975"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.976" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:38.976" endtime="20230223 13:53:38.976"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.976" endtime="20230223 13:53:38.977"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.977" endtime="20230223 13:53:38.977"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.977" endtime="20230223 13:53:38.977"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.976" endtime="20230223 13:53:38.977"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.978" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.978" endtime="20230223 13:53:38.978"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.977" endtime="20230223 13:53:38.978"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.979" endtime="20230223 13:53:38.979"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.978" endtime="20230223 13:53:38.979"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.979" endtime="20230223 13:53:38.979"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.979" endtime="20230223 13:53:38.979"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.980" endtime="20230223 13:53:38.980"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.979" endtime="20230223 13:53:38.980"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.980" endtime="20230223 13:53:38.980"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.980" endtime="20230223 13:53:38.980"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.977" endtime="20230223 13:53:38.980"/>
</if>
<msg timestamp="20230223 13:53:38.980" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:38.976" endtime="20230223 13:53:38.980"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.982" level="INFO">${Tax_Relief} = 100.51</msg>
<status status="PASS" starttime="20230223 13:53:38.981" endtime="20230223 13:53:38.982"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.983" level="INFO">${Tax_Relief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:38.983" endtime="20230223 13:53:38.983"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:38.984" endtime="20230223 13:53:38.984"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:38.984" endtime="20230223 13:53:38.984"/>
</branch>
<status status="PASS" starttime="20230223 13:53:38.983" endtime="20230223 13:53:38.984"/>
</if>
<msg timestamp="20230223 13:53:38.984" level="INFO">${taxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:38.981" endtime="20230223 13:53:38.984"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:38.985" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:38.985" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:38.985" endtime="20230223 13:53:38.985"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.986" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:38.986" endtime="20230223 13:53:38.986"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:38.987" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:38.987" endtime="20230223 13:53:38.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:38.988" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:38.988" endtime="20230223 13:53:38.988"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.989" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:38.989" endtime="20230223 13:53:38.989"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.989" endtime="20230223 13:53:38.990"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.991" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:38.990" endtime="20230223 13:53:38.991"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.990" endtime="20230223 13:53:38.991"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.992" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.992" endtime="20230223 13:53:38.992"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.991" endtime="20230223 13:53:38.992"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.993" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.993" endtime="20230223 13:53:38.993"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.993" endtime="20230223 13:53:38.994"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.994" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.994" endtime="20230223 13:53:38.994"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.994" endtime="20230223 13:53:38.995"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.995" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.995" endtime="20230223 13:53:38.995"/>
</kw>
<status status="PASS" starttime="20230223 13:53:38.995" endtime="20230223 13:53:38.996"/>
</iter>
<status status="PASS" starttime="20230223 13:53:38.989" endtime="20230223 13:53:38.996"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:38.996" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.996" endtime="20230223 13:53:38.997"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:38.997" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.997" endtime="20230223 13:53:38.997"/>
</kw>
<msg timestamp="20230223 13:53:38.998" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:38.985" endtime="20230223 13:53:38.998"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:38.999" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.999" endtime="20230223 13:53:38.999"/>
</kw>
<msg timestamp="20230223 13:53:39.000" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:38.962" endtime="20230223 13:53:39.000"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.001" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.001" endtime="20230223 13:53:39.001"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.002" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.002" endtime="20230223 13:53:39.002"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.003" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.003" endtime="20230223 13:53:39.003"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.004" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.004" endtime="20230223 13:53:39.004"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.007" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.007" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.51"}] 
 </msg>
<msg timestamp="20230223 13:53:39.007" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.005" endtime="20230223 13:53:39.007"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.010" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.51'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.008" endtime="20230223 13:53:39.010"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.011" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.51'}</msg>
<status status="PASS" starttime="20230223 13:53:39.010" endtime="20230223 13:53:39.011"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.004" endtime="20230223 13:53:39.011"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.011" endtime="20230223 13:53:39.012"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.011" endtime="20230223 13:53:39.012"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.004" endtime="20230223 13:53:39.012"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.012" endtime="20230223 13:53:39.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230223 13:53:39.013" level="FAIL">100.51 != 101.00</msg>
<status status="FAIL" starttime="20230223 13:53:39.012" endtime="20230223 13:53:39.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.013" endtime="20230223 13:53:39.014"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.001" endtime="20230223 13:53:39.014"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:38.941" endtime="20230223 13:53:39.014"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.017" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.017" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.014" endtime="20230223 13:53:39.017"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:38.940" endtime="20230223 13:53:39.018">100.51 != 101.00</status>
</test>
<test id="s1-s5-t30" name="Valid data relief with decimal .74" line="80">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.74}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.026" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.26'}</msg>
<status status="PASS" starttime="20230223 13:53:39.026" endtime="20230223 13:53:39.026"/>
</kw>
<msg timestamp="20230223 13:53:39.027" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.26'}</msg>
<status status="PASS" starttime="20230223 13:53:39.025" endtime="20230223 13:53:39.027"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.028" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.028" endtime="20230223 13:53:39.028"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.030" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.029" endtime="20230223 13:53:39.030"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.034" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.26"}' 
 </msg>
<msg timestamp="20230223 13:53:39.034" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.034" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.030" endtime="20230223 13:53:39.034"/>
</kw>
<msg timestamp="20230223 13:53:39.035" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.027" endtime="20230223 13:53:39.035"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.038" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.037" endtime="20230223 13:53:39.038"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.039" endtime="20230223 13:53:39.039"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.036" endtime="20230223 13:53:39.039"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.042" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.042" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.74"}] 
 </msg>
<msg timestamp="20230223 13:53:39.042" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.040" endtime="20230223 13:53:39.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.044" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.043" endtime="20230223 13:53:39.044"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.045" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.045" endtime="20230223 13:53:39.045"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.046" endtime="20230223 13:53:39.047"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.040" endtime="20230223 13:53:39.047"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.048" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.048" endtime="20230223 13:53:39.048"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.049" level="INFO">${item_tax} = 9899.26</msg>
<status status="PASS" starttime="20230223 13:53:39.048" endtime="20230223 13:53:39.049"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.050" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.049" endtime="20230223 13:53:39.050"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.050" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.050" endtime="20230223 13:53:39.051"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.051" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.051" endtime="20230223 13:53:39.051"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.052" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.052" endtime="20230223 13:53:39.052"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.053" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.053" endtime="20230223 13:53:39.053"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.054" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.054" endtime="20230223 13:53:39.054"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.054" endtime="20230223 13:53:39.055"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.055" endtime="20230223 13:53:39.055"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.055" endtime="20230223 13:53:39.056"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.056" endtime="20230223 13:53:39.056"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.056" endtime="20230223 13:53:39.056"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.056" endtime="20230223 13:53:39.056"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.056" endtime="20230223 13:53:39.057"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.057" endtime="20230223 13:53:39.057"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.057" endtime="20230223 13:53:39.057"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.054" endtime="20230223 13:53:39.057"/>
</if>
<msg timestamp="20230223 13:53:39.057" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.054" endtime="20230223 13:53:39.057"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.059" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.058" endtime="20230223 13:53:39.059"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.058" endtime="20230223 13:53:39.059"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.060" endtime="20230223 13:53:39.060"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.060" endtime="20230223 13:53:39.060"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.058" endtime="20230223 13:53:39.060"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.061" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.060" endtime="20230223 13:53:39.061"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.060" endtime="20230223 13:53:39.061"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.062" endtime="20230223 13:53:39.062"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.061" endtime="20230223 13:53:39.062"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.062" endtime="20230223 13:53:39.062"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.062" endtime="20230223 13:53:39.062"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.063" endtime="20230223 13:53:39.063"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.063" endtime="20230223 13:53:39.063"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.063" endtime="20230223 13:53:39.063"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.063" endtime="20230223 13:53:39.063"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.060" endtime="20230223 13:53:39.063"/>
</if>
<msg timestamp="20230223 13:53:39.064" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.058" endtime="20230223 13:53:39.064"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.065" level="INFO">${Tax_Relief} = 100.73</msg>
<status status="PASS" starttime="20230223 13:53:39.064" endtime="20230223 13:53:39.065"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.066" level="INFO">${Tax_Relief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.065" endtime="20230223 13:53:39.066"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.067" endtime="20230223 13:53:39.067"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.066" endtime="20230223 13:53:39.067"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.066" endtime="20230223 13:53:39.067"/>
</if>
<msg timestamp="20230223 13:53:39.067" level="INFO">${taxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.064" endtime="20230223 13:53:39.067"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.068" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.068" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.068" endtime="20230223 13:53:39.068"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.069" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.069" endtime="20230223 13:53:39.069"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.070" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.070" endtime="20230223 13:53:39.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.071" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.071" endtime="20230223 13:53:39.071"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.072" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.072" endtime="20230223 13:53:39.072"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.072" endtime="20230223 13:53:39.073"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.073" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.073" endtime="20230223 13:53:39.073"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.073" endtime="20230223 13:53:39.074"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.075" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.074" endtime="20230223 13:53:39.075"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.074" endtime="20230223 13:53:39.075"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.076" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.076" endtime="20230223 13:53:39.076"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.075" endtime="20230223 13:53:39.076"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.077" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.077" endtime="20230223 13:53:39.077"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.076" endtime="20230223 13:53:39.077"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.078" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.078" endtime="20230223 13:53:39.078"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.078" endtime="20230223 13:53:39.078"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.071" endtime="20230223 13:53:39.079"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.079" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.079" endtime="20230223 13:53:39.079"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.080" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.080" endtime="20230223 13:53:39.080"/>
</kw>
<msg timestamp="20230223 13:53:39.081" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.068" endtime="20230223 13:53:39.081"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.082" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.082" endtime="20230223 13:53:39.082"/>
</kw>
<msg timestamp="20230223 13:53:39.083" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.047" endtime="20230223 13:53:39.083"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.084" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.084" endtime="20230223 13:53:39.084"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.085" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.085" endtime="20230223 13:53:39.085"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.086" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.086" endtime="20230223 13:53:39.086"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.087" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.086" endtime="20230223 13:53:39.087"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.092" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.092" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.74"}] 
 </msg>
<msg timestamp="20230223 13:53:39.092" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.089" endtime="20230223 13:53:39.092"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.094" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.74'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.093" endtime="20230223 13:53:39.094"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.095" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.74'}</msg>
<status status="PASS" starttime="20230223 13:53:39.095" endtime="20230223 13:53:39.095"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.087" endtime="20230223 13:53:39.096"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.096" endtime="20230223 13:53:39.096"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.096" endtime="20230223 13:53:39.096"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.087" endtime="20230223 13:53:39.096"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.097" endtime="20230223 13:53:39.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230223 13:53:39.097" level="FAIL">100.74 != 101.00</msg>
<status status="FAIL" starttime="20230223 13:53:39.097" endtime="20230223 13:53:39.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.098" endtime="20230223 13:53:39.098"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.084" endtime="20230223 13:53:39.098"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.025" endtime="20230223 13:53:39.098"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.101" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.101" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.099" endtime="20230223 13:53:39.102"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:39.024" endtime="20230223 13:53:39.103">100.74 != 101.00</status>
</test>
<test id="s1-s5-t31" name="Valid data relief with decimal .99" line="82">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax.99}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.111" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.01'}</msg>
<status status="PASS" starttime="20230223 13:53:39.110" endtime="20230223 13:53:39.111"/>
</kw>
<msg timestamp="20230223 13:53:39.111" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9899.01'}</msg>
<status status="PASS" starttime="20230223 13:53:39.110" endtime="20230223 13:53:39.111"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.113" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.113" endtime="20230223 13:53:39.113"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.114" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.114" endtime="20230223 13:53:39.114"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.118" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '117'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9899.01"}' 
 </msg>
<msg timestamp="20230223 13:53:39.118" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.118" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.115" endtime="20230223 13:53:39.118"/>
</kw>
<msg timestamp="20230223 13:53:39.119" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.112" endtime="20230223 13:53:39.119"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.122" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.121" endtime="20230223 13:53:39.122"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.123" endtime="20230223 13:53:39.123"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.120" endtime="20230223 13:53:39.124"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.126" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.127" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:38 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.99"}] 
 </msg>
<msg timestamp="20230223 13:53:39.127" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.124" endtime="20230223 13:53:39.127"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.129" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.128" endtime="20230223 13:53:39.129"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.130" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.129" endtime="20230223 13:53:39.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.130" endtime="20230223 13:53:39.131"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.124" endtime="20230223 13:53:39.131"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.131" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.131" endtime="20230223 13:53:39.131"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.132" level="INFO">${item_tax} = 9899.01</msg>
<status status="PASS" starttime="20230223 13:53:39.132" endtime="20230223 13:53:39.132"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.133" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.133" endtime="20230223 13:53:39.133"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.134" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.134" endtime="20230223 13:53:39.134"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.135" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.135" endtime="20230223 13:53:39.135"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.136" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.136" endtime="20230223 13:53:39.136"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.137" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.136" endtime="20230223 13:53:39.137"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.138" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.138" endtime="20230223 13:53:39.138"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.138" endtime="20230223 13:53:39.139"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.139" endtime="20230223 13:53:39.139"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.139" endtime="20230223 13:53:39.139"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.140" endtime="20230223 13:53:39.140"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.140" endtime="20230223 13:53:39.140"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.140" endtime="20230223 13:53:39.140"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.140" endtime="20230223 13:53:39.140"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.141" endtime="20230223 13:53:39.141"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.140" endtime="20230223 13:53:39.141"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.138" endtime="20230223 13:53:39.141"/>
</if>
<msg timestamp="20230223 13:53:39.141" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.137" endtime="20230223 13:53:39.141"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.143" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.142" endtime="20230223 13:53:39.143"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.142" endtime="20230223 13:53:39.143"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.143" endtime="20230223 13:53:39.143"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.143" endtime="20230223 13:53:39.144"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.142" endtime="20230223 13:53:39.144"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.144" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.144" endtime="20230223 13:53:39.144"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.144" endtime="20230223 13:53:39.145"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.145" endtime="20230223 13:53:39.145"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.145" endtime="20230223 13:53:39.145"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.146" endtime="20230223 13:53:39.146"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.146" endtime="20230223 13:53:39.146"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.146" endtime="20230223 13:53:39.146"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.146" endtime="20230223 13:53:39.146"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.147" endtime="20230223 13:53:39.147"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.147" endtime="20230223 13:53:39.147"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.144" endtime="20230223 13:53:39.147"/>
</if>
<msg timestamp="20230223 13:53:39.147" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.142" endtime="20230223 13:53:39.147"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.148" level="INFO">${Tax_Relief} = 100.98</msg>
<status status="PASS" starttime="20230223 13:53:39.148" endtime="20230223 13:53:39.148"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.149" level="INFO">${Tax_Relief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.149" endtime="20230223 13:53:39.149"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.150" endtime="20230223 13:53:39.150"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.150" endtime="20230223 13:53:39.151"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.150" endtime="20230223 13:53:39.151"/>
</if>
<msg timestamp="20230223 13:53:39.151" level="INFO">${taxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.148" endtime="20230223 13:53:39.151"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.152" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.152" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.152" endtime="20230223 13:53:39.152"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.153" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.153" endtime="20230223 13:53:39.153"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.154" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.154" endtime="20230223 13:53:39.154"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.155" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.155" endtime="20230223 13:53:39.155"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.157" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.157" endtime="20230223 13:53:39.157"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.157" endtime="20230223 13:53:39.158"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.158" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.158" endtime="20230223 13:53:39.158"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.158" endtime="20230223 13:53:39.159"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.160" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.159" endtime="20230223 13:53:39.160"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.159" endtime="20230223 13:53:39.160"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.161" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.160" endtime="20230223 13:53:39.161"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.160" endtime="20230223 13:53:39.161"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.162" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.162" endtime="20230223 13:53:39.162"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.161" endtime="20230223 13:53:39.162"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.163" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.163" endtime="20230223 13:53:39.163"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.163" endtime="20230223 13:53:39.164"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.156" endtime="20230223 13:53:39.164"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.164" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.164" endtime="20230223 13:53:39.164"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.165" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.165" endtime="20230223 13:53:39.165"/>
</kw>
<msg timestamp="20230223 13:53:39.166" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.152" endtime="20230223 13:53:39.166"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.167" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.167" endtime="20230223 13:53:39.167"/>
</kw>
<msg timestamp="20230223 13:53:39.168" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '101.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.131" endtime="20230223 13:53:39.168"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.169" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.169" endtime="20230223 13:53:39.169"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.170" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.170" endtime="20230223 13:53:39.170"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.172" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.171" endtime="20230223 13:53:39.172"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.172" level="INFO">${expectedTaxRelief} = 101.00</msg>
<status status="PASS" starttime="20230223 13:53:39.172" endtime="20230223 13:53:39.172"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.176" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.176" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"100.99"}] 
 </msg>
<msg timestamp="20230223 13:53:39.177" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.174" endtime="20230223 13:53:39.177"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.179" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.99'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.178" endtime="20230223 13:53:39.179"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.180" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '100.99'}</msg>
<status status="PASS" starttime="20230223 13:53:39.180" endtime="20230223 13:53:39.180"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.173" endtime="20230223 13:53:39.181"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.181" endtime="20230223 13:53:39.181"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.181" endtime="20230223 13:53:39.182"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.173" endtime="20230223 13:53:39.182"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.182" endtime="20230223 13:53:39.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230223 13:53:39.183" level="FAIL">100.99 != 101.00</msg>
<status status="FAIL" starttime="20230223 13:53:39.182" endtime="20230223 13:53:39.183"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.183" endtime="20230223 13:53:39.184"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.169" endtime="20230223 13:53:39.184"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.109" endtime="20230223 13:53:39.184"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.188" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.188" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.184" endtime="20230223 13:53:39.188"/>
</kw>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>RoundingFilter</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:39.109" endtime="20230223 13:53:39.189">100.99 != 101.00</status>
</test>
<test id="s1-s5-t32" name="Valid data relief: 0" line="85">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax10000}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.198" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '10000'}</msg>
<status status="PASS" starttime="20230223 13:53:39.198" endtime="20230223 13:53:39.198"/>
</kw>
<msg timestamp="20230223 13:53:39.199" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '10000'}</msg>
<status status="PASS" starttime="20230223 13:53:39.197" endtime="20230223 13:53:39.199"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.200" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.200" endtime="20230223 13:53:39.200"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.201" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.201" endtime="20230223 13:53:39.201"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.206" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "10000"}' 
 </msg>
<msg timestamp="20230223 13:53:39.206" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.206" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.202" endtime="20230223 13:53:39.206"/>
</kw>
<msg timestamp="20230223 13:53:39.207" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.199" endtime="20230223 13:53:39.207"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.209" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.208" endtime="20230223 13:53:39.209"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.210" endtime="20230223 13:53:39.210"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.207" endtime="20230223 13:53:39.210"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.213" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.213" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"2500"}] 
 </msg>
<msg timestamp="20230223 13:53:39.213" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.211" endtime="20230223 13:53:39.213"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.215" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.214" endtime="20230223 13:53:39.215"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.216" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.216" endtime="20230223 13:53:39.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.217" endtime="20230223 13:53:39.217"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.210" endtime="20230223 13:53:39.218"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.219" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.218" endtime="20230223 13:53:39.219"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.220" level="INFO">${item_tax} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.219" endtime="20230223 13:53:39.220"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.221" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.220" endtime="20230223 13:53:39.221"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.222" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.221" endtime="20230223 13:53:39.222"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.223" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.223" endtime="20230223 13:53:39.223"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.224" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.223" endtime="20230223 13:53:39.224"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.225" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.224" endtime="20230223 13:53:39.225"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.226" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.226" endtime="20230223 13:53:39.226"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.226" endtime="20230223 13:53:39.227"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.227" endtime="20230223 13:53:39.227"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.227" endtime="20230223 13:53:39.227"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.227" endtime="20230223 13:53:39.227"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.227" endtime="20230223 13:53:39.227"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.228" endtime="20230223 13:53:39.228"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.227" endtime="20230223 13:53:39.228"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.228" endtime="20230223 13:53:39.228"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.228" endtime="20230223 13:53:39.228"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.226" endtime="20230223 13:53:39.228"/>
</if>
<msg timestamp="20230223 13:53:39.228" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.225" endtime="20230223 13:53:39.228"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.230" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.229" endtime="20230223 13:53:39.230"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.229" endtime="20230223 13:53:39.230"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.230" endtime="20230223 13:53:39.231"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.230" endtime="20230223 13:53:39.231"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.229" endtime="20230223 13:53:39.231"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.231" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.231" endtime="20230223 13:53:39.231"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.231" endtime="20230223 13:53:39.232"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.232" endtime="20230223 13:53:39.232"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.232" endtime="20230223 13:53:39.232"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.232" endtime="20230223 13:53:39.232"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.232" endtime="20230223 13:53:39.233"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.233" endtime="20230223 13:53:39.233"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.233" endtime="20230223 13:53:39.233"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.233" endtime="20230223 13:53:39.233"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.233" endtime="20230223 13:53:39.233"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.231" endtime="20230223 13:53:39.233"/>
</if>
<msg timestamp="20230223 13:53:39.234" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.229" endtime="20230223 13:53:39.234"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.235" level="INFO">${Tax_Relief} = 0.0</msg>
<status status="PASS" starttime="20230223 13:53:39.235" endtime="20230223 13:53:39.235"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.236" level="INFO">${Tax_Relief} = 0.00</msg>
<status status="PASS" starttime="20230223 13:53:39.235" endtime="20230223 13:53:39.236"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.236" endtime="20230223 13:53:39.236"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.236" endtime="20230223 13:53:39.237"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.236" endtime="20230223 13:53:39.237"/>
</if>
<msg timestamp="20230223 13:53:39.237" level="INFO">${taxRelief} = 0.00</msg>
<status status="PASS" starttime="20230223 13:53:39.234" endtime="20230223 13:53:39.237"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.238" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.238" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.238" endtime="20230223 13:53:39.238"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.239" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.238" endtime="20230223 13:53:39.239"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.239" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.239" endtime="20230223 13:53:39.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.240" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.240" endtime="20230223 13:53:39.240"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.241" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.241" endtime="20230223 13:53:39.241"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.241" endtime="20230223 13:53:39.242"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.242" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.242" endtime="20230223 13:53:39.242"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.242" endtime="20230223 13:53:39.242"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.243" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.243" endtime="20230223 13:53:39.243"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.243" endtime="20230223 13:53:39.243"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.244" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.244" endtime="20230223 13:53:39.244"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.244" endtime="20230223 13:53:39.244"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.245" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.245" endtime="20230223 13:53:39.245"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.245" endtime="20230223 13:53:39.245"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.246" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.246" endtime="20230223 13:53:39.246"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.246" endtime="20230223 13:53:39.246"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.241" endtime="20230223 13:53:39.247"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.247" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.247" endtime="20230223 13:53:39.247"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.248" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.247" endtime="20230223 13:53:39.248"/>
</kw>
<msg timestamp="20230223 13:53:39.248" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.237" endtime="20230223 13:53:39.248"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.249" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '0.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.249" endtime="20230223 13:53:39.249"/>
</kw>
<msg timestamp="20230223 13:53:39.250" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '0.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.218" endtime="20230223 13:53:39.250"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.251" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.251" endtime="20230223 13:53:39.251"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.252" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.252" endtime="20230223 13:53:39.252"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.252" level="INFO">${expectedTaxRelief} = 0.00</msg>
<status status="PASS" starttime="20230223 13:53:39.252" endtime="20230223 13:53:39.252"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.253" level="INFO">${expectedTaxRelief} = 0.00</msg>
<status status="PASS" starttime="20230223 13:53:39.253" endtime="20230223 13:53:39.253"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.257" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.257" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"2500"}] 
 </msg>
<msg timestamp="20230223 13:53:39.257" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.254" endtime="20230223 13:53:39.257"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.259" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '2500'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.258" endtime="20230223 13:53:39.259"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.259" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '2500'}</msg>
<status status="PASS" starttime="20230223 13:53:39.259" endtime="20230223 13:53:39.259"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.254" endtime="20230223 13:53:39.260"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.260" endtime="20230223 13:53:39.260"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.260" endtime="20230223 13:53:39.260"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.254" endtime="20230223 13:53:39.261"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.261" endtime="20230223 13:53:39.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230223 13:53:39.261" level="FAIL">2500 != 0.00</msg>
<status status="FAIL" starttime="20230223 13:53:39.261" endtime="20230223 13:53:39.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.262" endtime="20230223 13:53:39.262"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.251" endtime="20230223 13:53:39.262"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.197" endtime="20230223 13:53:39.262"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.265" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.265" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.263" endtime="20230223 13:53:39.265"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:39.196" endtime="20230223 13:53:39.266">2500 != 0.00</status>
</test>
<test id="s1-s5-t33" name="Valid data relief: 1" line="87">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax9999}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.273" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9999'}</msg>
<status status="PASS" starttime="20230223 13:53:39.273" endtime="20230223 13:53:39.273"/>
</kw>
<msg timestamp="20230223 13:53:39.274" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9999'}</msg>
<status status="PASS" starttime="20230223 13:53:39.273" endtime="20230223 13:53:39.274"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.275" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.275" endtime="20230223 13:53:39.275"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.276" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.276" endtime="20230223 13:53:39.276"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.280" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9999"}' 
 </msg>
<msg timestamp="20230223 13:53:39.280" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.280" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.277" endtime="20230223 13:53:39.280"/>
</kw>
<msg timestamp="20230223 13:53:39.281" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.275" endtime="20230223 13:53:39.281"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.283" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.282" endtime="20230223 13:53:39.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.284" endtime="20230223 13:53:39.284"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.282" endtime="20230223 13:53:39.284"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.287" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.287" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.287" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.285" endtime="20230223 13:53:39.287"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.289" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.288" endtime="20230223 13:53:39.289"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.290" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.289" endtime="20230223 13:53:39.290"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.290" endtime="20230223 13:53:39.290"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.284" endtime="20230223 13:53:39.291"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.291" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.291" endtime="20230223 13:53:39.291"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.292" level="INFO">${item_tax} = 9999</msg>
<status status="PASS" starttime="20230223 13:53:39.292" endtime="20230223 13:53:39.292"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.293" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.293" endtime="20230223 13:53:39.293"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.293" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.293" endtime="20230223 13:53:39.293"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.294" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.294" endtime="20230223 13:53:39.294"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.295" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.295" endtime="20230223 13:53:39.295"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.296" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.296" endtime="20230223 13:53:39.296"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.297" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.297" endtime="20230223 13:53:39.297"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.297" endtime="20230223 13:53:39.297"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.298"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.298"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.298"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.298"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.299"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.298" endtime="20230223 13:53:39.299"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.299" endtime="20230223 13:53:39.299"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.299" endtime="20230223 13:53:39.299"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.297" endtime="20230223 13:53:39.299"/>
</if>
<msg timestamp="20230223 13:53:39.299" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.296" endtime="20230223 13:53:39.299"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.300" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.300" endtime="20230223 13:53:39.300"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.300" endtime="20230223 13:53:39.301"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.301" endtime="20230223 13:53:39.301"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.301" endtime="20230223 13:53:39.301"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.300" endtime="20230223 13:53:39.301"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.302" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.302" endtime="20230223 13:53:39.302"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.301" endtime="20230223 13:53:39.302"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.303" endtime="20230223 13:53:39.303"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.302" endtime="20230223 13:53:39.303"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.303" endtime="20230223 13:53:39.303"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.303" endtime="20230223 13:53:39.303"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.303" endtime="20230223 13:53:39.303"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.303" endtime="20230223 13:53:39.304"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.304" endtime="20230223 13:53:39.304"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.304" endtime="20230223 13:53:39.304"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.301" endtime="20230223 13:53:39.304"/>
</if>
<msg timestamp="20230223 13:53:39.304" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.300" endtime="20230223 13:53:39.304"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.305" level="INFO">${Tax_Relief} = 1.0</msg>
<status status="PASS" starttime="20230223 13:53:39.305" endtime="20230223 13:53:39.305"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.306" level="INFO">${Tax_Relief} = 1.00</msg>
<status status="PASS" starttime="20230223 13:53:39.306" endtime="20230223 13:53:39.306"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.307" level="INFO">${Tax_Relief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.307" endtime="20230223 13:53:39.307"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.307" endtime="20230223 13:53:39.308"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.307" endtime="20230223 13:53:39.308"/>
</if>
<msg timestamp="20230223 13:53:39.308" level="INFO">${taxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.305" endtime="20230223 13:53:39.308"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.309" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.309" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.309" endtime="20230223 13:53:39.309"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.310" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.310" endtime="20230223 13:53:39.310"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.311" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.310" endtime="20230223 13:53:39.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.311" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.311" endtime="20230223 13:53:39.311"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.312" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.312" endtime="20230223 13:53:39.312"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.312" endtime="20230223 13:53:39.313"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.313" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.313" endtime="20230223 13:53:39.313"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.313" endtime="20230223 13:53:39.314"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.314" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.314" endtime="20230223 13:53:39.314"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.314" endtime="20230223 13:53:39.315"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.315" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.315" endtime="20230223 13:53:39.315"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.315" endtime="20230223 13:53:39.316"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.316" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.316" endtime="20230223 13:53:39.316"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.316" endtime="20230223 13:53:39.317"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.317" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.317" endtime="20230223 13:53:39.317"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.317" endtime="20230223 13:53:39.318"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.312" endtime="20230223 13:53:39.318"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.318" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.318" endtime="20230223 13:53:39.318"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.319" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.319" endtime="20230223 13:53:39.319"/>
</kw>
<msg timestamp="20230223 13:53:39.320" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.309" endtime="20230223 13:53:39.320"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.321" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.320" endtime="20230223 13:53:39.321"/>
</kw>
<msg timestamp="20230223 13:53:39.321" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.291" endtime="20230223 13:53:39.321"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.322" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.322" endtime="20230223 13:53:39.322"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.323" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.323" endtime="20230223 13:53:39.323"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.324" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.324" endtime="20230223 13:53:39.324"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.325" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.325" endtime="20230223 13:53:39.325"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.328" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.328" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.328" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.325" endtime="20230223 13:53:39.328"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.330" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.329" endtime="20230223 13:53:39.330"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.330" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.330" endtime="20230223 13:53:39.331"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.325" endtime="20230223 13:53:39.331"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.331" endtime="20230223 13:53:39.331"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.331" endtime="20230223 13:53:39.331"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.325" endtime="20230223 13:53:39.332"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.332" endtime="20230223 13:53:39.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.332" endtime="20230223 13:53:39.332"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.332" endtime="20230223 13:53:39.332"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.322" endtime="20230223 13:53:39.333"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.272" endtime="20230223 13:53:39.333"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.335" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.335" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.333" endtime="20230223 13:53:39.335"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:39.272" endtime="20230223 13:53:39.336"/>
</test>
<test id="s1-s5-t34" name="Valid data relief: 49" line="89">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax9951}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.343" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9951'}</msg>
<status status="PASS" starttime="20230223 13:53:39.343" endtime="20230223 13:53:39.344"/>
</kw>
<msg timestamp="20230223 13:53:39.344" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9951'}</msg>
<status status="PASS" starttime="20230223 13:53:39.343" endtime="20230223 13:53:39.344"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.345" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.345" endtime="20230223 13:53:39.345"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.346" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.346" endtime="20230223 13:53:39.346"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.350" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9951"}' 
 </msg>
<msg timestamp="20230223 13:53:39.350" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.350" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.347" endtime="20230223 13:53:39.350"/>
</kw>
<msg timestamp="20230223 13:53:39.351" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.345" endtime="20230223 13:53:39.351"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.354" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.352" endtime="20230223 13:53:39.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.355" endtime="20230223 13:53:39.355"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.352" endtime="20230223 13:53:39.355"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.358" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.358" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.358" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.356" endtime="20230223 13:53:39.358"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.360" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.359" endtime="20230223 13:53:39.360"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.361" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.361" endtime="20230223 13:53:39.361"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.362" endtime="20230223 13:53:39.362"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.355" endtime="20230223 13:53:39.362"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.363" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.363" endtime="20230223 13:53:39.363"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.363" level="INFO">${item_tax} = 9951</msg>
<status status="PASS" starttime="20230223 13:53:39.363" endtime="20230223 13:53:39.363"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.364" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.364" endtime="20230223 13:53:39.364"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.365" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.365" endtime="20230223 13:53:39.365"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.366" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.366" endtime="20230223 13:53:39.366"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.367" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.366" endtime="20230223 13:53:39.367"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.367" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.367" endtime="20230223 13:53:39.367"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.369" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.368" endtime="20230223 13:53:39.369"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.368" endtime="20230223 13:53:39.369"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.369" endtime="20230223 13:53:39.369"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.369" endtime="20230223 13:53:39.370"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.370" endtime="20230223 13:53:39.370"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.370" endtime="20230223 13:53:39.370"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.370" endtime="20230223 13:53:39.370"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.370" endtime="20230223 13:53:39.371"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.371" endtime="20230223 13:53:39.371"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.371" endtime="20230223 13:53:39.371"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.368" endtime="20230223 13:53:39.371"/>
</if>
<msg timestamp="20230223 13:53:39.371" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.368" endtime="20230223 13:53:39.371"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.372" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.372" endtime="20230223 13:53:39.372"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.372" endtime="20230223 13:53:39.373"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.373" endtime="20230223 13:53:39.373"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.373" endtime="20230223 13:53:39.373"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.372" endtime="20230223 13:53:39.373"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.374" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.373" endtime="20230223 13:53:39.374"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.373" endtime="20230223 13:53:39.374"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.374" endtime="20230223 13:53:39.375"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.374" endtime="20230223 13:53:39.375"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.375" endtime="20230223 13:53:39.375"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.375" endtime="20230223 13:53:39.375"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.375" endtime="20230223 13:53:39.375"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.375" endtime="20230223 13:53:39.375"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.376" endtime="20230223 13:53:39.376"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.376" endtime="20230223 13:53:39.376"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.373" endtime="20230223 13:53:39.376"/>
</if>
<msg timestamp="20230223 13:53:39.376" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.372" endtime="20230223 13:53:39.376"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.377" level="INFO">${Tax_Relief} = 49.0</msg>
<status status="PASS" starttime="20230223 13:53:39.377" endtime="20230223 13:53:39.377"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.378" level="INFO">${Tax_Relief} = 49.00</msg>
<status status="PASS" starttime="20230223 13:53:39.378" endtime="20230223 13:53:39.378"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.379" level="INFO">${Tax_Relief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.379" endtime="20230223 13:53:39.379"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.379" endtime="20230223 13:53:39.379"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.379" endtime="20230223 13:53:39.379"/>
</if>
<msg timestamp="20230223 13:53:39.380" level="INFO">${taxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.377" endtime="20230223 13:53:39.380"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.381" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.381" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.380" endtime="20230223 13:53:39.381"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.381" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.381" endtime="20230223 13:53:39.381"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.382" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.382" endtime="20230223 13:53:39.382"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.383" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.383" endtime="20230223 13:53:39.383"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.384" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.384" endtime="20230223 13:53:39.384"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.384" endtime="20230223 13:53:39.384"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.385" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.385" endtime="20230223 13:53:39.385"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.384" endtime="20230223 13:53:39.385"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.386" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.386" endtime="20230223 13:53:39.386"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.385" endtime="20230223 13:53:39.386"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.387" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.387" endtime="20230223 13:53:39.387"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.386" endtime="20230223 13:53:39.387"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.388" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.388" endtime="20230223 13:53:39.388"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.388" endtime="20230223 13:53:39.388"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.389" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.389" endtime="20230223 13:53:39.389"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.389" endtime="20230223 13:53:39.390"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.383" endtime="20230223 13:53:39.390"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.390" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.390" endtime="20230223 13:53:39.390"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.391" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.391" endtime="20230223 13:53:39.391"/>
</kw>
<msg timestamp="20230223 13:53:39.392" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.380" endtime="20230223 13:53:39.392"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.393" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.392" endtime="20230223 13:53:39.393"/>
</kw>
<msg timestamp="20230223 13:53:39.393" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.362" endtime="20230223 13:53:39.393"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.394" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.394" endtime="20230223 13:53:39.394"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.395" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.395" endtime="20230223 13:53:39.395"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.396" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.396" endtime="20230223 13:53:39.396"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.397" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.397" endtime="20230223 13:53:39.397"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.400" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.400" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.400" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.397" endtime="20230223 13:53:39.400"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.403" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.401" endtime="20230223 13:53:39.403"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.404" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.403" endtime="20230223 13:53:39.404"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.397" endtime="20230223 13:53:39.404"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.405" endtime="20230223 13:53:39.405"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.404" endtime="20230223 13:53:39.405"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.397" endtime="20230223 13:53:39.405"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.405" endtime="20230223 13:53:39.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.405" endtime="20230223 13:53:39.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.406" endtime="20230223 13:53:39.406"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.394" endtime="20230223 13:53:39.406"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.342" endtime="20230223 13:53:39.406"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.409" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.409" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.407" endtime="20230223 13:53:39.409"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Positive</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:39.342" endtime="20230223 13:53:39.410"/>
</test>
<test id="s1-s5-t35" name="Valid data relief: 50" line="91">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax9950}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.418" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9950'}</msg>
<status status="PASS" starttime="20230223 13:53:39.417" endtime="20230223 13:53:39.418"/>
</kw>
<msg timestamp="20230223 13:53:39.418" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9950'}</msg>
<status status="PASS" starttime="20230223 13:53:39.417" endtime="20230223 13:53:39.418"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.419" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.419" endtime="20230223 13:53:39.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.420" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.420" endtime="20230223 13:53:39.420"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.424" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9950"}' 
 </msg>
<msg timestamp="20230223 13:53:39.424" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.424" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.421" endtime="20230223 13:53:39.425"/>
</kw>
<msg timestamp="20230223 13:53:39.425" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.419" endtime="20230223 13:53:39.425"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.427" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.426" endtime="20230223 13:53:39.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.428" endtime="20230223 13:53:39.428"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.426" endtime="20230223 13:53:39.428"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.431" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.431" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.431" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.429" endtime="20230223 13:53:39.431"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.433" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.431" endtime="20230223 13:53:39.433"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.433" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.433" endtime="20230223 13:53:39.433"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.434" endtime="20230223 13:53:39.434"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.428" endtime="20230223 13:53:39.434"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.435" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.435" endtime="20230223 13:53:39.435"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.436" level="INFO">${item_tax} = 9950</msg>
<status status="PASS" starttime="20230223 13:53:39.435" endtime="20230223 13:53:39.436"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.436" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.436" endtime="20230223 13:53:39.437"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.437" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.437" endtime="20230223 13:53:39.437"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.438" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.438" endtime="20230223 13:53:39.438"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.439" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.439" endtime="20230223 13:53:39.439"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.440" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.439" endtime="20230223 13:53:39.440"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.441" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.440" endtime="20230223 13:53:39.441"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.440" endtime="20230223 13:53:39.441"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.441" endtime="20230223 13:53:39.442"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.441" endtime="20230223 13:53:39.442"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.442" endtime="20230223 13:53:39.442"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.442" endtime="20230223 13:53:39.442"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.442" endtime="20230223 13:53:39.442"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.442" endtime="20230223 13:53:39.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.443" endtime="20230223 13:53:39.443"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.443" endtime="20230223 13:53:39.443"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.440" endtime="20230223 13:53:39.443"/>
</if>
<msg timestamp="20230223 13:53:39.443" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.440" endtime="20230223 13:53:39.443"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.444" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.444" endtime="20230223 13:53:39.444"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.444" endtime="20230223 13:53:39.445"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.445" endtime="20230223 13:53:39.445"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.445" endtime="20230223 13:53:39.445"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.444" endtime="20230223 13:53:39.445"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.446" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.445" endtime="20230223 13:53:39.446"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.445" endtime="20230223 13:53:39.446"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.446" endtime="20230223 13:53:39.447"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.446" endtime="20230223 13:53:39.447"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.447" endtime="20230223 13:53:39.447"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.447" endtime="20230223 13:53:39.447"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.447" endtime="20230223 13:53:39.447"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.447" endtime="20230223 13:53:39.447"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.448" endtime="20230223 13:53:39.448"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.447" endtime="20230223 13:53:39.448"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.445" endtime="20230223 13:53:39.448"/>
</if>
<msg timestamp="20230223 13:53:39.448" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.444" endtime="20230223 13:53:39.448"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.449" level="INFO">${Tax_Relief} = 50.0</msg>
<status status="PASS" starttime="20230223 13:53:39.449" endtime="20230223 13:53:39.449"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.450" level="INFO">${Tax_Relief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.450" endtime="20230223 13:53:39.450"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.451" endtime="20230223 13:53:39.451"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.451" endtime="20230223 13:53:39.451"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.451" endtime="20230223 13:53:39.451"/>
</if>
<msg timestamp="20230223 13:53:39.451" level="INFO">${taxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.449" endtime="20230223 13:53:39.451"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.452" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.452" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.452" endtime="20230223 13:53:39.452"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.453" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.453" endtime="20230223 13:53:39.453"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.454" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.454" endtime="20230223 13:53:39.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.455" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.454" endtime="20230223 13:53:39.455"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.458" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.457" endtime="20230223 13:53:39.458"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.457" endtime="20230223 13:53:39.458"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.459" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.459" endtime="20230223 13:53:39.459"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.458" endtime="20230223 13:53:39.459"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.460" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.460" endtime="20230223 13:53:39.460"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.460" endtime="20230223 13:53:39.460"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.461" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.461" endtime="20230223 13:53:39.461"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.461" endtime="20230223 13:53:39.461"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.462" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.462" endtime="20230223 13:53:39.462"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.462" endtime="20230223 13:53:39.463"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.463" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.463" endtime="20230223 13:53:39.463"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.463" endtime="20230223 13:53:39.464"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.457" endtime="20230223 13:53:39.464"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.464" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.464" endtime="20230223 13:53:39.464"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.465" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.465" endtime="20230223 13:53:39.465"/>
</kw>
<msg timestamp="20230223 13:53:39.465" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.452" endtime="20230223 13:53:39.465"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.466" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.466" endtime="20230223 13:53:39.466"/>
</kw>
<msg timestamp="20230223 13:53:39.467" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.434" endtime="20230223 13:53:39.467"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.468" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.468" endtime="20230223 13:53:39.468"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.469" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.469" endtime="20230223 13:53:39.469"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.470" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.470" endtime="20230223 13:53:39.470"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.471" level="INFO">${expectedTaxRelief} = 50.00</msg>
<status status="PASS" starttime="20230223 13:53:39.470" endtime="20230223 13:53:39.471"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.474" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.474" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.474" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.471" endtime="20230223 13:53:39.474"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.476" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.475" endtime="20230223 13:53:39.476"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.477" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.477" endtime="20230223 13:53:39.477"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.471" endtime="20230223 13:53:39.477"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.478" endtime="20230223 13:53:39.478"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.478" endtime="20230223 13:53:39.478"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.471" endtime="20230223 13:53:39.478"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.478" endtime="20230223 13:53:39.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.478" endtime="20230223 13:53:39.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.479" endtime="20230223 13:53:39.479"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.468" endtime="20230223 13:53:39.479"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.416" endtime="20230223 13:53:39.479"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.482" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.482" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.480" endtime="20230223 13:53:39.482"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Positive</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:39.416" endtime="20230223 13:53:39.483"/>
</test>
<test id="s1-s5-t36" name="Valid data relief: 51" line="93">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax9949}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.490" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9949'}</msg>
<status status="PASS" starttime="20230223 13:53:39.490" endtime="20230223 13:53:39.490"/>
</kw>
<msg timestamp="20230223 13:53:39.491" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '9949'}</msg>
<status status="PASS" starttime="20230223 13:53:39.490" endtime="20230223 13:53:39.491"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.492" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.492" endtime="20230223 13:53:39.492"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.493" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.493" endtime="20230223 13:53:39.493"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.496" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "9949"}' 
 </msg>
<msg timestamp="20230223 13:53:39.497" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.497" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.494" endtime="20230223 13:53:39.497"/>
</kw>
<msg timestamp="20230223 13:53:39.497" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.492" endtime="20230223 13:53:39.497"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.499" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.498" endtime="20230223 13:53:39.499"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.500" endtime="20230223 13:53:39.500"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.498" endtime="20230223 13:53:39.500"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.503" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.503" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"51.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.503" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.501" endtime="20230223 13:53:39.503"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.505" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.504" endtime="20230223 13:53:39.505"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.506" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.505" endtime="20230223 13:53:39.506"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.506" endtime="20230223 13:53:39.507"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.500" endtime="20230223 13:53:39.507"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.507" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.507" endtime="20230223 13:53:39.507"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.508" level="INFO">${item_tax} = 9949</msg>
<status status="PASS" starttime="20230223 13:53:39.508" endtime="20230223 13:53:39.508"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.509" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.509" endtime="20230223 13:53:39.509"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.510" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.509" endtime="20230223 13:53:39.510"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.510" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.510" endtime="20230223 13:53:39.510"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.511" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.511" endtime="20230223 13:53:39.511"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.512" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.512" endtime="20230223 13:53:39.512"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.513" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.513" endtime="20230223 13:53:39.513"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.513" endtime="20230223 13:53:39.513"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.514" endtime="20230223 13:53:39.514"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.513" endtime="20230223 13:53:39.514"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.514" endtime="20230223 13:53:39.514"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.514" endtime="20230223 13:53:39.514"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.514" endtime="20230223 13:53:39.514"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.514" endtime="20230223 13:53:39.515"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.515" endtime="20230223 13:53:39.515"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.515" endtime="20230223 13:53:39.515"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.513" endtime="20230223 13:53:39.515"/>
</if>
<msg timestamp="20230223 13:53:39.515" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.512" endtime="20230223 13:53:39.515"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.516" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.516" endtime="20230223 13:53:39.516"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.516" endtime="20230223 13:53:39.517"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.517" endtime="20230223 13:53:39.517"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.517" endtime="20230223 13:53:39.517"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.516" endtime="20230223 13:53:39.517"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.518" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.517" endtime="20230223 13:53:39.518"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.517" endtime="20230223 13:53:39.518"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.518" endtime="20230223 13:53:39.518"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.518" endtime="20230223 13:53:39.518"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.519"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.519"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.519"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.519"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.520"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.519" endtime="20230223 13:53:39.520"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.517" endtime="20230223 13:53:39.520"/>
</if>
<msg timestamp="20230223 13:53:39.520" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.516" endtime="20230223 13:53:39.520"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.521" level="INFO">${Tax_Relief} = 51.0</msg>
<status status="PASS" starttime="20230223 13:53:39.521" endtime="20230223 13:53:39.521"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.522" level="INFO">${Tax_Relief} = 51.00</msg>
<status status="PASS" starttime="20230223 13:53:39.521" endtime="20230223 13:53:39.522"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.523" endtime="20230223 13:53:39.523"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.522" endtime="20230223 13:53:39.523"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.522" endtime="20230223 13:53:39.523"/>
</if>
<msg timestamp="20230223 13:53:39.523" level="INFO">${taxRelief} = 51.00</msg>
<status status="PASS" starttime="20230223 13:53:39.520" endtime="20230223 13:53:39.523"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.524" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.524" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.524" endtime="20230223 13:53:39.524"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.525" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.525" endtime="20230223 13:53:39.525"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.526" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.526" endtime="20230223 13:53:39.526"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.526" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.526" endtime="20230223 13:53:39.526"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.528" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.527" endtime="20230223 13:53:39.528"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.527" endtime="20230223 13:53:39.528"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.528" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.528" endtime="20230223 13:53:39.529"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.528" endtime="20230223 13:53:39.529"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.529" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.529" endtime="20230223 13:53:39.529"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.529" endtime="20230223 13:53:39.530"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.531" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.530" endtime="20230223 13:53:39.531"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.530" endtime="20230223 13:53:39.531"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.532" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.531" endtime="20230223 13:53:39.532"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.531" endtime="20230223 13:53:39.532"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.532" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.532" endtime="20230223 13:53:39.533"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.532" endtime="20230223 13:53:39.533"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.527" endtime="20230223 13:53:39.533"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.533" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.533" endtime="20230223 13:53:39.533"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.534" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.534" endtime="20230223 13:53:39.534"/>
</kw>
<msg timestamp="20230223 13:53:39.535" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.524" endtime="20230223 13:53:39.535"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.536" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '51.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.535" endtime="20230223 13:53:39.536"/>
</kw>
<msg timestamp="20230223 13:53:39.536" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '51.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.507" endtime="20230223 13:53:39.536"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.537" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.537" endtime="20230223 13:53:39.537"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.538" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.538" endtime="20230223 13:53:39.538"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.539" level="INFO">${expectedTaxRelief} = 51.00</msg>
<status status="PASS" starttime="20230223 13:53:39.539" endtime="20230223 13:53:39.539"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.540" level="INFO">${expectedTaxRelief} = 51.00</msg>
<status status="PASS" starttime="20230223 13:53:39.540" endtime="20230223 13:53:39.540"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.543" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.543" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"51.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.543" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.541" endtime="20230223 13:53:39.543"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.545" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '51.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.544" endtime="20230223 13:53:39.545"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.546" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '51.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.546" endtime="20230223 13:53:39.546"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.540" endtime="20230223 13:53:39.546"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.547" endtime="20230223 13:53:39.547"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.547" endtime="20230223 13:53:39.547"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.540" endtime="20230223 13:53:39.547"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.547" endtime="20230223 13:53:39.547"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.547" endtime="20230223 13:53:39.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.548" endtime="20230223 13:53:39.548"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.537" endtime="20230223 13:53:39.548"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.489" endtime="20230223 13:53:39.548"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.551" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.551" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.549" endtime="20230223 13:53:39.551"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US4</tag>
<status status="PASS" starttime="20230223 13:53:39.489" endtime="20230223 13:53:39.552"/>
</test>
<test id="s1-s5-t37" name="Valid data relief: -1" line="95">
<kw name="Validate tax relief records">
<arg>${base_url}</arg>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax10001}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code_valid}</arg>
<arg>${single}</arg>
<doc>Test cases in this US4.robot file seeks to test the algorithm for the tax relief caclulation.
Parameters are varied and used to calculate an expected tax relief amount, which is used to validate against the actual tax relief amount retrieved from the API</doc>
<kw name="Build single person data to dictionary" library="commonKeyword">
<var>${request_body}</var>
<arg>${birthday}</arg>
<arg>${gender}</arg>
<arg>${name}</arg>
<arg>${natid}</arg>
<arg>${salary}</arg>
<arg>${tax}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${request_body}</var>
<arg>birthday=${birthday}</arg>
<arg>gender=${gender}</arg>
<arg>name=${name}</arg>
<arg>natid=${natid}</arg>
<arg>salary=${salary}</arg>
<arg>tax=${tax}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.559" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '10001'}</msg>
<status status="PASS" starttime="20230223 13:53:39.559" endtime="20230223 13:53:39.560"/>
</kw>
<msg timestamp="20230223 13:53:39.560" level="INFO">${request_body} = {'birthday': '01012007', 'gender': 'M', 'name': 'Lewies', 'natid': 's12345678a', 'salary': '10000', 'tax': '10001'}</msg>
<status status="PASS" starttime="20230223 13:53:39.559" endtime="20230223 13:53:39.560"/>
</kw>
<kw name="Call API endpoint" library="commonKeyword">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>${request_body}</arg>
<arg>${content_type_json}</arg>
<arg>${endpoint_insert}</arg>
<arg>${status_code}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.561" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.561" endtime="20230223 13:53:39.562"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=${content_type}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.562" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20230223 13:53:39.562" endtime="20230223 13:53:39.562"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_insert}</arg>
<arg>json=${request_body}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=${status_code}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.566" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"birthday": "01012007", "gender": "M", "name": "Lewies", "natid": "s12345678a", "salary": "10000", "tax": "10001"}' 
 </msg>
<msg timestamp="20230223 13:53:39.566" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20230223 13:53:39.566" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.563" endtime="20230223 13:53:39.566"/>
</kw>
<msg timestamp="20230223 13:53:39.567" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.561" endtime="20230223 13:53:39.567"/>
</kw>
<kw name="Validate response for" library="commonKeyword">
<arg>${response}</arg>
<arg>${status_code}</arg>
<arg>${number_of_rows}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${actual_status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.570" level="INFO">${actual_status_code} = 202</msg>
<status status="PASS" starttime="20230223 13:53:39.569" endtime="20230223 13:53:39.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual_status_code}</arg>
<arg>${status_code}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.571" endtime="20230223 13:53:39.571"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.568" endtime="20230223 13:53:39.571"/>
</kw>
<kw name="Check row num in db" library="commonKeyword">
<arg>${number_of_rows}</arg>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.574" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.574" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.574" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.572" endtime="20230223 13:53:39.574"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>len(${response.content})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.576" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.575" endtime="20230223 13:53:39.576"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${number_of_rows_from_db}</var>
<arg>${number_of_rows_from_db}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.577" level="INFO">${number_of_rows_from_db} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.577" endtime="20230223 13:53:39.577"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${number_of_rows_from_db}</arg>
<arg>${expected_number_of_rows}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.578" endtime="20230223 13:53:39.578"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.571" endtime="20230223 13:53:39.578"/>
</kw>
<kw name="Calculate Tax Relief" library="UserStory4Utility">
<var>${expectedValuesAsDict}</var>
<arg>${request_body}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${item_salary}</var>
<arg>${dict}</arg>
<arg>salary</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.579" level="INFO">${item_salary} = 10000</msg>
<status status="PASS" starttime="20230223 13:53:39.579" endtime="20230223 13:53:39.579"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_tax}</var>
<arg>${dict}</arg>
<arg>tax</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.580" level="INFO">${item_tax} = 10001</msg>
<status status="PASS" starttime="20230223 13:53:39.579" endtime="20230223 13:53:39.580"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_birthday}</var>
<arg>${dict}</arg>
<arg>birthday</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.580" level="INFO">${item_birthday} = 01012007</msg>
<status status="PASS" starttime="20230223 13:53:39.580" endtime="20230223 13:53:39.580"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_gender}</var>
<arg>${dict}</arg>
<arg>gender</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.581" level="INFO">${item_gender} = M</msg>
<status status="PASS" starttime="20230223 13:53:39.581" endtime="20230223 13:53:39.581"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_name}</var>
<arg>${dict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.582" level="INFO">${item_name} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.582" endtime="20230223 13:53:39.582"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${item_natid}</var>
<arg>${dict}</arg>
<arg>natid</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.583" level="INFO">${item_natid} = s12345678a</msg>
<status status="PASS" starttime="20230223 13:53:39.582" endtime="20230223 13:53:39.583"/>
</kw>
<kw name="Get Substring" library="String">
<var>${item_birthyear}</var>
<arg>${item_birthday}</arg>
<arg>-4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.583" level="INFO">${item_birthyear} = 2007</msg>
<status status="PASS" starttime="20230223 13:53:39.583" endtime="20230223 13:53:39.583"/>
</kw>
<kw name="Calculate gender bonus" library="UserStory4Utility">
<var>${gender_bonus}</var>
<arg>${item_gender}</arg>
<if>
<branch type="IF" condition="&quot;${gender}&quot;==&quot;M&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.584" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.584" endtime="20230223 13:53:39.584"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.584" endtime="20230223 13:53:39.585"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;m&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.585" endtime="20230223 13:53:39.585"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.585" endtime="20230223 13:53:39.585"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;F&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.586" endtime="20230223 13:53:39.586"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.585" endtime="20230223 13:53:39.586"/>
</branch>
<branch type="ELSE IF" condition="&quot;${gender}&quot;==&quot;f&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>500</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.586" endtime="20230223 13:53:39.586"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.586" endtime="20230223 13:53:39.586"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${gender_bonus}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.586" endtime="20230223 13:53:39.586"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.586" endtime="20230223 13:53:39.586"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.584" endtime="20230223 13:53:39.587"/>
</if>
<msg timestamp="20230223 13:53:39.587" level="INFO">${gender_bonus} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.584" endtime="20230223 13:53:39.587"/>
</kw>
<kw name="Calculate age variable" library="UserStory4Utility">
<var>${age_variable}</var>
<arg>${item_birthyear}</arg>
<try>
<branch type="TRY">
<kw name="Evaluate" library="BuiltIn">
<var>${item_age}</var>
<arg>2023-${birthyear}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.588" level="INFO">${item_age} = 16</msg>
<status status="PASS" starttime="20230223 13:53:39.588" endtime="20230223 13:53:39.588"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.587" endtime="20230223 13:53:39.588"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Invalid date format</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.589" endtime="20230223 13:53:39.589"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.588" endtime="20230223 13:53:39.589"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.587" endtime="20230223 13:53:39.589"/>
</try>
<if>
<branch type="IF" condition="${item_age}&lt;=18">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.589" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.589" endtime="20230223 13:53:39.589"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.589" endtime="20230223 13:53:39.590"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;18 and ${item_age}&lt;=35">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.590" endtime="20230223 13:53:39.590"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.590" endtime="20230223 13:53:39.590"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;35 and ${item_age}&lt;=50">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.5</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.590" endtime="20230223 13:53:39.590"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.590" endtime="20230223 13:53:39.591"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;50 and ${item_age}&lt;=75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.367</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.591" endtime="20230223 13:53:39.591"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.591" endtime="20230223 13:53:39.591"/>
</branch>
<branch type="ELSE IF" condition="${item_age}&gt;75">
<kw name="Set Variable" library="BuiltIn">
<var>${age_variable}</var>
<arg>0.05</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.591" endtime="20230223 13:53:39.591"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.591" endtime="20230223 13:53:39.591"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.589" endtime="20230223 13:53:39.591"/>
</if>
<msg timestamp="20230223 13:53:39.591" level="INFO">${age_variable} = 1</msg>
<status status="PASS" starttime="20230223 13:53:39.587" endtime="20230223 13:53:39.591"/>
</kw>
<kw name="Calculate tax relief enhanced" library="UserStory4Utility">
<var>${taxRelief}</var>
<arg>${item_salary}</arg>
<arg>${item_tax}</arg>
<arg>${age_variable}</arg>
<arg>${gender_bonus}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>int((((${item_salary}-${item_tax})*${age_variable})+${gender_bonus})*100)/100.0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.593" level="INFO">${Tax_Relief} = -1.0</msg>
<status status="PASS" starttime="20230223 13:53:39.592" endtime="20230223 13:53:39.593"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>"%.2f" %round(${Tax_Relief})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.594" level="INFO">${Tax_Relief} = -1.00</msg>
<status status="PASS" starttime="20230223 13:53:39.593" endtime="20230223 13:53:39.594"/>
</kw>
<if>
<branch type="IF" condition="${Tax_Relief}&gt;0 and ${Tax_Relief}&lt;50">
<kw name="Set Variable" library="BuiltIn">
<var>${Tax_Relief}</var>
<arg>50.00</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.594" endtime="20230223 13:53:39.595"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.594" endtime="20230223 13:53:39.595"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.594" endtime="20230223 13:53:39.595"/>
</if>
<msg timestamp="20230223 13:53:39.595" level="INFO">${taxRelief} = -1.00</msg>
<status status="PASS" starttime="20230223 13:53:39.592" endtime="20230223 13:53:39.595"/>
</kw>
<kw name="Build masked natid" library="UserStory4Utility">
<var>${maskedNatId}</var>
<arg>${item_natid}</arg>
<kw name="Get Length" library="BuiltIn">
<var>${natid_length}</var>
<arg>${natidToBeMasked}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230223 13:53:39.596" level="INFO">Length is 10</msg>
<msg timestamp="20230223 13:53:39.596" level="INFO">${natid_length} = 10</msg>
<status status="PASS" starttime="20230223 13:53:39.596" endtime="20230223 13:53:39.596"/>
</kw>
<kw name="Get Substring" library="String">
<var>${visible_natid}</var>
<arg>${natidToBeMasked}</arg>
<arg>0</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.597" level="INFO">${visible_natid} = s123</msg>
<status status="PASS" starttime="20230223 13:53:39.597" endtime="20230223 13:53:39.597"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${length_to_hide}</var>
<arg>${natid_length}-4</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.597" level="INFO">${length_to_hide} = 6</msg>
<status status="PASS" starttime="20230223 13:53:39.597" endtime="20230223 13:53:39.598"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:39.598" level="INFO">${hidden_characters} = 0</msg>
<status status="PASS" starttime="20230223 13:53:39.598" endtime="20230223 13:53:39.598"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${length_to_hide}</value>
<iter>
<var name="${i}">0</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.599" level="INFO">${hidden_characters} = 0$</msg>
<status status="PASS" starttime="20230223 13:53:39.599" endtime="20230223 13:53:39.599"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.599" endtime="20230223 13:53:39.600"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.600" level="INFO">${hidden_characters} = 0$$</msg>
<status status="PASS" starttime="20230223 13:53:39.600" endtime="20230223 13:53:39.600"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.600" endtime="20230223 13:53:39.601"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.601" level="INFO">${hidden_characters} = 0$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.601" endtime="20230223 13:53:39.601"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.601" endtime="20230223 13:53:39.602"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.602" level="INFO">${hidden_characters} = 0$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.602" endtime="20230223 13:53:39.602"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.602" endtime="20230223 13:53:39.602"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.603" level="INFO">${hidden_characters} = 0$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.603" endtime="20230223 13:53:39.603"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.603" endtime="20230223 13:53:39.603"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_characters}</var>
<arg>SEPARATOR=</arg>
<arg>${hidden_characters}</arg>
<arg>$</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.604" level="INFO">${hidden_characters} = 0$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.604" endtime="20230223 13:53:39.604"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.604" endtime="20230223 13:53:39.604"/>
</iter>
<status status="PASS" starttime="20230223 13:53:39.599" endtime="20230223 13:53:39.605"/>
</for>
<kw name="Get Substring" library="String">
<var>${hidden_characters}</var>
<arg>${hidden_characters}</arg>
<arg>1</arg>
<arg>7</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:39.605" level="INFO">${hidden_characters} = $$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.605" endtime="20230223 13:53:39.605"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${hidden_natid}</var>
<arg>SEPARATOR=</arg>
<arg>${visible_natid}</arg>
<arg>${hidden_characters}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230223 13:53:39.606" level="INFO">${hidden_natid} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.605" endtime="20230223 13:53:39.606"/>
</kw>
<msg timestamp="20230223 13:53:39.606" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.595" endtime="20230223 13:53:39.606"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${expectedValues}</var>
<arg>name=${item_name}</arg>
<arg>maskedNatId=${maskedNatId}</arg>
<arg>expectedTaxRelief=${taxRelief}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230223 13:53:39.607" level="INFO">${expectedValues} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '-1.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.607" endtime="20230223 13:53:39.607"/>
</kw>
<msg timestamp="20230223 13:53:39.608" level="INFO">${expectedValuesAsDict} = {'name': 'Lewies', 'maskedNatId': 's123$$$$$$', 'expectedTaxRelief': '-1.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.578" endtime="20230223 13:53:39.608"/>
</kw>
<kw name="Validate Tax Relief Data" library="UserStory4Utility">
<arg>${expectedValuesAsDict}</arg>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedName}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>name</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.609" level="INFO">${expectedName} = Lewies</msg>
<status status="PASS" starttime="20230223 13:53:39.609" endtime="20230223 13:53:39.609"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${maskedNatId}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>maskedNatId</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.610" level="INFO">${maskedNatId} = s123$$$$$$</msg>
<status status="PASS" starttime="20230223 13:53:39.609" endtime="20230223 13:53:39.610"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expectedTaxRelief}</var>
<arg>${expectedValuesAsDict}</arg>
<arg>expectedTaxRelief</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230223 13:53:39.610" level="INFO">${expectedTaxRelief} = -1.00</msg>
<status status="PASS" starttime="20230223 13:53:39.610" endtime="20230223 13:53:39.610"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedTaxRelief}</var>
<arg>${expectedTaxRelief}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:39.611" level="INFO">${expectedTaxRelief} = -1.00</msg>
<status status="PASS" starttime="20230223 13:53:39.611" endtime="20230223 13:53:39.611"/>
</kw>
<try>
<branch type="TRY">
<kw name="GET On Session" library="RequestsLibrary">
<var>${response_taxrelief}</var>
<arg>session</arg>
<arg>${endpoint_taxrelief}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.614" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.614" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=[{"natid":"s123$$$$$$","name":"Lewies","relief":"50.00"}] 
 </msg>
<msg timestamp="20230223 13:53:39.614" level="INFO">${response_taxrelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230223 13:53:39.612" endtime="20230223 13:53:39.614"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${responsebody_contents}</var>
<arg>json.loads('''${response_taxrelief.content}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230223 13:53:39.616" level="INFO">${responsebody_contents} = [{'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}]</msg>
<status status="PASS" starttime="20230223 13:53:39.615" endtime="20230223 13:53:39.616"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${responsebody_content}</var>
<arg>${responsebody_contents}[0]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20230223 13:53:39.617" level="INFO">${responsebody_content} = {'natid': 's123$$$$$$', 'name': 'Lewies', 'relief': '50.00'}</msg>
<status status="PASS" starttime="20230223 13:53:39.617" endtime="20230223 13:53:39.617"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.612" endtime="20230223 13:53:39.618"/>
</branch>
<branch type="EXCEPT">
<kw name="Pass Execution" library="BuiltIn">
<arg>msg=Response body is empty</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.618" endtime="20230223 13:53:39.618"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.618" endtime="20230223 13:53:39.618"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.612" endtime="20230223 13:53:39.618"/>
</try>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[natid]</arg>
<arg>${maskedNatId}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:39.618" endtime="20230223 13:53:39.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[relief]</arg>
<arg>${expectedTaxRelief}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230223 13:53:39.619" level="FAIL">50.00 != -1.00</msg>
<status status="FAIL" starttime="20230223 13:53:39.619" endtime="20230223 13:53:39.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${responsebody_content}[name]</arg>
<arg>${expectedName}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.620" endtime="20230223 13:53:39.620"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.608" endtime="20230223 13:53:39.620"/>
</kw>
<status status="FAIL" starttime="20230223 13:53:39.558" endtime="20230223 13:53:39.620"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary" type="TEARDOWN">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:39.623" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:39.623" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:39 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:39.620" endtime="20230223 13:53:39.623"/>
</kw>
<tag>Functional</tag>
<tag>MinReliefFilter</tag>
<tag>Negative</tag>
<tag>US4</tag>
<status status="FAIL" starttime="20230223 13:53:39.558" endtime="20230223 13:53:39.624">50.00 != -1.00</status>
</test>
<status status="FAIL" starttime="20230223 13:53:37.117" endtime="20230223 13:53:39.630"/>
</suite>
<suite id="s1-s6" name="UserStory5" source="C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\UserStory5.robot">
<test id="s1-s6-t1" name="Check button via edge" line="18">
<kw name="Check button">
<arg>${driver_edge}</arg>
<doc>Test cases in this US5.robot file are aimed to test the webelements visible on the UI of the tax relief portal
and the subsequent redirection to another webpage</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.770" endtime="20230223 13:53:39.770"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.769" endtime="20230223 13:53:39.770"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:39.770" endtime="20230223 13:53:39.770"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:39.770" endtime="20230223 13:53:39.770"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:39.771" level="INFO">Environment variable 'webdriver.edge.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/msedgedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:39.770" endtime="20230223 13:53:39.771"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.770" endtime="20230223 13:53:39.771"/>
</branch>
<status status="PASS" starttime="20230223 13:53:39.769" endtime="20230223 13:53:39.772"/>
</if>
<status status="PASS" starttime="20230223 13:53:39.769" endtime="20230223 13:53:39.772"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:39.772" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:39.772" endtime="20230223 13:53:39.772"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:39.774" level="INFO">Opening browser 'edge' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:53:39.773" endtime="20230223 13:53:41.529"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:41.531" endtime="20230223 13:53:41.550"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.772" endtime="20230223 13:53:41.550"/>
</kw>
<kw name="Check button color" library="UserStory5Utility">
<arg>${browser}</arg>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:41.561" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="539cd12171efe11a9cb7e1b596639b60", element="dec05861-ee3a-42f0-9553-b51d19025178")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:41.551" endtime="20230223 13:53:41.561"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${button_color}</var>
<arg>${button_element}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20230223 13:53:41.570" level="INFO">${button_color} = rgba(220, 53, 69, 1)</msg>
<status status="PASS" starttime="20230223 13:53:41.562" endtime="20230223 13:53:41.570"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${button_string}</var>
<arg>${button_color}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:41.571" level="INFO">${button_string} = rgba(220, 53, 69, 1)</msg>
<status status="PASS" starttime="20230223 13:53:41.571" endtime="20230223 13:53:41.571"/>
</kw>
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>0</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:41.573" level="INFO">${button_string} = rgba(220, 53, 69, 1</msg>
<status status="PASS" starttime="20230223 13:53:41.572" endtime="20230223 13:53:41.573"/>
</kw>
<if>
<branch type="IF" condition="&quot;${browser}&quot; == &quot;${driver_firefox}&quot;">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<status status="NOT RUN" starttime="20230223 13:53:41.574" endtime="20230223 13:53:41.574"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:41.574" endtime="20230223 13:53:41.575"/>
</branch>
<branch type="ELSE">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>5</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:41.575" level="INFO">${button_string} = 220, 53, 69, 1</msg>
<status status="PASS" starttime="20230223 13:53:41.575" endtime="20230223 13:53:41.575"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.575" endtime="20230223 13:53:41.576"/>
</branch>
<status status="PASS" starttime="20230223 13:53:41.574" endtime="20230223 13:53:41.576"/>
</if>
<kw name="Split String" library="String">
<var>${rgb_list}</var>
<arg>${button_string}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230223 13:53:41.577" level="INFO">${rgb_list} = ['220', ' 53', ' 69', ' 1']</msg>
<status status="PASS" starttime="20230223 13:53:41.576" endtime="20230223 13:53:41.577"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_r}</var>
<arg>${rgb_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:41.578" level="INFO">${color_r} = 220</msg>
<status status="PASS" starttime="20230223 13:53:41.578" endtime="20230223 13:53:41.578"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_g}</var>
<arg>${rgb_list}</arg>
<arg>1</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:41.579" level="INFO">${color_g} =  53</msg>
<status status="PASS" starttime="20230223 13:53:41.579" endtime="20230223 13:53:41.579"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_b}</var>
<arg>${rgb_list}</arg>
<arg>2</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:41.580" level="INFO">${color_b} =  69</msg>
<status status="PASS" starttime="20230223 13:53:41.580" endtime="20230223 13:53:41.580"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>(${color_r}&lt;=255 and ${color_r}&gt;=160) and (${color_b}&lt;=75 and ${color_b}&gt;=0) and (${color_g}&lt;=75 and ${color_g}&gt;=0)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230223 13:53:41.582" endtime="20230223 13:53:41.582"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.551" endtime="20230223 13:53:41.582"/>
</kw>
<kw name="Check button text" library="UserStory5Utility">
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:41.588" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="539cd12171efe11a9cb7e1b596639b60", element="dec05861-ee3a-42f0-9553-b51d19025178")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:41.583" endtime="20230223 13:53:41.588"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${button_element_text}</var>
<arg>${button_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:41.599" level="INFO">${button_element_text} = Dispense Now</msg>
<status status="PASS" starttime="20230223 13:53:41.590" endtime="20230223 13:53:41.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_element_text}</arg>
<arg>${dispenseNowMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:41.600" endtime="20230223 13:53:41.600"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.583" endtime="20230223 13:53:41.600"/>
</kw>
<kw name="Click button and validate text" library="UserStory5Utility">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${dispenseNowButtonXPath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:41.602" level="INFO">Clicking element 'xpath:/html/body/div/div[2]/div/a[2]'.</msg>
<status status="PASS" starttime="20230223 13:53:41.601" endtime="20230223 13:53:41.883"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${cashDispensedXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:41.884" endtime="20230223 13:53:41.909"/>
</kw>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${text_element}</var>
<arg>${cashDispensedXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:41.915" level="INFO">${text_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="539cd12171efe11a9cb7e1b596639b60", element="97d69a34-d9c8-4f87-a048-6d2962354e53")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:41.909" endtime="20230223 13:53:41.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${text_element_text}</var>
<arg>${text_element.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:41.927" level="INFO">${text_element_text} = Cash dispensed</msg>
<status status="PASS" starttime="20230223 13:53:41.917" endtime="20230223 13:53:41.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_element_text}</arg>
<arg>${cashDispensedMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:41.929" endtime="20230223 13:53:41.929"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.601" endtime="20230223 13:53:41.929"/>
</kw>
<status status="PASS" starttime="20230223 13:53:39.769" endtime="20230223 13:53:41.929"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:41.933" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:41.934" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:41 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:41.930" endtime="20230223 13:53:41.934"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:41.935" endtime="20230223 13:53:44.105"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.930" endtime="20230223 13:53:44.106"/>
</kw>
<status status="PASS" starttime="20230223 13:53:41.930" endtime="20230223 13:53:44.106"/>
</kw>
<tag>Edge</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US5</tag>
<status status="PASS" starttime="20230223 13:53:39.768" endtime="20230223 13:53:44.106"/>
</test>
<test id="s1-s6-t2" name="Check button via Firefox" line="20">
<kw name="Check button">
<arg>${driver_firefox}</arg>
<doc>Test cases in this US5.robot file are aimed to test the webelements visible on the UI of the tax relief portal
and the subsequent redirection to another webpage</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:44.115" endtime="20230223 13:53:44.115"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:44.114" endtime="20230223 13:53:44.115"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:44.116" level="INFO">Environment variable 'webdriver.gecko.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/geckodriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:44.115" endtime="20230223 13:53:44.116"/>
</kw>
<status status="PASS" starttime="20230223 13:53:44.115" endtime="20230223 13:53:44.117"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:44.117" endtime="20230223 13:53:44.117"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:44.117" endtime="20230223 13:53:44.118"/>
</branch>
<status status="PASS" starttime="20230223 13:53:44.114" endtime="20230223 13:53:44.118"/>
</if>
<status status="PASS" starttime="20230223 13:53:44.114" endtime="20230223 13:53:44.118"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:44.118" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:44.118" endtime="20230223 13:53:44.119"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:44.120" level="INFO">Opening browser 'Firefox' to base url 'http://localhost:8080'.</msg>
<msg timestamp="20230223 13:53:44.121" level="INFO">Firefox driver log is always forced to to: C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases\geckodriver-18.log</msg>
<status status="PASS" starttime="20230223 13:53:44.119" endtime="20230223 13:53:51.068"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:51.069" endtime="20230223 13:53:51.087"/>
</kw>
<status status="PASS" starttime="20230223 13:53:44.118" endtime="20230223 13:53:51.087"/>
</kw>
<kw name="Check button color" library="UserStory5Utility">
<arg>${browser}</arg>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:51.093" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="e8f62562-b646-45bb-bc3c-b83878f22b20", element="bd6f416d-b6ef-49bb-8323-6b895f34b068")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:51.088" endtime="20230223 13:53:51.093"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${button_color}</var>
<arg>${button_element}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20230223 13:53:51.096" level="INFO">${button_color} = rgb(220, 53, 69)</msg>
<status status="PASS" starttime="20230223 13:53:51.094" endtime="20230223 13:53:51.096"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${button_string}</var>
<arg>${button_color}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:51.097" level="INFO">${button_string} = rgb(220, 53, 69)</msg>
<status status="PASS" starttime="20230223 13:53:51.097" endtime="20230223 13:53:51.097"/>
</kw>
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>0</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:51.098" level="INFO">${button_string} = rgb(220, 53, 69</msg>
<status status="PASS" starttime="20230223 13:53:51.098" endtime="20230223 13:53:51.098"/>
</kw>
<if>
<branch type="IF" condition="&quot;${browser}&quot; == &quot;${driver_firefox}&quot;">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:51.099" level="INFO">${button_string} = 220, 53, 69</msg>
<status status="PASS" starttime="20230223 13:53:51.099" endtime="20230223 13:53:51.099"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.098" endtime="20230223 13:53:51.099"/>
</branch>
<branch type="ELSE">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>5</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<status status="NOT RUN" starttime="20230223 13:53:51.100" endtime="20230223 13:53:51.100"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:51.100" endtime="20230223 13:53:51.100"/>
</branch>
<status status="PASS" starttime="20230223 13:53:51.098" endtime="20230223 13:53:51.100"/>
</if>
<kw name="Split String" library="String">
<var>${rgb_list}</var>
<arg>${button_string}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230223 13:53:51.100" level="INFO">${rgb_list} = ['220', ' 53', ' 69']</msg>
<status status="PASS" starttime="20230223 13:53:51.100" endtime="20230223 13:53:51.100"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_r}</var>
<arg>${rgb_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:51.101" level="INFO">${color_r} = 220</msg>
<status status="PASS" starttime="20230223 13:53:51.101" endtime="20230223 13:53:51.101"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_g}</var>
<arg>${rgb_list}</arg>
<arg>1</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:51.102" level="INFO">${color_g} =  53</msg>
<status status="PASS" starttime="20230223 13:53:51.102" endtime="20230223 13:53:51.102"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_b}</var>
<arg>${rgb_list}</arg>
<arg>2</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:51.103" level="INFO">${color_b} =  69</msg>
<status status="PASS" starttime="20230223 13:53:51.102" endtime="20230223 13:53:51.103"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>(${color_r}&lt;=255 and ${color_r}&gt;=160) and (${color_b}&lt;=75 and ${color_b}&gt;=0) and (${color_g}&lt;=75 and ${color_g}&gt;=0)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230223 13:53:51.103" endtime="20230223 13:53:51.104"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.087" endtime="20230223 13:53:51.104"/>
</kw>
<kw name="Check button text" library="UserStory5Utility">
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:51.107" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="e8f62562-b646-45bb-bc3c-b83878f22b20", element="bd6f416d-b6ef-49bb-8323-6b895f34b068")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:51.104" endtime="20230223 13:53:51.107"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${button_element_text}</var>
<arg>${button_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:51.120" level="INFO">${button_element_text} = Dispense Now</msg>
<status status="PASS" starttime="20230223 13:53:51.108" endtime="20230223 13:53:51.120"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_element_text}</arg>
<arg>${dispenseNowMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:51.121" endtime="20230223 13:53:51.121"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.104" endtime="20230223 13:53:51.121"/>
</kw>
<kw name="Click button and validate text" library="UserStory5Utility">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${dispenseNowButtonXPath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:51.122" level="INFO">Clicking element 'xpath:/html/body/div/div[2]/div/a[2]'.</msg>
<status status="PASS" starttime="20230223 13:53:51.122" endtime="20230223 13:53:51.384"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${cashDispensedXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:51.385" endtime="20230223 13:53:51.396"/>
</kw>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${text_element}</var>
<arg>${cashDispensedXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:51.398" level="INFO">${text_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="e8f62562-b646-45bb-bc3c-b83878f22b20", element="20b04fab-b4bc-4821-99ae-9efd4c66d438")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:51.396" endtime="20230223 13:53:51.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${text_element_text}</var>
<arg>${text_element.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:51.403" level="INFO">${text_element_text} = Cash dispensed</msg>
<status status="PASS" starttime="20230223 13:53:51.399" endtime="20230223 13:53:51.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_element_text}</arg>
<arg>${cashDispensedMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:51.404" endtime="20230223 13:53:51.404"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.121" endtime="20230223 13:53:51.404"/>
</kw>
<status status="PASS" starttime="20230223 13:53:44.114" endtime="20230223 13:53:51.404"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:51.408" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:51.408" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:51 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:51.405" endtime="20230223 13:53:51.408"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:51.409" endtime="20230223 13:53:53.903"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.405" endtime="20230223 13:53:53.903"/>
</kw>
<status status="PASS" starttime="20230223 13:53:51.405" endtime="20230223 13:53:53.903"/>
</kw>
<tag>Firefox</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US5</tag>
<status status="PASS" starttime="20230223 13:53:44.113" endtime="20230223 13:53:53.904"/>
</test>
<test id="s1-s6-t3" name="Check button via Chrome" line="22">
<kw name="Check button">
<arg>${driver_chrome}</arg>
<doc>Test cases in this US5.robot file are aimed to test the webelements visible on the UI of the tax relief portal
and the subsequent redirection to another webpage</doc>
<kw name="Setup drivers" library="commonKeyword">
<arg>${browser}</arg>
<if>
<branch type="IF" condition="&quot;${browser}&quot;==&quot;Chrome&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${chromeWebdriver}</arg>
<arg>${chromeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230223 13:53:53.912" level="INFO">Environment variable 'webdriver.chrome.driver' set to value 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\TestCases/../WebDrivers/chromedriver.exe'.</msg>
<status status="PASS" starttime="20230223 13:53:53.912" endtime="20230223 13:53:53.912"/>
</kw>
<status status="PASS" starttime="20230223 13:53:53.912" endtime="20230223 13:53:53.913"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;Firefox&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${firefoxWebdriver}</arg>
<arg>${firefoxDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:53.913" endtime="20230223 13:53:53.913"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:53.913" endtime="20230223 13:53:53.913"/>
</branch>
<branch type="ELSE IF" condition="&quot;${browser}&quot;==&quot;edge&quot;">
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>${edgeWebdriver}</arg>
<arg>${edgeDriverLocation}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<status status="NOT RUN" starttime="20230223 13:53:53.914" endtime="20230223 13:53:53.914"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:53.914" endtime="20230223 13:53:53.914"/>
</branch>
<status status="PASS" starttime="20230223 13:53:53.912" endtime="20230223 13:53:53.914"/>
</if>
<status status="PASS" starttime="20230223 13:53:53.911" endtime="20230223 13:53:53.914"/>
</kw>
<kw name="Open browser and navigate to url" library="commonKeyword">
<arg>${browser}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230223 13:53:53.915" level="INFO">Creating Session using : alias=session, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230223 13:53:53.915" endtime="20230223 13:53:53.915"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${base_url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230223 13:53:53.916" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080'.</msg>
<status status="PASS" starttime="20230223 13:53:53.916" endtime="20230223 13:53:55.398"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${websiteElementIsVisibleXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:55.400" endtime="20230223 13:53:55.415"/>
</kw>
<status status="PASS" starttime="20230223 13:53:53.914" endtime="20230223 13:53:55.415"/>
</kw>
<kw name="Check button color" library="UserStory5Utility">
<arg>${browser}</arg>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:55.422" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="bf1812272fed9caefc016d934ddfa373", element="b31c59fb-c2a0-4349-a9d4-34ab19b1da12")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:55.416" endtime="20230223 13:53:55.422"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${button_color}</var>
<arg>${button_element}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20230223 13:53:55.428" level="INFO">${button_color} = rgba(220, 53, 69, 1)</msg>
<status status="PASS" starttime="20230223 13:53:55.423" endtime="20230223 13:53:55.428"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${button_string}</var>
<arg>${button_color}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230223 13:53:55.429" level="INFO">${button_string} = rgba(220, 53, 69, 1)</msg>
<status status="PASS" starttime="20230223 13:53:55.429" endtime="20230223 13:53:55.429"/>
</kw>
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>0</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:55.430" level="INFO">${button_string} = rgba(220, 53, 69, 1</msg>
<status status="PASS" starttime="20230223 13:53:55.429" endtime="20230223 13:53:55.430"/>
</kw>
<if>
<branch type="IF" condition="&quot;${browser}&quot; == &quot;${driver_firefox}&quot;">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>4</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<status status="NOT RUN" starttime="20230223 13:53:55.430" endtime="20230223 13:53:55.430"/>
</kw>
<status status="NOT RUN" starttime="20230223 13:53:55.430" endtime="20230223 13:53:55.431"/>
</branch>
<branch type="ELSE">
<kw name="Get Substring" library="String">
<var>${button_string}</var>
<arg>${button_string}</arg>
<arg>5</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230223 13:53:55.431" level="INFO">${button_string} = 220, 53, 69, 1</msg>
<status status="PASS" starttime="20230223 13:53:55.431" endtime="20230223 13:53:55.431"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.431" endtime="20230223 13:53:55.432"/>
</branch>
<status status="PASS" starttime="20230223 13:53:55.430" endtime="20230223 13:53:55.432"/>
</if>
<kw name="Split String" library="String">
<var>${rgb_list}</var>
<arg>${button_string}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230223 13:53:55.432" level="INFO">${rgb_list} = ['220', ' 53', ' 69', ' 1']</msg>
<status status="PASS" starttime="20230223 13:53:55.432" endtime="20230223 13:53:55.432"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_r}</var>
<arg>${rgb_list}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:55.433" level="INFO">${color_r} = 220</msg>
<status status="PASS" starttime="20230223 13:53:55.433" endtime="20230223 13:53:55.433"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_g}</var>
<arg>${rgb_list}</arg>
<arg>1</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:55.434" level="INFO">${color_g} =  53</msg>
<status status="PASS" starttime="20230223 13:53:55.434" endtime="20230223 13:53:55.434"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${color_b}</var>
<arg>${rgb_list}</arg>
<arg>2</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230223 13:53:55.434" level="INFO">${color_b} =  69</msg>
<status status="PASS" starttime="20230223 13:53:55.434" endtime="20230223 13:53:55.434"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>(${color_r}&lt;=255 and ${color_r}&gt;=160) and (${color_b}&lt;=75 and ${color_b}&gt;=0) and (${color_g}&lt;=75 and ${color_g}&gt;=0)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230223 13:53:55.435" endtime="20230223 13:53:55.436"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.416" endtime="20230223 13:53:55.436"/>
</kw>
<kw name="Check button text" library="UserStory5Utility">
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${button_element}</var>
<arg>${dispenseNowButtonXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:55.440" level="INFO">${button_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="bf1812272fed9caefc016d934ddfa373", element="b31c59fb-c2a0-4349-a9d4-34ab19b1da12")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:55.436" endtime="20230223 13:53:55.440"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${button_element_text}</var>
<arg>${button_element}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:55.448" level="INFO">${button_element_text} = Dispense Now</msg>
<status status="PASS" starttime="20230223 13:53:55.441" endtime="20230223 13:53:55.448"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${button_element_text}</arg>
<arg>${dispenseNowMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:55.449" endtime="20230223 13:53:55.449"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.436" endtime="20230223 13:53:55.449"/>
</kw>
<kw name="Click button and validate text" library="UserStory5Utility">
<kw name="Click Element" library="SeleniumLibrary">
<arg>${dispenseNowButtonXPath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230223 13:53:55.450" level="INFO">Clicking element 'xpath:/html/body/div/div[2]/div/a[2]'.</msg>
<status status="PASS" starttime="20230223 13:53:55.449" endtime="20230223 13:53:55.612"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${cashDispensedXPath}</arg>
<arg>timeout=5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230223 13:53:55.612" endtime="20230223 13:53:55.627"/>
</kw>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${text_element}</var>
<arg>${cashDispensedXPath}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20230223 13:53:55.631" level="INFO">${text_element} = &lt;selenium.webdriver.remote.webelement.WebElement (session="bf1812272fed9caefc016d934ddfa373", element="9455f7be-2372-467a-ae80-4742615af9f3")&gt;</msg>
<status status="PASS" starttime="20230223 13:53:55.627" endtime="20230223 13:53:55.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${text_element_text}</var>
<arg>${text_element.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230223 13:53:55.639" level="INFO">${text_element_text} = Cash dispensed</msg>
<status status="PASS" starttime="20230223 13:53:55.632" endtime="20230223 13:53:55.639"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${text_element_text}</arg>
<arg>${cashDispensedMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230223 13:53:55.640" endtime="20230223 13:53:55.641"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.449" endtime="20230223 13:53:55.641"/>
</kw>
<status status="PASS" starttime="20230223 13:53:53.911" endtime="20230223 13:53:55.641"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Teardown</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Teardown" library="commonKeyword">
<kw name="POST On Session" library="RequestsLibrary">
<arg>session</arg>
<arg>${teardown_rake}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20230223 13:53:55.645" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20230223 13:53:55.645" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Thu, 23 Feb 2023 05:53:54 GMT'} 
 body=Successfully raked DB 
 </msg>
<status status="PASS" starttime="20230223 13:53:55.642" endtime="20230223 13:53:55.645"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230223 13:53:55.646" endtime="20230223 13:53:57.798"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.642" endtime="20230223 13:53:57.798"/>
</kw>
<status status="PASS" starttime="20230223 13:53:55.641" endtime="20230223 13:53:57.798"/>
</kw>
<tag>Chrome</tag>
<tag>Functional</tag>
<tag>Positive</tag>
<tag>Smoke</tag>
<tag>US5</tag>
<status status="PASS" starttime="20230223 13:53:53.911" endtime="20230223 13:53:57.798"/>
</test>
<status status="PASS" starttime="20230223 13:53:39.760" endtime="20230223 13:53:57.805"/>
</suite>
<status status="FAIL" starttime="20230223 13:47:36.330" endtime="20230223 13:53:57.814"/>
</suite>
<statistics>
<total>
<stat pass="100" fail="45" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="11" fail="3" skip="0">AgeFilter</stat>
<stat pass="13" fail="5" skip="0">Chrome</stat>
<stat pass="13" fail="5" skip="0">Edge</stat>
<stat pass="13" fail="5" skip="0">Firefox</stat>
<stat pass="100" fail="45" skip="0">Functional</stat>
<stat pass="8" fail="1" skip="0">GenderFilter</stat>
<stat pass="4" fail="2" skip="0">MinReliefFilter</stat>
<stat pass="71" fail="41" skip="0">Negative</stat>
<stat pass="29" fail="4" skip="0">Positive</stat>
<stat pass="5" fail="3" skip="0">RoundingFilter</stat>
<stat pass="25" fail="2" skip="0">Smoke</stat>
<stat pass="16" fail="10" skip="0">US1</stat>
<stat pass="17" fail="11" skip="0">US2</stat>
<stat pass="36" fail="15" skip="0">US3</stat>
<stat pass="28" fail="9" skip="0">US4</stat>
<stat pass="3" fail="0" skip="0">US5</stat>
</tag>
<suite>
<stat pass="100" fail="45" skip="0" id="s1" name="TestCases">TestCases</stat>
<stat pass="16" fail="10" skip="0" id="s1-s1" name="UserStory1">TestCases.UserStory1</stat>
<stat pass="17" fail="11" skip="0" id="s1-s2" name="UserStory2">TestCases.UserStory2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="UserStory3">TestCases.UserStory3</stat>
<stat pass="33" fail="15" skip="0" id="s1-s4" name="UserStory3invalid">TestCases.UserStory3invalid</stat>
<stat pass="28" fail="9" skip="0" id="s1-s5" name="UserStory4">TestCases.UserStory4</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="UserStory5">TestCases.UserStory5</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230223 13:47:36.351" level="ERROR">Error in file 'C:\Users\ECQ1046\PycharmProjects\oppenheimerNPHC\Modules\commonKeyword.robot' on line 9: Setting 'Test Teardown' is not allowed in resource file.</msg>
<msg timestamp="20230223 13:53:38.060" level="WARN">Multiple tests with name 'Valid data gender:m' executed in suite 'TestCases.UserStory4'.</msg>
<msg timestamp="20230223 13:53:38.139" level="WARN">Multiple tests with name 'Valid data gender:f' executed in suite 'TestCases.UserStory4'.</msg>
</errors>
</robot>
